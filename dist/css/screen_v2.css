@charset "UTF-8";
/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

/* Reset */
html, body, section, nav, article, aside, h1, h2, h3, h4, h5, h6, hgroup, header, footer, address,
p, hr, pre, blockquote, ol, ul, li, dl, dt, dd, figure, figcaption, div,
a, em, strong, small, s, cite, q, dfn, abbr, time, code, var, samp, kbd, i, b, mark, span, br,
ins, del,
img, iframe, embed, object, video, audio, canvas, map, area,
table, caption, colgroup, tbody, thead, tfoot, tr, td, th,
form, fieldset, legend, label, input, button, select, textarea,
details, summary, command, menu {
  vertical-align: baseline;
  margin: 0;
  padding: 0; }

table {
  border-collapse: collapse;
  border-spacing: 0;
  font-size: 100%; }

.nobr {
  white-space: nowrap;
  -ms-hyphens: manual;
  -mov-hyphens: manual;
  -webkit-hyphens: manual;
  hyphens: manual; }

.paren {
  font-style: normal; }

.highlight, mark {
  background-color: rgba(255, 255, 0, 0.5); }

/* end Reset */
/*
 * Remove text-shadow in selection highlight:
 * https://twitter.com/miketaylr/status/12228805301
 *
 * Vendor-prefixed and regular ::selection selectors cannot be combined:
 * https://stackoverflow.com/a/16982510/7133471
 *
 * Customize the background color to match your design.
 */
::-moz-selection {
  background: #b3d4fc;
  text-shadow: none; }

::selection {
  background: #b3d4fc;
  text-shadow: none; }

/*
 * A better looking default horizontal rule
 */
hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #ccc;
  margin: 1em 0;
  padding: 0; }

/*
 * Remove the gap between audio, canvas, iframes,
 * images, videos and the bottom of their containers:
 * https://github.com/h5bp/html5-boilerplate/issues/440
 */
audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle; }

/*
 * Remove default fieldset styles.
 */
fieldset {
  border: 0;
  margin: 0;
  padding: 0; }

/*
 * Allow only vertical resizing of textareas.
 */
textarea {
  resize: vertical; }

/* ==========================================================================
   Browser Upgrade Prompt
   ========================================================================== */
.browserupgrade {
  margin: 0.2em 0;
  background: #ccc;
  color: #000;
  padding: 0.2em 0; }

/* ==========================================================================
   Helper classes
   ========================================================================== */
/*
 * Hide visually and from screen readers
 */
.hidden {
  display: none !important; }

/*
 * Hide only visually, but have it available for screen readers:
 * https://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 *
 * 1. For long content, line feeds are not interpreted as spaces and small width
 *    causes content to wrap 1 word per line:
 *    https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
 */
.visuallyhidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
  white-space: nowrap;
  /* 1 */ }

/*
 * Extends the .visuallyhidden class to allow the element
 * to be focusable when navigated to via the keyboard:
 * https://www.drupal.org/node/897638
 */
.visuallyhidden.focusable:active,
.visuallyhidden.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  width: auto;
  white-space: inherit; }

/*
 * Hide visually and from screen readers, but maintain layout
 */
.invisible {
  visibility: hidden; }

/*
 * Clearfix: contain floats
 *
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that receive the `clearfix` class.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */
.clearfix:before,
.clearfix:after {
  content: " ";
  /* 1 */
  display: table;
  /* 2 */ }

.clearfix:after {
  clear: both; }

/* ==========================================================================
   Print styles.
   Inlined to avoid the additional HTTP request:
   https://www.phpied.com/delay-loading-your-print-css/
   ========================================================================== */
@media print {
  *,
  *:before,
  *:after {
    background: transparent !important;
    color: #000 !important;
    /* Black prints faster */
    box-shadow: none !important;
    text-shadow: none !important; }
  a,
  a:visited {
    text-decoration: underline; }
  a[href]:after {
    content: " (" attr(href) ")"; }
  abbr[title]:after {
    content: " (" attr(title) ")"; }
  /*
     * Don't show links that are fragment identifiers,
     * or use the `javascript:` pseudo protocol
     */
  a[href^="#"]:after,
  a[href^="javascript:"]:after {
    content: ""; }
  pre {
    white-space: pre-wrap !important; }
  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid; }
  /*
     * Printing Tables:
     * http://css-discuss.incutio.com/wiki/Printing_Tables
     */
  thead {
    display: table-header-group; }
  tr,
  img {
    page-break-inside: avoid; }
  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3; }
  h2,
  h3 {
    page-break-after: avoid; } }

.group:after {
  content: "";
  display: table;
  clear: both; }

html {
  box-sizing: border-box; }

*,
*:before,
*:after {
  box-sizing: inherit; }

:focus-visible {
  outline: thin solid #1e8b8e;
  outline-offset: .25rem; }

:focus:not(:focus-visible) {
  outline: none; }

/*
Thin (normally 100)
Extra Light  (normally 200)
Light (normally 300)
Book  (?)
Regular (normally 400)
Core (?)
Medium  (normally 500)
SemiBold (normally 600)
Bold (normally 700)
ExtraBold (normally 800)
Heavy (normally 900)
*/
@font-face {
  font-family: 'FSEmeric';
  src: url("/fonts/fsemericwebextralight/FSEmericWeb-ExtraLight.eot");
  /* IE9 */
  src: url("/fonts/fsemericwebextralight/FSEmericWeb-ExtraLight.eot?#iefix") format("embedded-opentype"), url("/fonts/fsemericwebextralight/FSEmericWeb-ExtraLight.woff") format("woff");
  /* Modern Browsers */
  font-weight: 200;
  font-style: normal; }

@font-face {
  font-family: 'FSEmeric';
  src: url("/fonts/fsemericwebextralightitalic/FSEmericWeb-ExtraLightItalic.eot");
  /* IE9 */
  src: url("/fonts/fsemericwebextralightitalic/FSEmericWeb-ExtraLightItalic.eot?#iefix") format("embedded-opentype"), url("/fonts/fsemericwebextralightitalic/FSEmericWeb-ExtraLightItalic.woff") format("woff");
  /* Modern Browsers */
  font-weight: 200;
  font-style: italic; }

@font-face {
  font-family: 'FSEmeric';
  src: url("/fonts/fsemericwebbook/FSEmericWeb-Book.eot");
  src: url("/fonts/fsemericwebbook/FSEmericWeb-Book.eot?#iefix") format("embedded-opentype"), url("/fonts/fsemericwebbook/FSEmericWeb-Book.woff") format("woff");
  font-weight: 400;
  font-style: normal; }

@font-face {
  font-family: 'FSEmeric';
  src: url("/fonts/fsemericwebbookitalic/FSEmericWeb-BookItalic.eot");
  src: url("/fonts/fsemericwebbookitalic/FSEmericWeb-BookItalic.eot?#iefix") format("embedded-opentype"), url("/fonts/fsemericwebbookitalic/FSEmericWeb-BookItalic.woff") format("woff");
  font-weight: 400;
  font-style: italic; }

/*@font-face {
    font-family: 'FSEmeric';
    src: url('/fonts/fsemericwebregular/FSEmericWeb-Regular.eot');
    src: url('/fonts/fsemericwebregular/FSEmericWeb-Regular.eot?#iefix') format('embedded-opentype'),
    url('/fonts/fsemericwebregular/FSEmericWeb-Regular.woff') format('woff');
    font-weight: 400;
    font-style: normal;
}
@font-face {
    font-family: 'FSEmeric';
    src: url('/fonts/fsemericwebitalic/FSEmericWeb-Italic.eot');
    src: url('/fonts/fsemericwebitalic/FSEmericWeb-Italic.eot?#iefix') format('embedded-opentype'),
    url('/fonts/fsemericwebitalic/FSEmericWeb-Italic.woff') format('woff');
    font-weight: 400;
    font-style: italic;
}*/
@font-face {
  font-family: 'FSEmeric';
  src: url("/fonts/fsemericwebsemibold/FSEmericWeb-SemiBold.eot");
  /* IE9 */
  src: url("/fonts/fsemericwebsemibold/FSEmericWeb-SemiBold.eot?#iefix") format("embedded-opentype"), url("/fonts/fsemericwebsemibold/FSEmericWeb-SemiBold.woff") format("woff");
  /* Modern Browsers */
  font-weight: 600;
  font-style: normal; }

@font-face {
  font-family: 'FSEmeric';
  src: url("/fonts/fsemericwebsemibolditalic/FSEmericWeb-SemiBoldItalic.eot");
  /* IE9 */
  src: url("/fonts/fsemericwebsemibolditalic/FSEmericWeb-SemiBoldItalic.eot?#iefix") format("embedded-opentype"), url("/fonts/fsemericwebsemibolditalic/FSEmericWeb-SemiBoldItalic.woff") format("woff");
  /* Modern Browsers */
  font-weight: 600;
  font-style: italic; }

@font-face {
  font-family: 'FSEmeric';
  src: url("/fonts/fsemericwebbold/FSEmericWeb-Bold.eot");
  /* IE9 */
  src: url("/fonts/fsemericwebbold/FSEmericWeb-Bold.eot?#iefix") format("embedded-opentype"), url("/fonts/fsemericwebbold/FSEmericWeb-Bold.woff") format("woff");
  /* Modern Browsers */
  font-weight: 700;
  font-style: normal; }

@font-face {
  font-family: 'FSEmeric';
  src: url("/fonts/fsemericwebbolditalic/FSEmericWeb-BoldItalic.eot");
  /* IE9 */
  src: url("/fonts/fsemericwebbolditalic/FSEmericWeb-BoldItalic.eot?#iefix") format("embedded-opentype"), url("/fonts/fsemericwebbolditalic/FSEmericWeb-BoldItalic.woff") format("woff");
  /* Modern Browsers */
  font-weight: 700;
  font-style: italic; }

html {
  color: #222222;
  font-family: "FSEmeric", sans-serif; }
  @media only screen and (min-width: 60em) {
    html {
      font-size: 112.5%; } }
  @media only screen and (min-width: 90em) {
    html {
      /*font-size: 137.5%; // =1.375em (so 1rem (and 1em on any element without a dedicated font-size) = 22px)*/
      font-size: 131.25%; } }

body {
  -webkit-font-feature-settings: "liga" 1;
          font-feature-settings: "liga" 1;
  -webkit-font-feature-settings: "onum" 1;
          font-feature-settings: "onum" 1;
  line-height: 1.4;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility; }
  @media only screen and (min-width: 60em) {
    body {
      line-height: 1.4; } }

@supports ((-webkit-font-variant-ligatures: common-ligatures) or (font-variant-ligatures: common-ligatures)) {
  body {
    -webkit-font-feature-settings: normal;
            font-feature-settings: normal;
    -webkit-font-variant-ligatures: common-ligatures;
            font-variant-ligatures: common-ligatures; } }

@supports (font-variant-numeric: oldstyle-nums) {
  body {
    -webkit-font-feature-settings: normal;
            font-feature-settings: normal;
    font-variant-numeric: oldstyle-nums; } }

a {
  color: #1e8b8e;
  text-decoration-skip-ink: none; }
  a:hover {
    color: #0c393a;
    text-decoration: underline; }

small {
  font-size: 12px;
  font-size: 0.75rem; }
  @media only screen and (min-width: 60em) {
    small {
      font-size: 12px;
      font-size: 0.75rem; } }
  @media only screen and (min-width: 90em) {
    small {
      font-size: 12px;
      font-size: 0.75rem; } }

p {
  margin: 0.7em 0;
  font-weight: 400; }

@media only screen and (min-width: 90em) {
  [role=complementary] p {
    font-size: 85.7142857143%; } }

blockquote,
ul,
ol,
dl {
  margin: 0.7em 0; }

ul ul,
ol ol {
  margin-top: 0; }

li {
  list-style-position: inside; }

ul li {
  padding-left: .75em; }
  ul li li {
    padding-left: 1.5em; }

@media only screen and (min-width: 60em) {
  ol {
    list-style: none;
    counter-reset: mylist; }
    ol li {
      list-style-position: outside; }
      ol li::before {
        counter-increment: mylist;
        content: counter(mylist);
        margin-left: -1.25em;
        margin-right: .75em; } }

dt {
  font-weight: 600;
  margin: 0.7em 0 0; }

dd {
  margin-bottom: 0.7em; }

abbr, code.markup.element, code.markup.attribute {
  text-decoration: none;
  font-family: inherit;
  font-variant: all-small-caps; }

h1, h2, h3, h4, h5, h6 {
  color: #222222;
  font-family: "FSEmeric", sans-serif;
  -webkit-font-feature-settings: "dlig" 1;
          font-feature-settings: "dlig" 1; }
  @supports ((-webkit-font-variant-ligatures: discretionary-ligatures) or (font-variant-ligatures: discretionary-ligatures)) {
    h1 .dlig, h2 .dlig, h3 .dlig, h4 .dlig, h5 .dlig, h6 .dlig {
      -webkit-font-feature-settings: normal;
              font-feature-settings: normal;
      -webkit-font-variant-ligatures: discretionary-ligatures;
              font-variant-ligatures: discretionary-ligatures; } }

h6,
h5,
h4 {
  font-weight: 200;
  font-size: 16px;
  font-size: 1rem;
  line-height: 1.4;
  margin: 1.4em 0;
  /*@include breakpoint(bp-medium) {
        @include font-size-to-rem($bp-m-base-font-size, $bp-m-base-font-size);
        line-height: $bp-m-base-line-height;
        @include rhythmic-vertical-margins($bp-m-base-font-size, $bp-m-px-base-line-height);
    }
    @include breakpoint(bp-large) {
        @include font-size-to-rem($bp-l-base-font-size, $bp-l-base-font-size);
        line-height: $bp-l-base-line-height;
        @include rhythmic-vertical-margins($bp-l-base-font-size, $bp-l-px-base-line-height);
    }*/ }


h3 {
  font-weight: 200;
  /*letter-spacing: -0.02em;*/
  font-size: 21px;
  font-size: 1.3125rem;
  margin: 1.0666666667em 0;
  line-height: 1.0666666667;
  /*@include breakpoint(bp-medium) {
        @include font-size-to-rem(25, $bp-m-base-font-size);
        //@include rhythmic-line-height(25, $bp-m-px-base-line-height * 1.25); // under 1 so dangerously tight: watch it.

        @include rhythmic-line-height(25, $bp-m-px-base-line-height); //line-height: 1;

        @include rhythmic-vertical-margins(25, $bp-m-px-base-line-height);
    }
    @include breakpoint(bp-large) {
        @include font-size-to-rem(28, $bp-l-base-font-size);
        @include rhythmic-line-height(28, $bp-l-px-base-line-height);
        @include rhythmic-vertical-margins(28, $bp-l-px-base-line-height);
    }*/ }

.hfeed .hentry a h3,
h2 {
  font-weight: 600;
  /*letter-spacing: -0.02em;*/
  font-size: 25px;
  font-size: 1.5625rem;
  margin: 0.896em 0;
  line-height: 0.896;
  /*    @include breakpoint(bp-medium) {
        @include font-size-to-rem(33, $bp-m-base-font-size);
        //@include rhythmic-line-height(33, $bp-m-px-base-line-height * 1.25);
        line-height: 1;

        @include rhythmic-vertical-margins(33, $bp-m-px-base-line-height);
    }
    @include breakpoint(bp-xlarge) {
        @include font-size-to-rem(44, $bp-l-base-font-size);
        //@include rhythmic-line-height(44, $bp-l-px-base-line-height * 1.75);

        line-height: 1;

        @include rhythmic-vertical-margins(44, $bp-l-px-base-line-height);
    }*/ }


h1 {
  font-weight: 700;
  letter-spacing: -0.02em;
  font-size: 33px;
  font-size: 2.0625rem;
  margin: 0.6787878788em 0;
  line-height: 0.6787878788;
  line-height: 1.3575757576;
  /*    @include breakpoint(bp-medium) {
        @include font-size-to-rem(51, $bp-m-base-font-size);
        //@include rhythmic-line-height(51, $bp-m-px-base-line-height * 2.25);
        line-height: 1;
        @include rhythmic-vertical-margins(51, $bp-m-px-base-line-height);
    }
    @include breakpoint(bp-xlarge) {
        @include font-size-to-rem(78, $bp-l-base-font-size);
        //@include rhythmic-line-height(78, $bp-m-px-base-line-height * 3.25);
        line-height: 1;
        @include rhythmic-vertical-margins(78, $bp-l-px-base-line-height);
    }*/ }
  
  h1 a {
    color: #222222;
    text-decoration: none; }

[role=contentinfo] small {
  display: block;
  margin: 0.7em 0;
  line-height: 1.8666666667;
  margin: 1.8666666667em 0;
  /*@include breakpoint(bp-medium) {
            @include rhythmic-line-height($smallest-font-size, $bp-m-px-base-line-height);
            @include rhythmic-vertical-margins($smallest-font-size, $bp-m-px-base-line-height);
        }
        @include breakpoint(bp-large) {
            @include font-size-to-rem($bp-l-base-font-size, $bp-l-base-font-size);
            @include rhythmic-line-height($smallest-font-size, $bp-l-px-base-line-height);
            @include rhythmic-vertical-margins($smallest-font-size, $bp-l-px-base-line-height);
        }*/ }

blockquote p {
  font-style: italic;
  hanging-punctuation: first last;
  quotes: '“' '”' '‘' '’'; }
  blockquote p:first-of-type::before {
    content: open-quote;
    /*margin-left: -0.83ch;*/ }

blockquote footer .cite-and-pubdate {
  display: block; }

@supports (hanging-punctuation: first last) {
  blockquote p:first-of-type::before {
    margin-left: 0; } }

blockquote p:last-of-type::after {
  content: close-quote; }

blockquote p:last-of-type {
  margin-bottom: 0; }

figure {
  margin: 0.7em 0; }

figcaption {
  font-size: 12px;
  font-size: 0.75rem;
  line-height: 1.8666666667;
  color: #959595;
  /*margin: 0; //@include rhythmic-vertical-margins($smallest-font-size);*/
  /*@include breakpoint(bp-medium) {
        @include font-size-to-rem($bp-m-base-font-size, $bp-m-base-font-size);
        line-height: $bp-m-base-line-height;
        @include rhythmic-vertical-margins($bp-m-base-font-size, $bp-m-px-base-line-height);
    }
    @include breakpoint(bp-large) {
        @include font-size-to-rem($bp-l-base-font-size, $bp-l-base-font-size);
        line-height: $bp-l-base-line-height;
        @include rhythmic-vertical-margins($bp-l-base-font-size, $bp-l-px-base-line-height);
    }*/ }

article p,
article li,
article dt,
article dd {
  -webkit-hyphens: auto;
      -ms-hyphens: auto;
          hyphens: auto; }

@supports (-webkit-initial-letter: 2) {
  .article-body::first-letter {
    -webkit-initial-letter: 2;
    initial-letter: 2;
    font-weight: bold;
    margin-right: .125em; } }

.more-posts {
  display: block;
  margin: 0.7em 0;
  line-height: 1.8666666667;
  margin: 1.8666666667em 0;
  text-align: center; }

.date,
.hfeed .hentry a .date {
  color: #959595; }

.hfeed,
.hfeed li {
  list-style: none;
  padding-left: 0; }

.hfeed .hentry {
  background: linear-gradient(#eee, #eee) no-repeat bottom center/12.5% 0.2ch;
  padding-bottom: 2.8em;
  margin-bottom: 2.8em;
  /*@include breakpoint(bp-medium) {
        margin-bottom: $bp-m-base-line-height*2+em;
    }
    @include breakpoint(bp-xlarge) {
        margin-bottom: $bp-l-base-line-height*2+em;
    }*/ }
  .hfeed .hentry:last-child {
    background: none; }
  .hfeed .hentry a {
    text-decoration: none;
    /*        .entry-published {
            color: $color-main;
        }*/ }
    .hfeed .hentry a h3 {
      color: #1e8b8e; }
    .hfeed .hentry a img {
      display: block;
      margin: 1.4em 0 1.4em/2; }
    .hfeed .hentry a .description p {
      color: #222222;
      margin-bottom: 0; }

input {
  max-width: 100%; }

.comment-form {
  display: none; }

img {
  max-width: 100%; }

table {
  font-variant-numeric: lining-nums tabular-nums;
  margin: 0.7em 0; }

tfoot {
  display: none; }

.fig-table {
  max-width: 100%;
  overflow-x: scroll; }

[role=alert],
.message,
.alert-success,
.alert-error {
  color: #31708f;
  background-color: #d9edf7;
  border-color: #bce8f1; }

.alert-success {
  color: #3c763d;
  background-color: #dff0d8;
  border-color: #d6e9c6; }

.alert-error {
  color: #a94442;
  background-color: #f2dede;
  border-color: #ebccd1; }

[role=tab] {
  display: inline-block; }

[role=tab][aria-selected=true] {
  background: tomato; }

[role=tabpanel] {
  display: none; }

[role=tabpanel][aria-expanded=true] {
  display: block; }

/* Embed Video and other media */
.embed-container {
  margin: 1.4em 0;
  position: relative;
  padding-bottom: 56.25%;
  height: 0;
  overflow: hidden;
  max-width: 100%; }

.embed-container iframe, .embed-container object, .embed-container embed {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%; }

[role=banner] {
  max-width: 32rem;
  margin: 0 auto;
  width: 90%; }

#logo {
  background-image: url("../img/logo_roundel_v2.png");
  background-repeat: no-repeat;
  background-position: 50% 50%;
  text-indent: -9999999px;
  width: 88px;
  line-height: 5.6em;
  margin: 0.7em 0; }
  @media (-webkit-min-device-pixel-ratio: 1.5), (min--moz-device-pixel-ratio: 1.5), (min-device-pixel-ratio: 1.5), (min-resolution: 1.5dppx) {
    #logo {
      background-image: url("../img/logo_roundel_v2@2x.png");
      background-size: 88px 88px; } }

[role=navigation] {
  display: flex;
  flex-direction: column; }
  [role=navigation] #logo {
    align-self: center; }
  [role=navigation] ul {
    list-style: none;
    margin: 0 0 1.4em 0;
    padding: 0;
    display: flex;
    justify-content: space-between; }
    [role=navigation] ul li {
      margin: 0;
      padding: 0; }
    [role=navigation] ul a {
      display: block;
      text-transform: uppercase;
      text-decoration: none;
      font-weight: 700;
      font-size: 14px;
      font-size: 0.875rem;
      line-height: 1.6; }

main {
  max-width: 32rem;
  margin: 0 auto;
  width: 90%; }

[role=complementary] {
  max-width: 32rem;
  margin: 0 auto;
  width: 90%; }

[role=contentinfo] {
  max-width: 32rem;
  margin: 0 auto;
  width: 90%; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
