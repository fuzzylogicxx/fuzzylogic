/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

/* Reset */
html, body, section, nav, article, aside, h1, h2, h3, h4, h5, h6, hgroup, header, footer, address,
p, hr, pre, blockquote, ol, ul, li, dl, dt, dd, figure, figcaption, div,
a, em, strong, small, s, cite, q, dfn, abbr, time, code, var, samp, kbd, i, b, mark, span, br,
ins, del,
img, iframe, embed, object, video, audio, canvas, map, area,
table, caption, colgroup, tbody, thead, tfoot, tr, td, th,
form, fieldset, legend, label, input, button, select, textarea,
details, summary, command, menu {
  vertical-align: baseline;
  margin: 0;
  padding: 0; }

table {
  border-collapse: collapse;
  border-spacing: 0;
  font-size: 100%; }

.nobr {
  white-space: nowrap;
  -ms-hyphens: manual;
  -mov-hyphens: manual;
  -webkit-hyphens: manual;
  hyphens: manual; }

.paren {
  font-style: normal; }

.highlight, mark {
  background-color: rgba(255, 255, 0, 0.5); }

/* end Reset */
/*
 * Remove text-shadow in selection highlight:
 * https://twitter.com/miketaylr/status/12228805301
 *
 * Vendor-prefixed and regular ::selection selectors cannot be combined:
 * https://stackoverflow.com/a/16982510/7133471
 *
 * Customize the background color to match your design.
 */
::-moz-selection {
  background: #b3d4fc;
  text-shadow: none; }

::selection {
  background: #b3d4fc;
  text-shadow: none; }

/*
 * A better looking default horizontal rule
 */
hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #ccc;
  margin: 1em 0;
  padding: 0; }

/*
 * Remove the gap between audio, canvas, iframes,
 * images, videos and the bottom of their containers:
 * https://github.com/h5bp/html5-boilerplate/issues/440
 */
audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle; }

/*
 * Remove default fieldset styles.
 */
fieldset {
  border: 0;
  margin: 0;
  padding: 0; }

/*
 * Allow only vertical resizing of textareas.
 */
textarea {
  resize: vertical; }

/* ==========================================================================
   Browser Upgrade Prompt
   ========================================================================== */
.browserupgrade {
  margin: 0.2em 0;
  background: #ccc;
  color: #000;
  padding: 0.2em 0; }

/* ==========================================================================
   Helper classes
   ========================================================================== */
/*
 * Hide visually and from screen readers
 */
.hidden {
  display: none !important; }

/*
 * Hide only visually, but have it available for screen readers:
 * https://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 *
 * 1. For long content, line feeds are not interpreted as spaces and small width
 *    causes content to wrap 1 word per line:
 *    https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
 */
.visuallyhidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
  white-space: nowrap;
  /* 1 */ }

/*
 * Extends the .visuallyhidden class to allow the element
 * to be focusable when navigated to via the keyboard:
 * https://www.drupal.org/node/897638
 */
.visuallyhidden.focusable:active,
.visuallyhidden.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  width: auto;
  white-space: inherit; }

/*
 * Hide visually and from screen readers, but maintain layout
 */
.invisible {
  visibility: hidden; }

/*
 * Clearfix: contain floats
 *
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that receive the `clearfix` class.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */
.clearfix:before,
.clearfix:after {
  content: " ";
  /* 1 */
  display: table;
  /* 2 */ }

.clearfix:after {
  clear: both; }

/* ==========================================================================
   Print styles.
   Inlined to avoid the additional HTTP request:
   https://www.phpied.com/delay-loading-your-print-css/
   ========================================================================== */
@media print {
  *,
  *:before,
  *:after {
    background: transparent !important;
    color: #000 !important;
    /* Black prints faster */
    box-shadow: none !important;
    text-shadow: none !important; }
  a,
  a:visited {
    text-decoration: underline; }
  a[href]:after {
    content: " (" attr(href) ")"; }
  abbr[title]:after {
    content: " (" attr(title) ")"; }
  /*
     * Don't show links that are fragment identifiers,
     * or use the `javascript:` pseudo protocol
     */
  a[href^="#"]:after,
  a[href^="javascript:"]:after {
    content: ""; }
  pre {
    white-space: pre-wrap !important; }
  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid; }
  /*
     * Printing Tables:
     * http://css-discuss.incutio.com/wiki/Printing_Tables
     */
  thead {
    display: table-header-group; }
  tr,
  img {
    page-break-inside: avoid; }
  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3; }
  h2,
  h3 {
    page-break-after: avoid; } }

.group:after {
  content: "";
  display: table;
  clear: both; }

html {
  box-sizing: border-box; }

*,
*:before,
*:after {
  box-sizing: inherit; }

/*
Thin (normally 100)
Extra Light  (normally 200)
Light (normally 300)
Book  (?)
Regular (normally 400)
Core (?)
Medium  (normally 500)
SemiBold (normally 600)
Bold (normally 700)
ExtraBold (normally 800)
Heavy (normally 900)
*/
@font-face {
  font-family: 'FSEmeric';
  src: url("/fonts/fsemericwebextralight/FSEmericWeb-ExtraLight.eot");
  /* IE9 */
  src: url("/fonts/fsemericwebextralight/FSEmericWeb-ExtraLight.eot?#iefix") format("embedded-opentype"), url("/fonts/fsemericwebextralight/FSEmericWeb-ExtraLight.woff") format("woff");
  /* Modern Browsers */
  font-weight: 200;
  font-style: normal; }

@font-face {
  font-family: 'FSEmeric';
  src: url("/fonts/fsemericwebextralightitalic/FSEmericWeb-ExtraLightItalic.eot");
  /* IE9 */
  src: url("/fonts/fsemericwebextralightitalic/FSEmericWeb-ExtraLightItalic.eot?#iefix") format("embedded-opentype"), url("/fonts/fsemericwebextralightitalic/FSEmericWeb-ExtraLightItalic.woff") format("woff");
  /* Modern Browsers */
  font-weight: 200;
  font-style: italic; }

@font-face {
  font-family: 'FSEmeric';
  src: url("/fonts/fsemericwebbook/FSEmericWeb-Book.eot");
  src: url("/fonts/fsemericwebbook/FSEmericWeb-Book.eot?#iefix") format("embedded-opentype"), url("/fonts/fsemericwebbook/FSEmericWeb-Book.woff") format("woff");
  font-weight: 400;
  font-style: normal; }

@font-face {
  font-family: 'FSEmeric';
  src: url("/fonts/fsemericwebbookitalic/FSEmericWeb-BookItalic.eot");
  src: url("/fonts/fsemericwebbookitalic/FSEmericWeb-BookItalic.eot?#iefix") format("embedded-opentype"), url("/fonts/fsemericwebbookitalic/FSEmericWeb-BookItalic.woff") format("woff");
  font-weight: 400;
  font-style: italic; }

/*@font-face {
    font-family: 'FSEmeric';
    src: url('/fonts/fsemericwebregular/FSEmericWeb-Regular.eot');
    src: url('/fonts/fsemericwebregular/FSEmericWeb-Regular.eot?#iefix') format('embedded-opentype'),
    url('/fonts/fsemericwebregular/FSEmericWeb-Regular.woff') format('woff');
    font-weight: 400;
    font-style: normal;
}
@font-face {
    font-family: 'FSEmeric';
    src: url('/fonts/fsemericwebitalic/FSEmericWeb-Italic.eot');
    src: url('/fonts/fsemericwebitalic/FSEmericWeb-Italic.eot?#iefix') format('embedded-opentype'),
    url('/fonts/fsemericwebitalic/FSEmericWeb-Italic.woff') format('woff');
    font-weight: 400;
    font-style: italic;
}*/
@font-face {
  font-family: 'FSEmeric';
  src: url("/fonts/fsemericwebsemibold/FSEmericWeb-SemiBold.eot");
  /* IE9 */
  src: url("/fonts/fsemericwebsemibold/FSEmericWeb-SemiBold.eot?#iefix") format("embedded-opentype"), url("/fonts/fsemericwebsemibold/FSEmericWeb-SemiBold.woff") format("woff");
  /* Modern Browsers */
  font-weight: 600;
  font-style: normal; }

@font-face {
  font-family: 'FSEmeric';
  src: url("/fonts/fsemericwebsemibolditalic/FSEmericWeb-SemiBoldItalic.eot");
  /* IE9 */
  src: url("/fonts/fsemericwebsemibolditalic/FSEmericWeb-SemiBoldItalic.eot?#iefix") format("embedded-opentype"), url("/fonts/fsemericwebsemibolditalic/FSEmericWeb-SemiBoldItalic.woff") format("woff");
  /* Modern Browsers */
  font-weight: 600;
  font-style: italic; }

@font-face {
  font-family: 'FSEmeric';
  src: url("/fonts/fsemericwebbold/FSEmericWeb-Bold.eot");
  /* IE9 */
  src: url("/fonts/fsemericwebbold/FSEmericWeb-Bold.eot?#iefix") format("embedded-opentype"), url("/fonts/fsemericwebbold/FSEmericWeb-Bold.woff") format("woff");
  /* Modern Browsers */
  font-weight: 700;
  font-style: normal; }

@font-face {
  font-family: 'FSEmeric';
  src: url("/fonts/fsemericwebbolditalic/FSEmericWeb-BoldItalic.eot");
  /* IE9 */
  src: url("/fonts/fsemericwebbolditalic/FSEmericWeb-BoldItalic.eot?#iefix") format("embedded-opentype"), url("/fonts/fsemericwebbolditalic/FSEmericWeb-BoldItalic.woff") format("woff");
  /* Modern Browsers */
  font-weight: 700;
  font-style: italic; }

html {
  color: #222222;
  font-family: "FSEmeric", sans-serif; }
  @media only screen and (min-width: 60em) {
    html {
      font-size: 112.5%; } }
  @media only screen and (min-width: 90em) {
    html {
      /*font-size: 137.5%; // =1.375em (so 1rem (and 1em on any element without a dedicated font-size) = 22px)*/
      font-size: 131.25%; } }

body {
  -webkit-font-feature-settings: "liga" 1;
          font-feature-settings: "liga" 1;
  -webkit-font-feature-settings: "onum" 1;
          font-feature-settings: "onum" 1;
  line-height: 1.4;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility; }
  @media only screen and (min-width: 60em) {
    body {
      line-height: 1.4; } }

@supports ((-webkit-font-variant-ligatures: common-ligatures) or (font-variant-ligatures: common-ligatures)) {
  body {
    -webkit-font-feature-settings: normal;
            font-feature-settings: normal;
    -webkit-font-variant-ligatures: common-ligatures;
            font-variant-ligatures: common-ligatures; } }

@supports (font-variant-numeric: oldstyle-nums) {
  body {
    -webkit-font-feature-settings: normal;
            font-feature-settings: normal;
    font-variant-numeric: oldstyle-nums; } }

a {
  color: #1e8b8e;
  text-decoration-skip-ink: none; }
  a:hover {
    color: #0c393a;
    text-decoration: underline; }

small {
  font-size: 12px;
  font-size: 0.75rem; }
  @media only screen and (min-width: 60em) {
    small {
      font-size: 12px;
      font-size: 0.75rem; } }
  @media only screen and (min-width: 90em) {
    small {
      font-size: 12px;
      font-size: 0.75rem; } }

p {
  margin: 0.7em 0;
  font-weight: 400; }

@media only screen and (min-width: 90em) {
  [role=complementary] p {
    font-size: 85.7142857143%; } }

blockquote,
ul,
ol {
  margin: 0.7em 0; }

ul ul,
ol ol {
  margin-top: 0; }

li {
  list-style-position: inside; }

ul li {
  padding-left: .75em; }
  ul li li {
    padding-left: 1.5em; }

@media only screen and (min-width: 60em) {
  ol {
    list-style: none;
    counter-reset: mylist; }
    ol li {
      list-style-position: outside; }
      ol li::before {
        counter-increment: mylist;
        content: counter(mylist);
        margin-left: -1.25em;
        margin-right: .75em; } }

dt {
  font-weight: 600; }

dd {
  margin: 0.7em 0; }

abbr, code.markup.element, code.markup.attribute {
  text-decoration: none;
  font-family: inherit;
  font-variant: all-small-caps; }

h1, h2, h3, h4, h5, h6 {
  color: #222222;
  font-family: "FSEmeric", sans-serif;
  -webkit-font-feature-settings: "dlig" 1;
          font-feature-settings: "dlig" 1; }
  @supports ((-webkit-font-variant-ligatures: discretionary-ligatures) or (font-variant-ligatures: discretionary-ligatures)) {
    h1 .dlig, h2 .dlig, h3 .dlig, h4 .dlig, h5 .dlig, h6 .dlig {
      -webkit-font-feature-settings: normal;
              font-feature-settings: normal;
      -webkit-font-variant-ligatures: discretionary-ligatures;
              font-variant-ligatures: discretionary-ligatures; } }

h6,
h5,
h4 {
  font-weight: 200;
  font-size: 16px;
  font-size: 1rem;
  line-height: 1.4;
  margin: 1.4em 0;
  /*@include breakpoint(bp-medium) {
        @include font-size-to-rem($bp-m-base-font-size, $bp-m-base-font-size);
        line-height: $bp-m-base-line-height;
        @include rhythmic-vertical-margins($bp-m-base-font-size, $bp-m-px-base-line-height);
    }
    @include breakpoint(bp-large) {
        @include font-size-to-rem($bp-l-base-font-size, $bp-l-base-font-size);
        line-height: $bp-l-base-line-height;
        @include rhythmic-vertical-margins($bp-l-base-font-size, $bp-l-px-base-line-height);
    }*/ }


h3 {
  font-weight: 200;
  /*letter-spacing: -0.02em;*/
  font-size: 21px;
  font-size: 1.3125rem;
  margin: 1.0666666667em 0;
  line-height: 1.0666666667;
  /*@include breakpoint(bp-medium) {
        @include font-size-to-rem(25, $bp-m-base-font-size);
        //@include rhythmic-line-height(25, $bp-m-px-base-line-height * 1.25); // under 1 so dangerously tight: watch it.

        @include rhythmic-line-height(25, $bp-m-px-base-line-height); //line-height: 1;

        @include rhythmic-vertical-margins(25, $bp-m-px-base-line-height);
    }
    @include breakpoint(bp-large) {
        @include font-size-to-rem(28, $bp-l-base-font-size);
        @include rhythmic-line-height(28, $bp-l-px-base-line-height);
        @include rhythmic-vertical-margins(28, $bp-l-px-base-line-height);
    }*/ }

.hfeed .hentry a h3,
h2 {
  font-weight: 600;
  /*letter-spacing: -0.02em;*/
  font-size: 25px;
  font-size: 1.5625rem;
  margin: 0.896em 0;
  line-height: 0.896;
  /*    @include breakpoint(bp-medium) {
        @include font-size-to-rem(33, $bp-m-base-font-size);
        //@include rhythmic-line-height(33, $bp-m-px-base-line-height * 1.25);
        line-height: 1;

        @include rhythmic-vertical-margins(33, $bp-m-px-base-line-height);
    }
    @include breakpoint(bp-xlarge) {
        @include font-size-to-rem(44, $bp-l-base-font-size);
        //@include rhythmic-line-height(44, $bp-l-px-base-line-height * 1.75);

        line-height: 1;

        @include rhythmic-vertical-margins(44, $bp-l-px-base-line-height);
    }*/ }


h1 {
  font-weight: 700;
  letter-spacing: -0.02em;
  font-size: 33px;
  font-size: 2.0625rem;
  margin: 0.6787878788em 0;
  line-height: 0.6787878788;
  line-height: 1.3575757576;
  /*    @include breakpoint(bp-medium) {
        @include font-size-to-rem(51, $bp-m-base-font-size);
        //@include rhythmic-line-height(51, $bp-m-px-base-line-height * 2.25);
        line-height: 1;
        @include rhythmic-vertical-margins(51, $bp-m-px-base-line-height);
    }
    @include breakpoint(bp-xlarge) {
        @include font-size-to-rem(78, $bp-l-base-font-size);
        //@include rhythmic-line-height(78, $bp-m-px-base-line-height * 3.25);
        line-height: 1;
        @include rhythmic-vertical-margins(78, $bp-l-px-base-line-height);
    }*/ }

.hfeed,
.hfeed li {
  list-style: none;
  padding-left: 0; }

.hfeed .hentry {
  background: linear-gradient(#eee, #eee) no-repeat bottom center/12.5% 0.2ch;
  padding-bottom: 2.1em;
  margin-bottom: 2.8em;
  /*@include breakpoint(bp-medium) {
        margin-bottom: $bp-m-base-line-height*2+em;
    }
    @include breakpoint(bp-xlarge) {
        margin-bottom: $bp-l-base-line-height*2+em;
    }*/ }
  .hfeed .hentry:last-child {
    background: none; }
  .hfeed .hentry a {
    text-decoration: none; }
    .hfeed .hentry a h3 {
      color: #1e8b8e; }
    .hfeed .hentry a .entry-published {
      color: #222222; }
    .hfeed .hentry a img {
      display: block;
      margin: 1.4em 0 1.4em/2; }
    .hfeed .hentry a .description p {
      color: #222222;
      margin-bottom: 0; }

input {
  max-width: 100%; }

.comment-form {
  display: none; }

img {
  max-width: 100%; }

table {
  font-variant-numeric: lining-nums tabular-nums;
  margin: 0.7em 0; }

tfoot {
  display: none; }

.fig-table {
  max-width: 100%;
  overflow-x: scroll; }

[role=alert],
.message,
.alert-success,
.alert-error {
  color: #31708f;
  background-color: #d9edf7;
  border-color: #bce8f1; }

.alert-success {
  color: #3c763d;
  background-color: #dff0d8;
  border-color: #d6e9c6; }

.alert-error {
  color: #a94442;
  background-color: #f2dede;
  border-color: #ebccd1; }

[role=tab] {
  display: inline-block; }

[role=tab][aria-selected=true] {
  background: tomato; }

[role=tabpanel] {
  display: none; }

[role=tabpanel][aria-expanded=true] {
  display: block; }

/* Embed Video and other media */
.embed-container {
  margin: 1.4em 0;
  position: relative;
  padding-bottom: 56.25%;
  height: 0;
  overflow: hidden;
  max-width: 100%; }

.embed-container iframe, .embed-container object, .embed-container embed {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%; }

[role=banner] {
  max-width: 32rem;
  margin: 0 auto;
  width: 90%; }

[role=navigation] {
  display: flex;
  flex-direction: column; }
  [role=navigation] #logo {
    align-self: center; }
  [role=navigation] ul {
    list-style: none;
    margin: 0;
    padding: 0;
    display: flex;
    justify-content: space-between; }
    [role=navigation] ul li {
      margin: 0;
      padding: 0; }

main {
  max-width: 32rem;
  margin: 0 auto;
  width: 90%; }

[role=complementary] {
  max-width: 32rem;
  margin: 0 auto;
  width: 90%; }

[role=contentinfo] {
  max-width: 32rem;
  margin: 0 auto;
  width: 90%; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NyZWVuX3YyLmNzcyIsInNvdXJjZXMiOlsic2NyZWVuX3YyLnNjc3MiLCJfbm9ybWFsaXNlLnNjc3MiLCJfcmVzZXQuc2NzcyIsIl9zZWxlY3RlZF9oNWJwX21haW5kb3Rjc3NfZ29vZGllcy5zY3NzIiwiX3ZhcmlhYmxlcy5zY3NzIiwiX21peGlucy5zY3NzIiwiX2N1c3RvbV9nZW5lcmFsLnNjc3MiLCJfZ2VuZXJhbF90eXBvZ3JhcGh5LnNjc3MiLCJfZm9ybXMuc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwibm9ybWFsaXNlLnNjc3NcIjtcbkBpbXBvcnQgXCJyZXNldC5zY3NzXCI7XG5AaW1wb3J0IFwic2VsZWN0ZWRfaDVicF9tYWluZG90Y3NzX2dvb2RpZXMuc2Nzc1wiO1xuQGltcG9ydCBcInZhcmlhYmxlcy5zY3NzXCI7XG5AaW1wb3J0IFwibWl4aW5zLnNjc3NcIjtcbkBpbXBvcnQgXCJjdXN0b21fZ2VuZXJhbC5zY3NzXCI7XG5AaW1wb3J0IFwiZ2VuZXJhbF90eXBvZ3JhcGh5LnNjc3NcIjtcbkBpbXBvcnQgXCJmb3Jtcy5zY3NzXCI7XG5cbi8vIFJlc3BvbnNpdmUgaW1hZ2VzXG5cbmltZyB7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xufVxuXG5cbi8vIFRhYmxlc1xuLy8gRm9yIGNvbnNpc3RlbmN5IGFuZCBlYXNlIG9mIHVuZGVyc3RhbmRpbmcsIG1hdGNoIHRoZSBhbGlnbm1lbnQgb2YgaGVhZGluZ3MgdG8gdGhlIGFsaWdubWVudCBvZiB0aGUgZGF0YS5cbi8vIFJpZ2h0LWFsaWduIGhlYWRpbmdzIG9mIG51bWVyaWMgZGF0YSBhbmQgbGVmdC1hbGlnbiBoZWFkaW5ncyBvZiBjb2x1bW5zIHdpdGggdGV4dC5cblxudGFibGUge1xuICAgIGZvbnQtdmFyaWFudC1udW1lcmljOiBsaW5pbmctbnVtcyB0YWJ1bGFyLW51bXM7XG4gICAgQGluY2x1ZGUgcGFyYWdyYXBoLW1hcmdpbnMoKTtcbn1cbnRmb290IHtcbiAgICBkaXNwbGF5OiBub25lO1xufVxuLmZpZy10YWJsZSB7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIG92ZXJmbG93LXg6IHNjcm9sbDtcbn1cblxuLy8gQWxlcnRzXG5cbiVhbGVydCB7XG4gICAgY29sb3I6ICMzMTcwOGY7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Q5ZWRmNztcbiAgICBib3JkZXItY29sb3I6ICNiY2U4ZjE7XG59XG5bcm9sZT1hbGVydF0sXG4ubWVzc2FnZSxcbi5hbGVydC1zdWNjZXNzLFxuLmFsZXJ0LWVycm9yIHtcbiAgICBAZXh0ZW5kICVhbGVydDtcbn1cbi5hbGVydC1zdWNjZXNzIHtcbiAgICBjb2xvcjogIzNjNzYzZDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGZmMGQ4O1xuICAgIGJvcmRlci1jb2xvcjogI2Q2ZTljNjtcbn1cbi5hbGVydC1lcnJvciB7XG4gICAgY29sb3I6ICNhOTQ0NDI7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2YyZGVkZTtcbiAgICBib3JkZXItY29sb3I6ICNlYmNjZDE7XG59XG5cbi8vIFRhYnNcblxuW3JvbGU9dGFiXSB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuW3JvbGU9dGFiXVthcmlhLXNlbGVjdGVkPXRydWVdIHtcbiAgICBiYWNrZ3JvdW5kOiB0b21hdG87XG59XG5bcm9sZT10YWJwYW5lbF0ge1xuICAgIGRpc3BsYXk6IG5vbmU7XG59XG5bcm9sZT10YWJwYW5lbF1bYXJpYS1leHBhbmRlZD10cnVlXSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8vIFV0aWxpdGllcyAvIENvbW1vblxuXG4vKiBFbWJlZCBWaWRlbyBhbmQgb3RoZXIgbWVkaWEgKi9cblxuLmVtYmVkLWNvbnRhaW5lciB7IFxuICAgIG1hcmdpbjogJGJhc2UtbGluZS1oZWlnaHQrZW0gMDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7IFxuICAgIHBhZGRpbmctYm90dG9tOiA1Ni4yNSU7IFxuICAgIGhlaWdodDogMDsgXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjsgXG4gICAgbWF4LXdpZHRoOiAxMDAlOyBcbn0gXG5cbi5lbWJlZC1jb250YWluZXIgaWZyYW1lLCAuZW1iZWQtY29udGFpbmVyIG9iamVjdCwgLmVtYmVkLWNvbnRhaW5lciBlbWJlZCB7IFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsgXG4gICAgdG9wOiAwOyBcbiAgICBsZWZ0OiAwOyBcbiAgICB3aWR0aDogMTAwJTsgXG4gICAgaGVpZ2h0OiAxMDAlOyBcbn1cblxuXG5cblxuXG4vLyBHbG9iYWwgSGVhZGVyXG5cbltyb2xlPWJhbm5lcl0ge1xuICAgIG1heC13aWR0aDogMzJyZW07XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgd2lkdGg6IDkwJTtcbn1cblxuLy8gTmF2aWdhdGlvblxuXG5bcm9sZT1uYXZpZ2F0aW9uXSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICNsb2dvIHtcbiAgICAgICAgYWxpZ24tc2VsZjogY2VudGVyO1xuICAgIH1cbiAgICB1bCB7XG4gICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgICBsaSB7XG4gICAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICB9XG4gICAgfVxufVxuXG4vLyBNYWluXG5cbm1haW4ge1xuICAgIG1heC13aWR0aDogMzJyZW07XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgd2lkdGg6IDkwJTtcbn1cblxuLy8gU2lkZWJhclxuXG5bcm9sZT1jb21wbGVtZW50YXJ5XSB7XG4gICAgbWF4LXdpZHRoOiAzMnJlbTtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICB3aWR0aDogOTAlO1xufVxuXG4vLyBGb290ZXIgKGkuZS4gdGhlIGdsb2JhbCBmb290ZXIsIGFzIG9wcG9zZWQgdG8gYW55IG90aGVyIGxvY2FsIDxmb290ZXI+IGVsZW1lbnRzKVxuXG5bcm9sZT1jb250ZW50aW5mb10ge1xuICAgIG1heC13aWR0aDogMzJyZW07XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgd2lkdGg6IDkwJTtcbn1cblxuIiwiLyohIG5vcm1hbGl6ZS5jc3MgdjguMC4wIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xuXG4vKiBEb2N1bWVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBsaW5lIGhlaWdodCBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluIGlPUy5cbiAqL1xuXG5odG1sIHtcbiAgbGluZS1oZWlnaHQ6IDEuMTU7IC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG59XG5cbi8qIFNlY3Rpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXG4gKi9cblxuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDtcbn1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXG4gKi9cblxuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDsgLyogMSAqL1xuICBoZWlnaHQ6IDA7IC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnByZSB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xufVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKi9cblxuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBDaHJvbWUgNTctXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxuICovXG5cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTsgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuY29kZSxcbmtiZCxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlO1xufVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxuICogYWxsIGJyb3dzZXJzLlxuICovXG5cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG59XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIENoYW5nZSB0aGUgZm9udCBzdHlsZXMgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuICovXG5cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0OyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMTAwJTsgLyogMSAqL1xuICBsaW5lLWhlaWdodDogMS4xNTsgLyogMSAqL1xuICBtYXJnaW46IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQgeyAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbixcbnNlbGVjdCB7IC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqL1xuXG5idXR0b24sXG5bdHlwZT1cImJ1dHRvblwiXSxcblt0eXBlPVwicmVzZXRcIl0sXG5bdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuXG5maWVsZHNldCB7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjc1ZW0gMC42MjVlbTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDsgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTsgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsOyAvKiAxICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xuXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDEwKy5cbiAqL1xuXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLlxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLlxuICovXG5cblt0eXBlPVwiY2hlY2tib3hcIl0sXG5bdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4OyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIG1hY09TLlxuICovXG5cblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cblxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cbn1cblxuLyogSW50ZXJhY3RpdmVcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSAxMCssIGFuZCBGaXJlZm94LlxuICovXG5cbmRldGFpbHMge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogbGlzdC1pdGVtO1xufVxuXG4vKiBNaXNjXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwKy5cbiAqL1xuXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAuXG4gKi9cblxuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuIiwiLy8gUmljaGFyZCBSdXR0ZXIncyBSZXNldFxuLyogUmVzZXQgKi9cblxuaHRtbCwgYm9keSwgc2VjdGlvbiwgbmF2LCBhcnRpY2xlLCBhc2lkZSwgaDEsIGgyLCBoMywgaDQsIGg1LCBoNiwgaGdyb3VwLCBoZWFkZXIsIGZvb3RlciwgYWRkcmVzcyxcbnAsIGhyLCBwcmUsIGJsb2NrcXVvdGUsIG9sLCB1bCwgbGksIGRsLCBkdCwgZGQsIGZpZ3VyZSwgZmlnY2FwdGlvbiwgZGl2LFxuYSwgZW0sIHN0cm9uZywgc21hbGwsIHMsIGNpdGUsIHEsIGRmbiwgYWJiciwgdGltZSwgY29kZSwgdmFyLCBzYW1wLCBrYmQsIGksIGIsIG1hcmssIHNwYW4sIGJyLFxuaW5zLCBkZWwsXG5pbWcsIGlmcmFtZSwgZW1iZWQsIG9iamVjdCwgdmlkZW8sIGF1ZGlvLCBjYW52YXMsIG1hcCwgYXJlYSxcbnRhYmxlLCBjYXB0aW9uLCBjb2xncm91cCwgdGJvZHksIHRoZWFkLCB0Zm9vdCwgdHIsIHRkLCB0aCxcbmZvcm0sIGZpZWxkc2V0LCBsZWdlbmQsIGxhYmVsLCBpbnB1dCwgYnV0dG9uLCBzZWxlY3QsIHRleHRhcmVhLFxuZGV0YWlscywgc3VtbWFyeSwgY29tbWFuZCwgbWVudSB7XG4gICAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAwO1xufVxuXG50YWJsZSB7XG4gICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgICBib3JkZXItc3BhY2luZzogMDtcbiAgICBmb250LXNpemU6IDEwMCU7XG59XG5cbi5ub2JyIHtcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgIC1tcy1oeXBoZW5zOm1hbnVhbDtcbiAgICAtbW92LWh5cGhlbnM6bWFudWFsO1xuICAgIC13ZWJraXQtaHlwaGVuczptYW51YWw7XG4gICAgaHlwaGVuczogbWFudWFsO1xufVxuXG4ucGFyZW4ge1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cblxuLmhpZ2hsaWdodCwgbWFyayB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsMjU1LDAsMC41KTtcbn1cblxuLyogZW5kIFJlc2V0ICovXG4iLCIvKlxuICogUmVtb3ZlIHRleHQtc2hhZG93IGluIHNlbGVjdGlvbiBoaWdobGlnaHQ6XG4gKiBodHRwczovL3R3aXR0ZXIuY29tL21pa2V0YXlsci9zdGF0dXMvMTIyMjg4MDUzMDFcbiAqXG4gKiBWZW5kb3ItcHJlZml4ZWQgYW5kIHJlZ3VsYXIgOjpzZWxlY3Rpb24gc2VsZWN0b3JzIGNhbm5vdCBiZSBjb21iaW5lZDpcbiAqIGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vYS8xNjk4MjUxMC83MTMzNDcxXG4gKlxuICogQ3VzdG9taXplIHRoZSBiYWNrZ3JvdW5kIGNvbG9yIHRvIG1hdGNoIHlvdXIgZGVzaWduLlxuICovXG5cbjo6LW1vei1zZWxlY3Rpb24ge1xuICAgIGJhY2tncm91bmQ6ICNiM2Q0ZmM7XG4gICAgdGV4dC1zaGFkb3c6IG5vbmU7XG59XG5cbjo6c2VsZWN0aW9uIHtcbiAgICBiYWNrZ3JvdW5kOiAjYjNkNGZjO1xuICAgIHRleHQtc2hhZG93OiBub25lO1xufVxuXG4vKlxuICogQSBiZXR0ZXIgbG9va2luZyBkZWZhdWx0IGhvcml6b250YWwgcnVsZVxuICovXG5cbmhyIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBoZWlnaHQ6IDFweDtcbiAgICBib3JkZXI6IDA7XG4gICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNjY2M7XG4gICAgbWFyZ2luOiAxZW0gMDtcbiAgICBwYWRkaW5nOiAwO1xufVxuXG4vKlxuICogUmVtb3ZlIHRoZSBnYXAgYmV0d2VlbiBhdWRpbywgY2FudmFzLCBpZnJhbWVzLFxuICogaW1hZ2VzLCB2aWRlb3MgYW5kIHRoZSBib3R0b20gb2YgdGhlaXIgY29udGFpbmVyczpcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9oNWJwL2h0bWw1LWJvaWxlcnBsYXRlL2lzc3Vlcy80NDBcbiAqL1xuXG5hdWRpbyxcbmNhbnZhcyxcbmlmcmFtZSxcbmltZyxcbnN2ZyxcbnZpZGVvIHtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xufVxuXG4vKlxuICogUmVtb3ZlIGRlZmF1bHQgZmllbGRzZXQgc3R5bGVzLlxuICovXG5cbmZpZWxkc2V0IHtcbiAgICBib3JkZXI6IDA7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7XG59XG5cbi8qXG4gKiBBbGxvdyBvbmx5IHZlcnRpY2FsIHJlc2l6aW5nIG9mIHRleHRhcmVhcy5cbiAqL1xuXG50ZXh0YXJlYSB7XG4gICAgcmVzaXplOiB2ZXJ0aWNhbDtcbn1cblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgIEJyb3dzZXIgVXBncmFkZSBQcm9tcHRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi5icm93c2VydXBncmFkZSB7XG4gICAgbWFyZ2luOiAwLjJlbSAwO1xuICAgIGJhY2tncm91bmQ6ICNjY2M7XG4gICAgY29sb3I6ICMwMDA7XG4gICAgcGFkZGluZzogMC4yZW0gMDtcbn1cblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgIEhlbHBlciBjbGFzc2VzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKlxuICogSGlkZSB2aXN1YWxseSBhbmQgZnJvbSBzY3JlZW4gcmVhZGVyc1xuICovXG5cbi5oaWRkZW4ge1xuICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbn1cblxuLypcbiAqIEhpZGUgb25seSB2aXN1YWxseSwgYnV0IGhhdmUgaXQgYXZhaWxhYmxlIGZvciBzY3JlZW4gcmVhZGVyczpcbiAqIGh0dHBzOi8vc25vb2suY2EvYXJjaGl2ZXMvaHRtbF9hbmRfY3NzL2hpZGluZy1jb250ZW50LWZvci1hY2Nlc3NpYmlsaXR5XG4gKlxuICogMS4gRm9yIGxvbmcgY29udGVudCwgbGluZSBmZWVkcyBhcmUgbm90IGludGVycHJldGVkIGFzIHNwYWNlcyBhbmQgc21hbGwgd2lkdGhcbiAqICAgIGNhdXNlcyBjb250ZW50IHRvIHdyYXAgMSB3b3JkIHBlciBsaW5lOlxuICogICAgaHR0cHM6Ly9tZWRpdW0uY29tL0BqZXNzZWJlYWNoL2Jld2FyZS1zbXVzaGVkLW9mZi1zY3JlZW4tYWNjZXNzaWJsZS10ZXh0LTU5NTJhNGMyY2JmZVxuICovXG5cbi52aXN1YWxseWhpZGRlbiB7XG4gICAgYm9yZGVyOiAwO1xuICAgIGNsaXA6IHJlY3QoMCAwIDAgMCk7XG4gICAgaGVpZ2h0OiAxcHg7XG4gICAgbWFyZ2luOiAtMXB4O1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgcGFkZGluZzogMDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDFweDtcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwOyAvKiAxICovXG59XG5cbi8qXG4gKiBFeHRlbmRzIHRoZSAudmlzdWFsbHloaWRkZW4gY2xhc3MgdG8gYWxsb3cgdGhlIGVsZW1lbnRcbiAqIHRvIGJlIGZvY3VzYWJsZSB3aGVuIG5hdmlnYXRlZCB0byB2aWEgdGhlIGtleWJvYXJkOlxuICogaHR0cHM6Ly93d3cuZHJ1cGFsLm9yZy9ub2RlLzg5NzYzOFxuICovXG5cbi52aXN1YWxseWhpZGRlbi5mb2N1c2FibGU6YWN0aXZlLFxuLnZpc3VhbGx5aGlkZGVuLmZvY3VzYWJsZTpmb2N1cyB7XG4gICAgY2xpcDogYXV0bztcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgbWFyZ2luOiAwO1xuICAgIG92ZXJmbG93OiB2aXNpYmxlO1xuICAgIHBvc2l0aW9uOiBzdGF0aWM7XG4gICAgd2lkdGg6IGF1dG87XG4gICAgd2hpdGUtc3BhY2U6IGluaGVyaXQ7XG59XG5cbi8qXG4gKiBIaWRlIHZpc3VhbGx5IGFuZCBmcm9tIHNjcmVlbiByZWFkZXJzLCBidXQgbWFpbnRhaW4gbGF5b3V0XG4gKi9cblxuLmludmlzaWJsZSB7XG4gICAgdmlzaWJpbGl0eTogaGlkZGVuO1xufVxuXG4vKlxuICogQ2xlYXJmaXg6IGNvbnRhaW4gZmxvYXRzXG4gKlxuICogRm9yIG1vZGVybiBicm93c2Vyc1xuICogMS4gVGhlIHNwYWNlIGNvbnRlbnQgaXMgb25lIHdheSB0byBhdm9pZCBhbiBPcGVyYSBidWcgd2hlbiB0aGVcbiAqICAgIGBjb250ZW50ZWRpdGFibGVgIGF0dHJpYnV0ZSBpcyBpbmNsdWRlZCBhbnl3aGVyZSBlbHNlIGluIHRoZSBkb2N1bWVudC5cbiAqICAgIE90aGVyd2lzZSBpdCBjYXVzZXMgc3BhY2UgdG8gYXBwZWFyIGF0IHRoZSB0b3AgYW5kIGJvdHRvbSBvZiBlbGVtZW50c1xuICogICAgdGhhdCByZWNlaXZlIHRoZSBgY2xlYXJmaXhgIGNsYXNzLlxuICogMi4gVGhlIHVzZSBvZiBgdGFibGVgIHJhdGhlciB0aGFuIGBibG9ja2AgaXMgb25seSBuZWNlc3NhcnkgaWYgdXNpbmdcbiAqICAgIGA6YmVmb3JlYCB0byBjb250YWluIHRoZSB0b3AtbWFyZ2lucyBvZiBjaGlsZCBlbGVtZW50cy5cbiAqL1xuXG4uY2xlYXJmaXg6YmVmb3JlLFxuLmNsZWFyZml4OmFmdGVyIHtcbiAgICBjb250ZW50OiBcIiBcIjsgLyogMSAqL1xuICAgIGRpc3BsYXk6IHRhYmxlOyAvKiAyICovXG59XG5cbi5jbGVhcmZpeDphZnRlciB7XG4gICAgY2xlYXI6IGJvdGg7XG59XG5cblxuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgUHJpbnQgc3R5bGVzLlxuICAgSW5saW5lZCB0byBhdm9pZCB0aGUgYWRkaXRpb25hbCBIVFRQIHJlcXVlc3Q6XG4gICBodHRwczovL3d3dy5waHBpZWQuY29tL2RlbGF5LWxvYWRpbmcteW91ci1wcmludC1jc3MvXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG5AbWVkaWEgcHJpbnQge1xuICAgICosXG4gICAgKjpiZWZvcmUsXG4gICAgKjphZnRlciB7XG4gICAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7XG4gICAgICAgIGNvbG9yOiAjMDAwICFpbXBvcnRhbnQ7IC8qIEJsYWNrIHByaW50cyBmYXN0ZXIgKi9cbiAgICAgICAgLXdlYmtpdC1ib3gtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XG4gICAgICAgIGJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcbiAgICAgICAgdGV4dC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcbiAgICB9XG5cbiAgICBhLFxuICAgIGE6dmlzaXRlZCB7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAgIH1cblxuICAgIGFbaHJlZl06YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiBcIiAoXCIgYXR0cihocmVmKSBcIilcIjtcbiAgICB9XG5cbiAgICBhYmJyW3RpdGxlXTphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6IFwiIChcIiBhdHRyKHRpdGxlKSBcIilcIjtcbiAgICB9XG5cbiAgICAvKlxuICAgICAqIERvbid0IHNob3cgbGlua3MgdGhhdCBhcmUgZnJhZ21lbnQgaWRlbnRpZmllcnMsXG4gICAgICogb3IgdXNlIHRoZSBgamF2YXNjcmlwdDpgIHBzZXVkbyBwcm90b2NvbFxuICAgICAqL1xuXG4gICAgYVtocmVmXj1cIiNcIl06YWZ0ZXIsXG4gICAgYVtocmVmXj1cImphdmFzY3JpcHQ6XCJdOmFmdGVyIHtcbiAgICAgICAgY29udGVudDogXCJcIjtcbiAgICB9XG5cbiAgICBwcmUge1xuICAgICAgICB3aGl0ZS1zcGFjZTogcHJlLXdyYXAgIWltcG9ydGFudDtcbiAgICB9XG4gICAgcHJlLFxuICAgIGJsb2NrcXVvdGUge1xuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjOTk5O1xuICAgICAgICBwYWdlLWJyZWFrLWluc2lkZTogYXZvaWQ7XG4gICAgfVxuXG4gICAgLypcbiAgICAgKiBQcmludGluZyBUYWJsZXM6XG4gICAgICogaHR0cDovL2Nzcy1kaXNjdXNzLmluY3V0aW8uY29tL3dpa2kvUHJpbnRpbmdfVGFibGVzXG4gICAgICovXG5cbiAgICB0aGVhZCB7XG4gICAgICAgIGRpc3BsYXk6IHRhYmxlLWhlYWRlci1ncm91cDtcbiAgICB9XG5cbiAgICB0cixcbiAgICBpbWcge1xuICAgICAgICBwYWdlLWJyZWFrLWluc2lkZTogYXZvaWQ7XG4gICAgfVxuXG4gICAgcCxcbiAgICBoMixcbiAgICBoMyB7XG4gICAgICAgIG9ycGhhbnM6IDM7XG4gICAgICAgIHdpZG93czogMztcbiAgICB9XG5cbiAgICBoMixcbiAgICBoMyB7XG4gICAgICAgIHBhZ2UtYnJlYWstYWZ0ZXI6IGF2b2lkO1xuICAgIH1cbn1cbiIsIi8vIENvbG91cnNcbi8vJGNvbG9yLW1haW46IHJnYig2OCw2OCw2OCk7IC8vIzMzMzsgLy8gIzQ0NCAodmVyc3VzIHByZXZpb3VzICMzMzMgKHJnYig1MSw1MSw1MSkpIHdoaWNoIGlzIGRhcmtlcilcbi8vJGNvbG9yLWludGVyZmFjZS1hbmQtZGlzcGxheTogcmdiKDY4LDY4LDY4KTsgLy8gIzQ0NCAodmVyc3VzIHByZXZpb3VzICMzMzMgb3IgcmdiKDUxLDUxLDUxKSB3aGljaCBpcyBkYXJrZXIpXG4vLyRjb2xvci1hY2NlbnQ6ICMzNTg1N2Q7XG5cbiRjb2xvci1tYWluOiByZ2IoMzQsMzQsMzQpOyAvL3JnYigxNDksMTQ5LDE0OSk7XG4kY29sb3ItaW50ZXJmYWNlLWFuZC1kaXNwbGF5OiByZ2IoMzQsMzQsMzQpO1xuJGNvbG9yLWFjY2VudDogcmdiKDMwLDEzOSwxNDIpO1xuJGNvbG9yLWFjY2VudC1hbHQ6IHJnYigyMTUsMCwyMCk7XG4kY29sb3ItbGlnaHQ6IGxpZ2h0ZW4oJGNvbG9yLW1haW4sIDI1JSk7XG4kY29sb3ItbGlnaHQtYWx0OiBsaWdodGVuKCRjb2xvci1tYWluLCAxMi41JSk7IC8vcmdiKDE0OSwxNDksMTQ5KTtcblxuXG5cblxuLy8gUmVzcG9uc2l2ZSBCcmVha3BvaW50c1xuLy8gVXNlIGVtcyByYXRoZXIgdGhhbiBwaXhlbHMgdG8gZGV0ZXJtaW5lIHRoZSBzY3JlZW7CoHdpZHRoLCBzbyB0aGF0OlxuLy8gaSkgb3VyIGxheW91dCBhZGFwdGF0aW9ucyBhcmUgYmFzZWQgb24gdHlwb2dyYXBoaWMgcmVhc29uaW5nIHJhdGhlciB0aGFuIGJlaW5nIHRpZWQgdG8gc3BlY2lmaWMgZGV2aWNlIHdpZHRoc1xuLy8gaWkpIHdlJ3ZlIHRha2VuIGludG8gYWNjb3VudCBzaXR1YXRpb25zIHdoZW4gdGhlIHJlYWRlciBhZGp1c3RlZCB0aGUgZGVmYXVsdCBmb250IHNpemUgb2YgdGhlaXIgZGV2aWNlLiBCeSB1c2luZyBlbXMsIG91ciBtZWFzdXJlbWVudHMgc2NhbGUgcHJvcG9ydGlvbmF0ZWx5IHdpdGggdGV4dCBzaXplLlxuJGJwLXh4c21hbGw6ICAyMy40Mzc1ZW07IC8vIDM3NXB4LCB0aGUgd2lkdGggaW4gcG9ydHJhaXQgb2YgaVBob25lIDYvNy84XG4kYnAteHNtYWxsOiAgMzcuNWVtOyAvLyA2MDBweCwgYSBib3VuZGFyeSBhYm92ZSB3aGljaCB0YWxsIDM6NCBpbWFnZXMgZmVlbCB3ZWlyZCBhbmQgd2Ugd2FudCB0byBzdGFydCB1c2luZyBhdmFpbGFibGUgd2lkdGguXG4kYnAtc21hbGw6ICA0OGVtOyAvLyA3NjhweCwgdGFibGV0IGluIHBvcnRyYWl0XG4kYnAtbWVkaXVtOiAgNjBlbTsgLy8gOTYwcHhcbiRicC1sYXJnZTogIDkwZW07IC8vIDE0NDBweFxuJGJwLXhsYXJnZTogIDEyMGVtOyAvLyAxOTIwcHhcblxuLy8gTm90ZTogaWYgd2UncmUgYWRhcHRpbmcgbGF5b3V0IGJhc2VkIG9uIHR5cG9ncmFwaGljIHJlYXNvbmluZyByYXRoZXIgdGhhbiBzcGVjaWZpYyBkZXZpY2Ugd2lkdGhzLCAuLi4uXG4vLyBzaG91bGRuJ3Qgd2Ugc2V0IGJyZWFrcG9pbnRzIGF0IHRoZSBwb2ludHMgYXQgd2hpY2ggb3VyIGJvZHkgY29sdW1uIGJlY29tZXMgd2lkZXIgdGhhbiB0aGF0IHdoaWNoIGlzIG5lZWRlZCBmb3IgYSBjb21mb3J0YWJsZSBtZWFzdXJlP1xuLy8gV2Ugd2FudCBhIGxpbmUtbGVuZ3RoIG9mIDQ14oCTNzUgY2hhcmFjdGVycy4gT24gYXZlcmFnZSAxZW0gYWNjb3VudHMgZm9yIDIgY2hhcmFjdGVycyBzby4uLlxuLy8gQSBtYXgtd2lkdGggb2YgMzhlbSBvbiBwYXJhZ3JhcGhzIG9mIGZvbnQtc2l6ZSAxNnB4IHJlc3RyaWN0cyBsaW5lIHdpZHRoIHRvIHRoZSB0b3AgZW5kIG9mIHRoZSByZWFkYWJsZSByYW5nZS4gXG4vLyBBcmd1YWJseSA0MGVtIChvciBqdXN0IHVuZGVyKSBzaG91bGQgYmUgdGhlIGZpcnN0IGJyZWFrcG9pbnQuIFRoZW4sIHlvdSByZWR1Y2UgdGhlIG51bWJlciBvZiBjaGFyYWN0ZXJzIGluIGEgbGluZSBieSBlaXRoZXIgaW5jcmVhc2luZyBmb250LXNpemUgb3IgaW50cm9kdWNpbmcgYWRkaXRpb25hbCBjb2x1bW5zLiBcblxuXG5cblxuLy8gVHlwZWZhY2UgY2hvaWNlc1xuJGZvbnQtc2FuczogJ0ZTRW1lcmljJywgc2Fucy1zZXJpZjtcbiRmb250LXNlcmlmOiAnRlNFbWVyaWMnLCBzYW5zLXNlcmlmO1xuXG5cbi8vIFR5cG9ncmFwaGljIFNjYWxlXG4vLyBodHRwOi8vc2ltcGxlc2NhbGUub25saW5lLz9zY2FsZV9iYXNlPTE2JnNjYWxlX3JhdGlvPTEuMzMzJnNjYWxlX2ludGVydmFsPTJcblxuXG4vLyBLZXkgRm9udCBTaXplIFNldHRpbmdzXG4vLyBXZSdyZSB1c2luZyB0aGlzIHR5cG9ncmFwaGljIHNjYWxlOiBodHRwOi8vc2ltcGxlc2NhbGUub25saW5lLy4uLlxuLy8gd2l0aCBhIHJhdGlvIG9mIFggKGRlY2ltYWwgZXF1aXZhbGVudCBvZiBZKSB0byB3b3JrIHdlbGwgd2l0aCBaXG4vLyB3ZSBzdGFydCB3aXRoIGJvZHkgY29weSBmb250IHNpemUgYXQgWCwgd2l0aCBhIGxpbmUgaGVpZ2h0IG9mIFlcbi8vIGF0IHZpZXdwb3J0IHdpZHRoIFgrIHdlIGluY3JlYXNlIGJvZHkgZm9udCBzaXplIHRvIFlcbi8vIGF0IHZpZXdwb3J0IHdpZHRoIFgrIHdlIGluY3JlYXNlIGJvZHkgZm9udCBzaXplIHRvIFlcbiRzbWFsbGVzdC1mb250LXNpemU6IDEyO1xuJGJhc2UtZm9udC1zaXplOiAxNjtcbiRiYXNlLWxpbmUtaGVpZ2h0OiAxLjQ7XG4kYmFzZS1saW5lLWhlaWdodC1pbi1weDogKCRiYXNlLWZvbnQtc2l6ZSAqICRiYXNlLWxpbmUtaGVpZ2h0KTtcblxuJGJwLXhzLWJhc2UtZm9udC1zaXplOiAxNjtcbiRicC14cy1iYXNlLWxpbmUtaGVpZ2h0OiAxLjQ7XG4kYnAteHMtcHgtYmFzZS1saW5lLWhlaWdodDogKCRicC14cy1iYXNlLWZvbnQtc2l6ZSAqICRicC14cy1iYXNlLWxpbmUtaGVpZ2h0KTtcblxuJGJwLXMtYmFzZS1mb250LXNpemU6IDE2O1xuJGJwLXMtYmFzZS1saW5lLWhlaWdodDogMS40O1xuJGJwLXMtcHgtYmFzZS1saW5lLWhlaWdodDogKCRicC1zLWJhc2UtZm9udC1zaXplICogJGJwLXMtYmFzZS1saW5lLWhlaWdodCk7XG5cbiRicC1tLWJhc2UtZm9udC1zaXplOiAxODtcbiRicC1tLWJhc2UtbGluZS1oZWlnaHQ6IDEuNDtcbiRicC1tLXB4LWJhc2UtbGluZS1oZWlnaHQ6ICgkYnAtbS1iYXNlLWZvbnQtc2l6ZSAqICRicC1tLWJhc2UtbGluZS1oZWlnaHQpO1xuXG4kYnAtbC1iYXNlLWZvbnQtc2l6ZTogMjE7XG4kYnAtbC1iYXNlLWxpbmUtaGVpZ2h0OiAxLjQ7XG4kYnAtbC1weC1iYXNlLWxpbmUtaGVpZ2h0OiAoJGJwLWwtYmFzZS1mb250LXNpemUgKiAkYnAtbC1iYXNlLWxpbmUtaGVpZ2h0KTtcblxuJGJwLXhsLWJhc2UtZm9udC1zaXplOiAyMTtcbiRicC14bC1iYXNlLWxpbmUtaGVpZ2h0OiAxLjQ7XG4kYnAteGwtcHgtYmFzZS1saW5lLWhlaWdodDogKCRicC14bC1iYXNlLWZvbnQtc2l6ZSAqICRicC14bC1iYXNlLWxpbmUtaGVpZ2h0KTtcbiIsIi8vIE1vZGVybiBjbGVhcmZpeCB0aGluZ1xuICAgIC8vIG9yIGp1c3QgdXNlIG92ZXJmbG93OiBhdXRvPyBodHRwczovL21laWVydC5jb20vZW4vYmxvZy9uby1jbGVhcmZpeC9cbiAgICAvLyBub3RlOiB3ZSBzaG91bGRuJ3QgaGF2ZSBhIG5lZWQgZm9yIHRoaXMgYXQgYWxsIGlmIHdlIGRvbid0IHVzZSBmbG9hdHMgZm9yIGxheW91dC5cbi5ncm91cDphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICBjbGVhcjogYm90aDtcbn1cblxuQG1peGluIGZvbnQtc2l6ZS10by1yZW0oJHRhcmdldEZvbnRTaXplOiAkYmFzZS1mb250LXNpemUsICRiYXNlRm9udFNpemU6ICRiYXNlLWZvbnQtc2l6ZSkge1xuICBmb250LXNpemU6ICR0YXJnZXRGb250U2l6ZSArIHB4OyAvLyBmYWxsYmFjayBmb3Igb2xkIGJyb3dzZXJzXG4gIGZvbnQtc2l6ZTogKCR0YXJnZXRGb250U2l6ZSAvICRiYXNlRm9udFNpemUpICsgcmVtO1xufVxuXG4vLyBzZXQgdGhlIGNvcnJlY3QgbGluZSBoZWlnaHQgb24gYW4gZWxlbWVudCB0byBtYWludGFpbiB2ZXJ0aWNhbCByaHl0aG0sIGZvciBhIGdpdmVuIGZvbnQgc2l6ZSBhbmQgdW5pdCBvZiB2ZXJ0aWNhbCByaHl0aG1cbkBtaXhpbiByaHl0aG1pYy1saW5lLWhlaWdodCgkZm9udFNpemU6ICRiYXNlLWZvbnQtc2l6ZSwgJGxpbmVIZWlnaHRJblB4OiAkYmFzZS1saW5lLWhlaWdodC1pbi1weCkge1xuICBsaW5lLWhlaWdodDogKCRsaW5lSGVpZ2h0SW5QeCAvICRmb250U2l6ZSk7XG59XG5cbi8vIHNldCB2ZXJ0aWNhbCBtYXJnaW5zIG9uIGFuIGVsZW1lbnQgdG8gbWFpbnRhaW4gdmVydGljYWwgcmh5dGhtLCBmb3IgYSBnaXZlbiBmb250IHNpemUgYW5kIHVuaXQgb2YgdmVydGljYWwgcmh5dGhtXG5AbWl4aW4gcmh5dGhtaWMtdmVydGljYWwtbWFyZ2lucygkZm9udFNpemU6ICRiYXNlLWZvbnQtc2l6ZSwgJGxpbmVIZWlnaHRJblB4OiAkYmFzZS1saW5lLWhlaWdodC1pbi1weCkge1xuICBtYXJnaW46ICgkbGluZUhlaWdodEluUHggLyAkZm9udFNpemUpK2VtIDA7XG59XG5cbi8vIFNlcGFyYXRlIHBhcmFncmFwaHMgYnkgbm8gbW9yZSB0aGFuIDFlbS4gSGFsZiB0aGUgbGluZS1oZWlnaHQgc2hvdWxkIGJlIHN1ZmZpY2llbnQuXG5AbWl4aW4gcGFyYWdyYXBoLW1hcmdpbnMoKSB7XG4gIG1hcmdpbjogKCRiYXNlLWxpbmUtaGVpZ2h0LzIpK2VtIDA7IC8vIG1hcmdpbjogJGJhc2UtbGluZS1oZWlnaHQrZW0gMDtcbn1cblxuXG4vLyBJbmNsdWRlIGEgbWVkaWEgcXVlcnlcbi8vIFVzYWdlOiBAaW5jbHVkZSBicmVha3BvaW50KHNtYWxsKTtcbkBtaXhpbiBicmVha3BvaW50KCRwb2ludCkge1xuICBAaWYgJHBvaW50ID09IGJwLXhsYXJnZSB7XG4gICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkYnAteGxhcmdlKSB7IEBjb250ZW50OyB9XG4gIH1cbiAgQGlmICRwb2ludCA9PSBicC1sYXJnZSB7XG4gICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkYnAtbGFyZ2UpIHsgQGNvbnRlbnQ7IH1cbiAgfVxuICBAZWxzZSBpZiAkcG9pbnQgPT0gYnAtbWVkaXVtIHtcbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICRicC1tZWRpdW0pIHsgQGNvbnRlbnQ7IH1cbiAgfVxuICBAZWxzZSBpZiAkcG9pbnQgPT0gYnAtc21hbGwge1xuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogJGJwLXNtYWxsKSAgeyBAY29udGVudDsgfVxuICB9XG4gIEBlbHNlIGlmICRwb2ludCA9PSBicC14c21hbGwge1xuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogJGJwLXhzbWFsbCkgIHsgQGNvbnRlbnQ7IH1cbiAgfVxuICBAZWxzZSBpZiAkcG9pbnQgPT0gYnAteHhzbWFsbCB7XG4gICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkYnAteHhzbWFsbCkgIHsgQGNvbnRlbnQ7IH1cbiAgfVxufVxuXG4vLyBVdGlsaXR5XG5AbWl4aW4gYnVvdnItbWFyZ2lucygpIHsgLy8gc2V0IHRvcCBhbmQgYm90dG9tIG1hcmdpbiBlYWNoIHRvIFwib25lIGxpbmUtaGVpZ2h0XCIgKHRoZSBCYXNpYyBVbml0IE9mIFZlcnRpY2FsIFJoeXRobSlcbiAgbWFyZ2luOiAkYmFzZS1saW5lLWhlaWdodCtlbSAwO1xuICBAaW5jbHVkZSBicmVha3BvaW50KGJwLW1lZGl1bSkge1xuICAgICAgbWFyZ2luOiAkYnAtbS1iYXNlLWxpbmUtaGVpZ2h0K2VtIDA7XG4gIH1cbiAgQGluY2x1ZGUgYnJlYWtwb2ludChicC14bGFyZ2UpIHtcbiAgICAgIG1hcmdpbjogJGJwLXhsLWJhc2UtbGluZS1oZWlnaHQrZW0gMDtcbiAgfVxufVxuXG5cblxuXG4vLyBTZXJ2ZSBIaURQSSBiYWNrZ3JvdW5kIGltYWdlcyBmcm9tIGFueSBzZWxlY3RvciB5b3XigJlkIGxpa2UsIGp1c3QgYnkgY3JlYXRpbmcgdHdvIGltYWdlIGFzc2V0cyBhbmQgb25lIGxpbmUgb2YgU0NTU1xuLy8gVXNhZ2U6IEBpbmNsdWRlIHJldGluaXplKCdpY29uLWRyaWJiYmxlJywgJ3BuZycsIDI0cHgsIDI0cHgpO1xuQG1peGluIHJldGluaXplKCRmaWxlLCAkdHlwZSwgJHdpZHRoLCAkaGVpZ2h0KSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vaW1nLycgKyAkZmlsZSArICcuJyArICR0eXBlKTtcblxuICAkaXMtaGlkcGk6IFwiKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMS41KSwgKG1pbi0tbW96LWRldmljZS1waXhlbC1yYXRpbzogMS41KSwgKC1vLW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDMvMiksIChtaW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAxLjUpLChtaW4tcmVzb2x1dGlvbjogMS41ZHBweClcIjtcbiAgQG1lZGlhICN7JGlzLWhpZHBpfSB7XG4gICAgJiB7XG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uL2ltZy8nICsgJGZpbGUgKyAnQDJ4LicgKyAkdHlwZSk7XG4gICAgICBiYWNrZ3JvdW5kLXNpemU6ICR3aWR0aCAkaGVpZ2h0O1xuICAgIH1cbiAgfVxufVxuXG4vLyBBZGQgYSBsaW5lYXItZ3JhZGllbnQgd2l0aG91dCB3b3JyeWluZyBhYm91dCBwcm9wcmlldGFyeSBhZGRpdGlvbnNcbi8vIFVzYWdlOiBAaW5jbHVkZSBsaW5lYXItZ3JhZGllbnQoIzQyYjNlMiwgIzFhNjc5OCk7XG5AbWl4aW4gbGluZWFyLWdyYWRpZW50KCRmcm9tLCAkdG8pIHtcbiAgLyogRmFsbGJhY2sgZm9yIHNhZCBicm93c2VycyAqL1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkdG87IFxuICAvKiBOb25lIG9mIHRoaXMgc2hvdWxkIG5lZWQgdG8gYmUgZXhwbGljaXQgYmVjYXVzZSB3ZSdyZSBpbmNsdWRpbmcgYXV0b3ByZWZpeGVyIGluIG91ciBndWxwLXNhc3Mgd29ya2Zsb3cuXG4gIGJhY2tncm91bmQtaW1hZ2U6LW1vei1saW5lYXItZ3JhZGllbnQoJGZyb20sICR0byk7XG4gIGJhY2tncm91bmQtaW1hZ2U6LW8tbGluZWFyLWdyYWRpZW50KCRmcm9tLCAkdG8pO1xuICBiYWNrZ3JvdW5kLWltYWdlOi13ZWJraXQtZ3JhZGllbnQobGluZWFyLCBsZWZ0IHRvcCwgbGVmdCBib3R0b20sIGNvbG9yLXN0b3AoMCwgJGZyb20pLCBjb2xvci1zdG9wKDEsICR0bykpO1xuICBiYWNrZ3JvdW5kLWltYWdlOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudCgkZnJvbSwgJHRvKTtcbiAgYmFja2dyb3VuZC1pbWFnZTogLW1zLWxpbmVhci1ncmFkaWVudCgkZnJvbSwgJHRvKTsgKi9cbiAgLyogVzNDICovXG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCgkZnJvbSwgJHRvKTtcbn1cbiIsIi8vIFNpdGUtc3BlY2lmaWMgc3R5bGVzXG5cbi8vIENoYW5nZSBib3ggbW9kZWwgZnJvbSB0aGUgZGVmYXVsdCAnY29udGVudC1ib3gnIHNldHRpbmcuXG4vLyAnY29udGVudC1ib3gnIGFwcGxpZXMgZWxlbWVudCdzIGRlY2xhcmVkIHdpZHRoIHRvIGl0cyBjb250ZW50IG9ubHksIHBsYWNpbmcgcGFkZGluZyBhbmQgYm9yZGVyIG91dHNpZGUgdGhlIGVsZW1lbnQncyBib3guXG4vLyBUaGlzIGVmZmVjdGl2ZWx5IGluY3JlYXNlcyBob3cgbXVjaCBzcGFjZSB0aGUgZWxlbWVudCB0YWtlcyB1cC5cbi8vIGJvcmRlci1ib3ggcHV0cyB0aGUgcGFkZGluZyBhbmQgYm9yZGVyIGluc2lkZSB0aGUgYm94IHNvIGJveCBpcyBhcyB3aWRlIGFzIHRoZSB3aWR0aCB3ZSBkZWNsYXJlZC5cbi8vIEFsc28sIHVzZSB0aGUgJ2luaGVyaXRhbmNlJyBiYXNlZCBhcHByb2FjaCBodHRwczovL2Nzcy10cmlja3MuY29tL2luaGVyaXRpbmctYm94LXNpemluZy1wcm9iYWJseS1zbGlnaHRseS1iZXR0ZXItYmVzdC1wcmFjdGljZS9cbi8vIFRoaXMgYXBwcm9hY2ggbWVhbnMgdGhhdCBpZiB3ZSBuZWVkIHRvIGluY2x1ZGUgYSB0aGlyZC1wYXJ0eSBjb21wb25lbnQgYW5kIGRvbid0IHdhbnQgdG8gbWVzcyB3aXRoIGl0cyBib3gtbW9kZWwuLi5cbi8vIHRoZW4gd2UgY2FuIHJlc2V0IGl0IHRvIG5vcm1hbCB1c2luZyAuY29tcG9uZW50IHsgYm94LXNpemluZzogY29udGVudC1ib3g7IH0gYW5kIHdvbid0IGhhdmUgYW55IGluaGVyaXRhbmNlIGlzc3VlcyB3aXRoIGNoaWxkIGVsZW1lbnRzXG5odG1sIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cbiosICo6YmVmb3JlLCAqOmFmdGVyIHtcbiAgYm94LXNpemluZzogaW5oZXJpdDtcbn1cblxuXG4iLCIvKlxuVGhpbiAobm9ybWFsbHkgMTAwKVxuRXh0cmEgTGlnaHQgIChub3JtYWxseSAyMDApXG5MaWdodCAobm9ybWFsbHkgMzAwKVxuQm9vayAgKD8pXG5SZWd1bGFyIChub3JtYWxseSA0MDApXG5Db3JlICg/KVxuTWVkaXVtICAobm9ybWFsbHkgNTAwKVxuU2VtaUJvbGQgKG5vcm1hbGx5IDYwMClcbkJvbGQgKG5vcm1hbGx5IDcwMClcbkV4dHJhQm9sZCAobm9ybWFsbHkgODAwKVxuSGVhdnkgKG5vcm1hbGx5IDkwMClcbiovXG5cbkBmb250LWZhY2Uge1xuICAgIGZvbnQtZmFtaWx5OiAnRlNFbWVyaWMnO1xuICAgIHNyYzogdXJsKCcvZm9udHMvZnNlbWVyaWN3ZWJleHRyYWxpZ2h0L0ZTRW1lcmljV2ViLUV4dHJhTGlnaHQuZW90Jyk7IC8qIElFOSAqL1xuICAgIHNyYzogdXJsKCcvZm9udHMvZnNlbWVyaWN3ZWJleHRyYWxpZ2h0L0ZTRW1lcmljV2ViLUV4dHJhTGlnaHQuZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSwgLyogSUU2LUlFOCAqLyBcbiAgICB1cmwoJy9mb250cy9mc2VtZXJpY3dlYmV4dHJhbGlnaHQvRlNFbWVyaWNXZWItRXh0cmFMaWdodC53b2ZmJykgZm9ybWF0KCd3b2ZmJyk7IC8qIE1vZGVybiBCcm93c2VycyAqL1xuICAgIGZvbnQtd2VpZ2h0OiAyMDA7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6ICdGU0VtZXJpYyc7XG4gICAgc3JjOiB1cmwoJy9mb250cy9mc2VtZXJpY3dlYmV4dHJhbGlnaHRpdGFsaWMvRlNFbWVyaWNXZWItRXh0cmFMaWdodEl0YWxpYy5lb3QnKTsgLyogSUU5ICovXG4gICAgc3JjOiB1cmwoJy9mb250cy9mc2VtZXJpY3dlYmV4dHJhbGlnaHRpdGFsaWMvRlNFbWVyaWNXZWItRXh0cmFMaWdodEl0YWxpYy5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLCAvKiBJRTYtSUU4ICovIFxuICAgIHVybCgnL2ZvbnRzL2ZzZW1lcmljd2ViZXh0cmFsaWdodGl0YWxpYy9GU0VtZXJpY1dlYi1FeHRyYUxpZ2h0SXRhbGljLndvZmYnKSBmb3JtYXQoJ3dvZmYnKTsgLyogTW9kZXJuIEJyb3dzZXJzICovXG4gICAgZm9udC13ZWlnaHQ6IDIwMDtcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbkBmb250LWZhY2Uge1xuICAgIGZvbnQtZmFtaWx5OiAnRlNFbWVyaWMnO1xuICAgIHNyYzogdXJsKCcvZm9udHMvZnNlbWVyaWN3ZWJib29rL0ZTRW1lcmljV2ViLUJvb2suZW90Jyk7XG4gICAgc3JjOiB1cmwoJy9mb250cy9mc2VtZXJpY3dlYmJvb2svRlNFbWVyaWNXZWItQm9vay5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxuICAgIHVybCgnL2ZvbnRzL2ZzZW1lcmljd2ViYm9vay9GU0VtZXJpY1dlYi1Cb29rLndvZmYnKSBmb3JtYXQoJ3dvZmYnKTtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cbkBmb250LWZhY2Uge1xuICAgIGZvbnQtZmFtaWx5OiAnRlNFbWVyaWMnO1xuICAgIHNyYzogdXJsKCcvZm9udHMvZnNlbWVyaWN3ZWJib29raXRhbGljL0ZTRW1lcmljV2ViLUJvb2tJdGFsaWMuZW90Jyk7XG4gICAgc3JjOiB1cmwoJy9mb250cy9mc2VtZXJpY3dlYmJvb2tpdGFsaWMvRlNFbWVyaWNXZWItQm9va0l0YWxpYy5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxuICAgIHVybCgnL2ZvbnRzL2ZzZW1lcmljd2ViYm9va2l0YWxpYy9GU0VtZXJpY1dlYi1Cb29rSXRhbGljLndvZmYnKSBmb3JtYXQoJ3dvZmYnKTtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuLypAZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogJ0ZTRW1lcmljJztcbiAgICBzcmM6IHVybCgnL2ZvbnRzL2ZzZW1lcmljd2VicmVndWxhci9GU0VtZXJpY1dlYi1SZWd1bGFyLmVvdCcpO1xuICAgIHNyYzogdXJsKCcvZm9udHMvZnNlbWVyaWN3ZWJyZWd1bGFyL0ZTRW1lcmljV2ViLVJlZ3VsYXIuZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcbiAgICB1cmwoJy9mb250cy9mc2VtZXJpY3dlYnJlZ3VsYXIvRlNFbWVyaWNXZWItUmVndWxhci53b2ZmJykgZm9ybWF0KCd3b2ZmJyk7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG59XG5AZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogJ0ZTRW1lcmljJztcbiAgICBzcmM6IHVybCgnL2ZvbnRzL2ZzZW1lcmljd2ViaXRhbGljL0ZTRW1lcmljV2ViLUl0YWxpYy5lb3QnKTtcbiAgICBzcmM6IHVybCgnL2ZvbnRzL2ZzZW1lcmljd2ViaXRhbGljL0ZTRW1lcmljV2ViLUl0YWxpYy5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxuICAgIHVybCgnL2ZvbnRzL2ZzZW1lcmljd2ViaXRhbGljL0ZTRW1lcmljV2ViLUl0YWxpYy53b2ZmJykgZm9ybWF0KCd3b2ZmJyk7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XG59Ki9cblxuQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6ICdGU0VtZXJpYyc7XG4gICAgc3JjOiB1cmwoJy9mb250cy9mc2VtZXJpY3dlYnNlbWlib2xkL0ZTRW1lcmljV2ViLVNlbWlCb2xkLmVvdCcpOyAvKiBJRTkgKi9cbiAgICBzcmM6IHVybCgnL2ZvbnRzL2ZzZW1lcmljd2Vic2VtaWJvbGQvRlNFbWVyaWNXZWItU2VtaUJvbGQuZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSwgLyogSUU2LUlFOCAqLyBcbiAgICB1cmwoJy9mb250cy9mc2VtZXJpY3dlYnNlbWlib2xkL0ZTRW1lcmljV2ViLVNlbWlCb2xkLndvZmYnKSBmb3JtYXQoJ3dvZmYnKTsgLyogTW9kZXJuIEJyb3dzZXJzICovXG4gICAgZm9udC13ZWlnaHQ6IDYwMDsgXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6ICdGU0VtZXJpYyc7XG4gICAgc3JjOiB1cmwoJy9mb250cy9mc2VtZXJpY3dlYnNlbWlib2xkaXRhbGljL0ZTRW1lcmljV2ViLVNlbWlCb2xkSXRhbGljLmVvdCcpOyAvKiBJRTkgKi9cbiAgICBzcmM6IHVybCgnL2ZvbnRzL2ZzZW1lcmljd2Vic2VtaWJvbGRpdGFsaWMvRlNFbWVyaWNXZWItU2VtaUJvbGRJdGFsaWMuZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSwgLyogSUU2LUlFOCAqLyBcbiAgICB1cmwoJy9mb250cy9mc2VtZXJpY3dlYnNlbWlib2xkaXRhbGljL0ZTRW1lcmljV2ViLVNlbWlCb2xkSXRhbGljLndvZmYnKSBmb3JtYXQoJ3dvZmYnKTsgLyogTW9kZXJuIEJyb3dzZXJzICovXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5AZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogJ0ZTRW1lcmljJztcbiAgICBzcmM6IHVybCgnL2ZvbnRzL2ZzZW1lcmljd2ViYm9sZC9GU0VtZXJpY1dlYi1Cb2xkLmVvdCcpOyAvKiBJRTkgKi9cbiAgICBzcmM6IHVybCgnL2ZvbnRzL2ZzZW1lcmljd2ViYm9sZC9GU0VtZXJpY1dlYi1Cb2xkLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksIC8qIElFNi1JRTggKi8gXG4gICAgdXJsKCcvZm9udHMvZnNlbWVyaWN3ZWJib2xkL0ZTRW1lcmljV2ViLUJvbGQud29mZicpIGZvcm1hdCgnd29mZicpOyAvKiBNb2Rlcm4gQnJvd3NlcnMgKi9cbiAgICBmb250LXdlaWdodDogNzAwOyBcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG59XG5AZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogJ0ZTRW1lcmljJztcbiAgICBzcmM6IHVybCgnL2ZvbnRzL2ZzZW1lcmljd2ViYm9sZGl0YWxpYy9GU0VtZXJpY1dlYi1Cb2xkSXRhbGljLmVvdCcpOyAvKiBJRTkgKi9cbiAgICBzcmM6IHVybCgnL2ZvbnRzL2ZzZW1lcmljd2ViYm9sZGl0YWxpYy9GU0VtZXJpY1dlYi1Cb2xkSXRhbGljLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksIC8qIElFNi1JRTggKi8gXG4gICAgdXJsKCcvZm9udHMvZnNlbWVyaWN3ZWJib2xkaXRhbGljL0ZTRW1lcmljV2ViLUJvbGRJdGFsaWMud29mZicpIGZvcm1hdCgnd29mZicpOyAvKiBNb2Rlcm4gQnJvd3NlcnMgKi9cbiAgICBmb250LXdlaWdodDogNzAwO1xuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuaHRtbCB7XG4gICAgY29sb3I6ICRjb2xvci1tYWluO1xuICAgIGZvbnQtZmFtaWx5OiAkZm9udC1zYW5zOyAvL3NhbnMtc2VyaWY7XG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludChicC1tZWRpdW0pIHtcbiAgICAgICAgZm9udC1zaXplOiAxMTIuNSU7IC8vID0xLjEyNWVtIChzbyAxcmVtIChhbmQgMWVtIG9uIGFueSBlbGVtZW50IHdpdGhvdXQgYSBkZWRpY2F0ZWQgZm9udC1zaXplKSA9IDE4cHgpXG4gICAgfVxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoYnAtbGFyZ2UpIHtcbiAgICAgICAgLypmb250LXNpemU6IDEzNy41JTsgLy8gPTEuMzc1ZW0gKHNvIDFyZW0gKGFuZCAxZW0gb24gYW55IGVsZW1lbnQgd2l0aG91dCBhIGRlZGljYXRlZCBmb250LXNpemUpID0gMjJweCkqL1xuICAgICAgICBmb250LXNpemU6IDEzMS4yNSU7IC8vID0xLjMxMjVlbSAoc28gMXJlbSAoYW5kIDFlbSBvbiBhbnkgZWxlbWVudCB3aXRob3V0IGEgZGVkaWNhdGVkIGZvbnQtc2l6ZSkgPSAyMXB4KSB8IDIxIHJhdGhlciB0aGFuIDIyIGJlY2F1c2UgMjIgaXMgbm90IG9uIG91ciBzY2FsZS5cbiAgICB9XG59XG5cbmJvZHkge1xuICAgIGZvbnQtZmVhdHVyZS1zZXR0aW5nczogXCJsaWdhXCIgMTtcbiAgICBmb250LWZlYXR1cmUtc2V0dGluZ3M6IFwib251bVwiIDE7XG4gICAgbGluZS1oZWlnaHQ6ICRiYXNlLWxpbmUtaGVpZ2h0OyAvLyAxNiAqIDEuNCA9IDIyLjQ7XG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludChicC1tZWRpdW0pIHtcbiAgICAgICAgbGluZS1oZWlnaHQ6ICRicC1tLWJhc2UtbGluZS1oZWlnaHQ7ICAvLyBzdGlsbCAxLjQgc28gYXQgYnAtbWVkaXVtIGFuZCBhYm92ZSBsaW5lLWhlaWdodCA9IDI1LjIgKDE4ICogMS4zNSkgYW5kIGF0IGJwLWxhcmdlIGxpbmUtaGVpZ2h0ID0gMjkuNCAoMjEgKiAxLjM1KTtcbiAgICB9XG4gICAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gICAgdGV4dC1yZW5kZXJpbmc6IG9wdGltaXplTGVnaWJpbGl0eTtcbn1cblxuQHN1cHBvcnRzIChmb250LXZhcmlhbnQtbGlnYXR1cmVzOiBjb21tb24tbGlnYXR1cmVzKSB7XG4gICAgYm9keSB7XG4gICAgICAgIGZvbnQtZmVhdHVyZS1zZXR0aW5nczogbm9ybWFsO1xuICAgICAgICBmb250LXZhcmlhbnQtbGlnYXR1cmVzOiBjb21tb24tbGlnYXR1cmVzO1xuICAgIH1cbn1cblxuQHN1cHBvcnRzIChmb250LXZhcmlhbnQtbnVtZXJpYzogb2xkc3R5bGUtbnVtcykge1xuICAgIGJvZHkge1xuICAgICAgICBmb250LWZlYXR1cmUtc2V0dGluZ3M6IG5vcm1hbDtcbiAgICAgICAgZm9udC12YXJpYW50LW51bWVyaWM6IG9sZHN0eWxlLW51bXM7XG4gICAgfVxufVxuXG5hIHtcbiAgICBjb2xvcjogJGNvbG9yLWFjY2VudDsgXG4gICAgdGV4dC1kZWNvcmF0aW9uLXNraXAtaW5rOiBub25lO1xuICAgICY6aG92ZXIge1xuICAgICAgICBjb2xvcjogZGFya2VuKCRjb2xvci1hY2NlbnQsIDIwJSk7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAgIH1cbn1cblxuc21hbGwge1xuICAgIEBpbmNsdWRlIGZvbnQtc2l6ZS10by1yZW0oJHNtYWxsZXN0LWZvbnQtc2l6ZSk7XG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludChicC1tZWRpdW0pIHtcbiAgICAgICAgQGluY2x1ZGUgZm9udC1zaXplLXRvLXJlbSgkc21hbGxlc3QtZm9udC1zaXplKTtcbiAgICB9XG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludChicC1sYXJnZSkge1xuICAgICAgICBAaW5jbHVkZSBmb250LXNpemUtdG8tcmVtKCRzbWFsbGVzdC1mb250LXNpemUpO1xuICAgIH1cbn1cblxucCB7XG4gICAgQGluY2x1ZGUgcGFyYWdyYXBoLW1hcmdpbnMoKTtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIC8vbWF4LXdpZHRoOiAzOGVtO1xufVxuXG4vLyBTaWRlYmFyIHBhcmFncmFwaHNcblxuW3JvbGU9Y29tcGxlbWVudGFyeV0ge1xuICAgIHAge1xuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50KGJwLWxhcmdlKSB7XG4gICAgICAgICAgICBmb250LXNpemU6ICgoMTgvMjEpKjEwMCkrJTsgLy8gPTE4cHhcbiAgICAgICAgfVxuICAgIH1cbn1cblxuYmxvY2txdW90ZSwgXG51bCxcbm9sIHtcbiAgICBAaW5jbHVkZSBwYXJhZ3JhcGgtbWFyZ2lucygpO1xufVxuXG51bCB1bCwgXG5vbCBvbCB7XG4gICAgbWFyZ2luLXRvcDogMDtcbn1cblxubGkge1xuICAgIGxpc3Qtc3R5bGUtcG9zaXRpb246IGluc2lkZTtcbn1cblxudWwgbGkge1xuICAgIHBhZGRpbmctbGVmdDogLjc1ZW07XG4gICAgbGkge1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDEuNWVtO1xuICAgIH1cbn1cblxuQGluY2x1ZGUgYnJlYWtwb2ludChicC1tZWRpdW0pIHtcbiAgICBvbCB7XG4gICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgICAgIGNvdW50ZXItcmVzZXQ6IG15bGlzdDtcbiAgICAgICAgbGkge1xuICAgICAgICAgICAgbGlzdC1zdHlsZS1wb3NpdGlvbjogb3V0c2lkZTtcbiAgICAgICAgICAgICY6OmJlZm9yZSB7XG4gICAgICAgICAgICAgICAgY291bnRlci1pbmNyZW1lbnQ6IG15bGlzdDtcbiAgICAgICAgICAgICAgICBjb250ZW50OiBjb3VudGVyKG15bGlzdCk7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IC0xLjI1K2VtO1xuICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogLjc1ZW07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbmR0IHtcbiAgICBmb250LXdlaWdodDogNjAwO1xufVxuXG5kZCB7XG4gICAgQGluY2x1ZGUgcGFyYWdyYXBoLW1hcmdpbnMoKTtcbn1cblxuYWJiciwgY29kZS5tYXJrdXAuZWxlbWVudCwgY29kZS5tYXJrdXAuYXR0cmlidXRlIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gICAgZm9udC12YXJpYW50OiBhbGwtc21hbGwtY2Fwcztcbn1cblxuLy8gSGVhZGluZ3MsIHN0YXJ0aW5nIHdpdGggc21hbGxlc3QgZmlyc3QuXG5cbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYge1xuICAgIGNvbG9yOiAkY29sb3ItaW50ZXJmYWNlLWFuZC1kaXNwbGF5O1xuICAgIGZvbnQtZmFtaWx5OiAkZm9udC1zYW5zO1xuICAgIGZvbnQtZmVhdHVyZS1zZXR0aW5nczogXCJkbGlnXCIgMTtcbiAgICBAc3VwcG9ydHMgKGZvbnQtdmFyaWFudC1saWdhdHVyZXM6IGRpc2NyZXRpb25hcnktbGlnYXR1cmVzKSB7XG4gICAgICAgIC5kbGlnIHtcbiAgICAgICAgICAgIGZvbnQtZmVhdHVyZS1zZXR0aW5nczogbm9ybWFsO1xuICAgICAgICAgICAgZm9udC12YXJpYW50LWxpZ2F0dXJlczogZGlzY3JldGlvbmFyeS1saWdhdHVyZXM7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbmg2LFxuaDUsIFxuaDQge1xuICAgIGZvbnQtd2VpZ2h0OiAyMDA7XG4gICAgQGluY2x1ZGUgZm9udC1zaXplLXRvLXJlbSgkYmFzZS1mb250LXNpemUpO1xuICAgIEBpbmNsdWRlIHJoeXRobWljLWxpbmUtaGVpZ2h0KCRiYXNlLWZvbnQtc2l6ZSk7XG4gICAgQGluY2x1ZGUgcmh5dGhtaWMtdmVydGljYWwtbWFyZ2lucygkYmFzZS1mb250LXNpemUpO1xuICAgIC8qQGluY2x1ZGUgYnJlYWtwb2ludChicC1tZWRpdW0pIHtcbiAgICAgICAgQGluY2x1ZGUgZm9udC1zaXplLXRvLXJlbSgkYnAtbS1iYXNlLWZvbnQtc2l6ZSwgJGJwLW0tYmFzZS1mb250LXNpemUpO1xuICAgICAgICBsaW5lLWhlaWdodDogJGJwLW0tYmFzZS1saW5lLWhlaWdodDtcbiAgICAgICAgQGluY2x1ZGUgcmh5dGhtaWMtdmVydGljYWwtbWFyZ2lucygkYnAtbS1iYXNlLWZvbnQtc2l6ZSwgJGJwLW0tcHgtYmFzZS1saW5lLWhlaWdodCk7XG4gICAgfVxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoYnAtbGFyZ2UpIHtcbiAgICAgICAgQGluY2x1ZGUgZm9udC1zaXplLXRvLXJlbSgkYnAtbC1iYXNlLWZvbnQtc2l6ZSwgJGJwLWwtYmFzZS1mb250LXNpemUpO1xuICAgICAgICBsaW5lLWhlaWdodDogJGJwLWwtYmFzZS1saW5lLWhlaWdodDtcbiAgICAgICAgQGluY2x1ZGUgcmh5dGhtaWMtdmVydGljYWwtbWFyZ2lucygkYnAtbC1iYXNlLWZvbnQtc2l6ZSwgJGJwLWwtcHgtYmFzZS1saW5lLWhlaWdodCk7XG4gICAgfSovXG59XG5cbiVoMywgXG5oMyB7XG4gICAgZm9udC13ZWlnaHQ6IDIwMDtcbiAgICAvKmxldHRlci1zcGFjaW5nOiAtMC4wMmVtOyovXG4gICAgQGluY2x1ZGUgZm9udC1zaXplLXRvLXJlbSgyMSk7XG4gICAgQGluY2x1ZGUgcmh5dGhtaWMtdmVydGljYWwtbWFyZ2lucygyMSk7XG4gICAgQGluY2x1ZGUgcmh5dGhtaWMtbGluZS1oZWlnaHQoMjEpO1xuICAgIC8qQGluY2x1ZGUgYnJlYWtwb2ludChicC1tZWRpdW0pIHtcbiAgICAgICAgQGluY2x1ZGUgZm9udC1zaXplLXRvLXJlbSgyNSwgJGJwLW0tYmFzZS1mb250LXNpemUpO1xuICAgICAgICAvL0BpbmNsdWRlIHJoeXRobWljLWxpbmUtaGVpZ2h0KDI1LCAkYnAtbS1weC1iYXNlLWxpbmUtaGVpZ2h0ICogMS4yNSk7IC8vIHVuZGVyIDEgc28gZGFuZ2Vyb3VzbHkgdGlnaHQ6IHdhdGNoIGl0LlxuXG4gICAgICAgIEBpbmNsdWRlIHJoeXRobWljLWxpbmUtaGVpZ2h0KDI1LCAkYnAtbS1weC1iYXNlLWxpbmUtaGVpZ2h0KTsgLy9saW5lLWhlaWdodDogMTtcblxuICAgICAgICBAaW5jbHVkZSByaHl0aG1pYy12ZXJ0aWNhbC1tYXJnaW5zKDI1LCAkYnAtbS1weC1iYXNlLWxpbmUtaGVpZ2h0KTtcbiAgICB9XG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludChicC1sYXJnZSkge1xuICAgICAgICBAaW5jbHVkZSBmb250LXNpemUtdG8tcmVtKDI4LCAkYnAtbC1iYXNlLWZvbnQtc2l6ZSk7XG4gICAgICAgIEBpbmNsdWRlIHJoeXRobWljLWxpbmUtaGVpZ2h0KDI4LCAkYnAtbC1weC1iYXNlLWxpbmUtaGVpZ2h0KTtcbiAgICAgICAgQGluY2x1ZGUgcmh5dGhtaWMtdmVydGljYWwtbWFyZ2lucygyOCwgJGJwLWwtcHgtYmFzZS1saW5lLWhlaWdodCk7XG4gICAgfSovXG59XG5cbiVoMiwgXG5oMiB7XG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICAvKmxldHRlci1zcGFjaW5nOiAtMC4wMmVtOyovXG4gICAgQGluY2x1ZGUgZm9udC1zaXplLXRvLXJlbSgyNSk7XG4gICAgQGluY2x1ZGUgcmh5dGhtaWMtdmVydGljYWwtbWFyZ2lucygyNSk7XG4gICAgQGluY2x1ZGUgcmh5dGhtaWMtbGluZS1oZWlnaHQoMjUpO1xuLyogICAgQGluY2x1ZGUgYnJlYWtwb2ludChicC1tZWRpdW0pIHtcbiAgICAgICAgQGluY2x1ZGUgZm9udC1zaXplLXRvLXJlbSgzMywgJGJwLW0tYmFzZS1mb250LXNpemUpO1xuICAgICAgICAvL0BpbmNsdWRlIHJoeXRobWljLWxpbmUtaGVpZ2h0KDMzLCAkYnAtbS1weC1iYXNlLWxpbmUtaGVpZ2h0ICogMS4yNSk7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxO1xuXG4gICAgICAgIEBpbmNsdWRlIHJoeXRobWljLXZlcnRpY2FsLW1hcmdpbnMoMzMsICRicC1tLXB4LWJhc2UtbGluZS1oZWlnaHQpO1xuICAgIH1cbiAgICBAaW5jbHVkZSBicmVha3BvaW50KGJwLXhsYXJnZSkge1xuICAgICAgICBAaW5jbHVkZSBmb250LXNpemUtdG8tcmVtKDQ0LCAkYnAtbC1iYXNlLWZvbnQtc2l6ZSk7XG4gICAgICAgIC8vQGluY2x1ZGUgcmh5dGhtaWMtbGluZS1oZWlnaHQoNDQsICRicC1sLXB4LWJhc2UtbGluZS1oZWlnaHQgKiAxLjc1KTtcblxuICAgICAgICBsaW5lLWhlaWdodDogMTtcblxuICAgICAgICBAaW5jbHVkZSByaHl0aG1pYy12ZXJ0aWNhbC1tYXJnaW5zKDQ0LCAkYnAtbC1weC1iYXNlLWxpbmUtaGVpZ2h0KTtcbiAgICB9Ki9cbn1cblxuJWgxLCBcbmgxIHtcbiAgICBmb250LXdlaWdodDogNzAwO1xuICAgIGxldHRlci1zcGFjaW5nOiAtMC4wMmVtO1xuICAgIEBpbmNsdWRlIGZvbnQtc2l6ZS10by1yZW0oMzMpO1xuICAgIEBpbmNsdWRlIHJoeXRobWljLXZlcnRpY2FsLW1hcmdpbnMoMzMpO1xuICAgIEBpbmNsdWRlIHJoeXRobWljLWxpbmUtaGVpZ2h0KDMzKTtcbiAgICBAaW5jbHVkZSByaHl0aG1pYy1saW5lLWhlaWdodCgzMywgJGJhc2UtbGluZS1oZWlnaHQtaW4tcHggKiAyKTtcbi8qICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoYnAtbWVkaXVtKSB7XG4gICAgICAgIEBpbmNsdWRlIGZvbnQtc2l6ZS10by1yZW0oNTEsICRicC1tLWJhc2UtZm9udC1zaXplKTtcbiAgICAgICAgLy9AaW5jbHVkZSByaHl0aG1pYy1saW5lLWhlaWdodCg1MSwgJGJwLW0tcHgtYmFzZS1saW5lLWhlaWdodCAqIDIuMjUpO1xuICAgICAgICBsaW5lLWhlaWdodDogMTtcbiAgICAgICAgQGluY2x1ZGUgcmh5dGhtaWMtdmVydGljYWwtbWFyZ2lucyg1MSwgJGJwLW0tcHgtYmFzZS1saW5lLWhlaWdodCk7XG4gICAgfVxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoYnAteGxhcmdlKSB7XG4gICAgICAgIEBpbmNsdWRlIGZvbnQtc2l6ZS10by1yZW0oNzgsICRicC1sLWJhc2UtZm9udC1zaXplKTtcbiAgICAgICAgLy9AaW5jbHVkZSByaHl0aG1pYy1saW5lLWhlaWdodCg3OCwgJGJwLW0tcHgtYmFzZS1saW5lLWhlaWdodCAqIDMuMjUpO1xuICAgICAgICBsaW5lLWhlaWdodDogMTtcbiAgICAgICAgQGluY2x1ZGUgcmh5dGhtaWMtdmVydGljYWwtbWFyZ2lucyg3OCwgJGJwLWwtcHgtYmFzZS1saW5lLWhlaWdodCk7XG4gICAgfSovXG59XG5cblxuXG4vLyBMaXN0c1xuXG4uaGZlZWQsIFxuLmhmZWVkIGxpIHtcbiAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgIHBhZGRpbmctbGVmdDogMDtcbn1cblxuLmhmZWVkIC5oZW50cnkge1xuICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgjZWVlLCAjZWVlKSBuby1yZXBlYXQgYm90dG9tIGNlbnRlciAvIDEyLjUlIDAuMmNoO1xuICAgIHBhZGRpbmctYm90dG9tOiAkYmFzZS1saW5lLWhlaWdodCoxLjUrZW07IC8vICgxLjUgbGluZS1oZWlnaHRzIHBsdXMgdGhlIGhhbGYgbGluZS1oZWlnaHQgb2YgbWFyZ2luIGFib3ZlIHRoZSBsYXN0IHBhcmFncmFwaCA9IGEgcm91bmQgMiBsaW5lLWhlaWdodHMpXG4gICAgbWFyZ2luLWJvdHRvbTogJGJhc2UtbGluZS1oZWlnaHQqMitlbTtcbiAgICAvKkBpbmNsdWRlIGJyZWFrcG9pbnQoYnAtbWVkaXVtKSB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206ICRicC1tLWJhc2UtbGluZS1oZWlnaHQqMitlbTtcbiAgICB9XG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludChicC14bGFyZ2UpIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogJGJwLWwtYmFzZS1saW5lLWhlaWdodCoyK2VtO1xuICAgIH0qL1xuICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICAgIGJhY2tncm91bmQ6IG5vbmU7XG4gICAgfVxuICAgIGEgeyBcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICBoMyB7XG4gICAgICAgICAgICBAZXh0ZW5kICVoMjtcbiAgICAgICAgICAgIGNvbG9yOiAkY29sb3ItYWNjZW50O1xuICAgICAgICB9XG4gICAgICAgIC5lbnRyeS1wdWJsaXNoZWQge1xuICAgICAgICAgICAgY29sb3I6ICRjb2xvci1tYWluO1xuICAgICAgICB9XG4gICAgICAgIGltZyB7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgIG1hcmdpbjogJGJhc2UtbGluZS1oZWlnaHQrZW0gMCAkYmFzZS1saW5lLWhlaWdodCtlbS8yO1xuICAgICAgICB9XG4gICAgICAgIC5kZXNjcmlwdGlvbiB7XG4gICAgICAgICAgICAvL292ZXJmbG93OiBhdXRvO1xuICAgICAgICB9XG4gICAgICAgIC5kZXNjcmlwdGlvbiBwIHtcbiAgICAgICAgICAgIGNvbG9yOiAkY29sb3ItbWFpbjtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICAgIH1cbiAgICB9IFxufVxuXG5cbiIsImlucHV0IHtcblx0bWF4LXdpZHRoOiAxMDAlO1xufVxuXG4uY29tbWVudC1mb3JtIHtcblx0ZGlzcGxheTogbm9uZTtcbn0iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFDQUEsNEVBQTRFO0FBRTVFO2dGQUNnRjtBQUVoRjs7O0dBR0c7QUFFSCxBQUFBLElBQUksQ0FBQztFQUNILFdBQVcsRUFBRSxJQUFJO0VBQUUsT0FBTztFQUMxQix3QkFBd0IsRUFBRSxJQUFJO0VBQUUsT0FBTyxFQUN4Qzs7QUFFRDtnRkFDZ0Y7QUFFaEY7O0dBRUc7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 */
