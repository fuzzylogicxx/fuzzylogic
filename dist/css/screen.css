@charset "UTF-8";
/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

/* Reset */
html, body, section, nav, article, aside, h1, h2, h3, h4, h5, h6, hgroup, header, footer, address,
p, hr, pre, blockquote, ol, ul, li, dl, dt, dd, figure, figcaption, div,
a, em, strong, small, s, cite, q, dfn, abbr, time, code, var, samp, kbd, i, b, mark, span, br,
ins, del,
img, iframe, embed, object, video, audio, canvas, map, area,
table, caption, colgroup, tbody, thead, tfoot, tr, td, th,
form, fieldset, legend, label, input, button, select, textarea,
details, summary, command, menu {
  vertical-align: baseline;
  margin: 0;
  padding: 0; }

table {
  border-collapse: collapse;
  border-spacing: 0;
  font-size: 100%; }

.nobr {
  white-space: nowrap;
  -ms-hyphens: manual;
  -mov-hyphens: manual;
  -webkit-hyphens: manual;
  hyphens: manual; }

.paren {
  font-style: normal; }

.highlight, mark {
  background-color: rgba(255, 255, 0, 0.5); }

/* end Reset */
.group:after {
  content: "";
  display: table;
  clear: both; }

html {
  box-sizing: border-box; }

*, *:before, *:after {
  box-sizing: inherit; }

/*
 * A better looking default horizontal rule
 */
hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #ccc;
  margin: 1em 0;
  padding: 0; }

/*
Thin (normally 100)
Extra Light  (normally 200)
Light (normally 300)
Book  (?)
Regular (normally 400)
Core (?)
Medium  (normally 500)
SemiBold (normally 600)
Bold (normally 700)
ExtraBold (normally 800)
Heavy (normally 900)
*/
@font-face {
  font-family: 'FSEmeric';
  src: url("/fonts/fsemericwebextralight/FSEmericWeb-ExtraLight.eot");
  /* IE9 */
  src: url("/fonts/fsemericwebextralight/FSEmericWeb-ExtraLight.eot?#iefix") format("embedded-opentype"), url("/fonts/fsemericwebextralight/FSEmericWeb-ExtraLight.woff") format("woff");
  /* Modern Browsers */
  font-weight: 200;
  font-style: normal; }

@font-face {
  font-family: 'FSEmeric';
  src: url("/fonts/fsemericwebextralightitalic/FSEmericWeb-ExtraLightItalic.eot");
  /* IE9 */
  src: url("/fonts/fsemericwebextralightitalic/FSEmericWeb-ExtraLightItalic.eot?#iefix") format("embedded-opentype"), url("/fonts/fsemericwebextralightitalic/FSEmericWeb-ExtraLightItalic.woff") format("woff");
  /* Modern Browsers */
  font-weight: 200;
  font-style: italic; }

@font-face {
  font-family: 'FSEmeric';
  src: url("/fonts/fsemericwebbook/FSEmericWeb-Book.eot");
  /* IE9 */
  src: url("/fonts/fsemericwebbook/FSEmericWeb-Book.eot?#iefix") format("embedded-opentype"), url("/fonts/fsemericwebbook/FSEmericWeb-Book.woff") format("woff");
  /* Modern Browsers */
  font-weight: 350;
  font-style: normal; }

@font-face {
  font-family: 'FSEmeric';
  src: url("/fonts/fsemericwebbookitalic/FSEmericWeb-BookItalic.eot");
  /* IE9 */
  src: url("/fonts/fsemericwebbookitalic/FSEmericWeb-BookItalic.eot?#iefix") format("embedded-opentype"), url("/fonts/fsemericwebbookitalic/FSEmericWeb-BookItalic.woff") format("woff");
  /* Modern Browsers */
  font-weight: 350;
  font-style: italic; }

@font-face {
  font-family: 'FSEmeric';
  src: url("/fonts/fsemericwebregular/FSEmericWeb-Regular.eot");
  /* IE9 */
  src: url("/fonts/fsemericwebregular/FSEmericWeb-Regular.eot?#iefix") format("embedded-opentype"), url("/fonts/fsemericwebregular/FSEmericWeb-Regular.woff") format("woff");
  /* Modern Browsers */
  font-weight: 400;
  /* i.e. normal */
  font-style: normal; }

@font-face {
  font-family: 'FSEmeric';
  src: url("/fonts/fsemericwebitalic/FSEmericWeb-Italic.eot");
  /* IE9 */
  src: url("/fonts/fsemericwebitalic/FSEmericWeb-Italic.eot?#iefix") format("embedded-opentype"), url("/fonts/fsemericwebitalic/FSEmericWeb-Italic.woff") format("woff");
  /* Modern Browsers */
  font-weight: 400;
  /* i.e. normal */
  font-style: italic; }

@font-face {
  font-family: 'FSEmeric';
  src: url("/fonts/fsemericwebbold/FSEmericWeb-Bold.eot");
  /* IE9 */
  src: url("/fonts/fsemericwebbold/FSEmericWeb-Bold.eot?#iefix") format("embedded-opentype"), url("/fonts/fsemericwebbold/FSEmericWeb-Bold.woff") format("woff");
  /* Modern Browsers */
  font-weight: 700;
  font-style: normal; }

@font-face {
  font-family: 'FSEmeric';
  src: url("/fonts/fsemericwebbolditalic/FSEmericWeb-BoldItalic.eot");
  /* IE9 */
  src: url("/fonts/fsemericwebbolditalic/FSEmericWeb-BoldItalic.eot?#iefix") format("embedded-opentype"), url("/fonts/fsemericwebbolditalic/FSEmericWeb-BoldItalic.woff") format("woff");
  /* Modern Browsers */
  font-weight: 700;
  font-style: italic; }

html {
  color: #333333;
  font-family: "FSEmeric", sans-serif; }

body {
  -webkit-font-feature-settings: "liga" 1;
          font-feature-settings: "liga" 1;
  -webkit-font-feature-settings: "onum" 1;
          font-feature-settings: "onum" 1;
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility; }

@supports ((-webkit-font-variant-ligatures: common-ligatures) or (font-variant-ligatures: common-ligatures)) {
  body {
    -webkit-font-feature-settings: normal;
            font-feature-settings: normal;
    -webkit-font-variant-ligatures: common-ligatures;
            font-variant-ligatures: common-ligatures; } }

@supports (font-variant-numeric: oldstyle-nums) {
  body {
    -webkit-font-feature-settings: normal;
            font-feature-settings: normal;
    font-variant-numeric: oldstyle-nums; } }

a {
  color: #35857d;
  text-decoration-skip-ink: none; }

small {
  font-size: 14px;
  font-size: 0.875rem; }

p {
  @paragraph-margins (); }

blockquote,
ul,
ol {
  @paragraph-margins (); }

ul ul,
ol ol {
  margin-top: 0; }

li {
  list-style-position: inside; }

ul li {
  padding-left: .75em; }
  ul li li {
    padding-left: 1.5em; }

@media only screen and (min-width: 60em) {
  ol {
    list-style: none;
    counter-reset: mylist; }
    ol li {
      list-style-position: outside; }
      ol li::before {
        counter-increment: mylist;
        content: counter(mylist);
        margin-left: -1.25em;
        margin-right: .75em; } }

dd {
  @paragraph-margins (); }

abbr, code.markup.element, code.markup.attribute {
  text-decoration: none;
  font-family: inherit;
  font-variant: all-small-caps; }

/*h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
li,
dd {
    hyphens: auto;
}*/
h1, h2, h3, h4, h5, h6 {
  color: #333333;
  font-family: "FSEmeric", sans-serif;
  -webkit-font-feature-settings: "dlig" 1;
          font-feature-settings: "dlig" 1; }
  @supports ((-webkit-font-variant-ligatures: discretionary-ligatures) or (font-variant-ligatures: discretionary-ligatures)) {
    h1 .dlig, h2 .dlig, h3 .dlig, h4 .dlig, h5 .dlig, h6 .dlig {
      -webkit-font-feature-settings: normal;
              font-feature-settings: normal;
      -webkit-font-variant-ligatures: discretionary-ligatures;
              font-variant-ligatures: discretionary-ligatures; } }

/*h6,
h5, 
h4 {
    font-weight: 800;
    @include font-size-to-rem($base-font-size);
    line-height: 1.25; // set by eye. 1.5 is too much, 1 is too small.
    @include rhythmic-vertical-margins($base-font-size);
    letter-spacing: -0.01em;
}*/
/*h3 {
    font-weight: 800;
    @include font-size-to-rem(18); // was 21 - maybe go for that at iphone7
    @include rhythmic-line-height(18);
    @include rhythmic-vertical-margins(18);
    letter-spacing: -0.01em;
    /*max-width: 30em;* /
}*/
/*%h2,
h2 {
    font-weight: 800;
    @include font-size-to-rem(21); // was 25 - maybe go for that at iphone7
    @include rhythmic-line-height(21);
    @include rhythmic-vertical-margins(21);
    letter-spacing: -0.01em;
}*/
/*h1 {
    font-weight: 800;
    @include font-size-to-rem(33); 
    
    line-height: 1; 
    
    @include rhythmic-vertical-margins(33);
    letter-spacing: -0.02em; // Gently tighten big, bold and wide fonts
    /*max-width: 28em;* /
}
*/
/*%nice-body-letter-spacing {
    letter-spacing: -.0125em;
}*/
article p,
article li,
article dt,
article dd {
  /*@extend %nice-body-letter-spacing;*/
  -webkit-hyphens: auto;
      -ms-hyphens: auto;
          hyphens: auto; }

/*// Mark the opening of each passage of text
.article-body > p:first-child::first-line {
    // for legacy browsers
    font-feature-settings: "smcp" 1;
}
@supports (font-variant-caps: small-caps) {
    .article-body > p:first-child::first-line {
        font-feature-settings: normal;
        font-variant-caps: small-caps;
    }
}*/
@supports (-webkit-initial-letter: 2) {
  .article-body::first-letter {
    -webkit-initial-letter: 2;
    initial-letter: 2;
    font-weight: bold;
    margin-right: .5em; } }

blockquote p {
  font-style: italic;
  hanging-punctuation: first last;
  quotes: '“' '”' '‘' '’'; }
  blockquote p:first-of-type::before {
    content: open-quote;
    margin-left: -0.83ch; }

@supports (hanging-punctuation: first last) {
  blockquote p:first-of-type::before {
    margin-left: 0; } }

blockquote p:last-of-type::after {
  content: close-quote; }

blockquote p:last-of-type {
  margin-bottom: 0; }

img {
  max-width: 100%; }

table {
  font-variant-numeric: lining-nums tabular-nums;
  margin: 0.75em 0; }

tfoot {
  display: none; }

.fig-table {
  max-width: 100%;
  overflow-x: scroll; }

[role=alert],
.message,
.alert-success,
.alert-error {
  color: #31708f;
  background-color: #d9edf7;
  border-color: #bce8f1; }

.alert-success {
  color: #3c763d;
  background-color: #dff0d8;
  border-color: #d6e9c6; }

.alert-error {
  color: #a94442;
  background-color: #f2dede;
  border-color: #ebccd1; }

[role=tab] {
  display: inline-block; }

[role=tab][aria-selected=true] {
  background: tomato; }

[role=tabpanel] {
  display: none; }

[role=tabpanel][aria-expanded=true] {
  display: block; }

article img {
  display: block; }

header {
  background: #80C1B0;
  text-align: center; }

/*header h1 {
    margin-top: 0;
}*/
#logo {
  /* to do: add non retina here and wrap following line in a retina-testing media query */
  background-image: url(../img/fuzzylogic_roundel_d_72@2x.png);
  /* if we change basic unit of vertical rhythm from 24, could change logo height from 72 to sthg that retains rhythm */
  background-size: 72px 72px;
  display: block;
  text-indent: -9999999px;
  width: 72px;
  height: 72px;
  margin: 0 auto; }

.hfeed,
.hfeed li {
  list-style: none;
  padding-left: 0;
  margin-left: 0; }

.intro {
  /*    font-weight: 200;
    font-size: 22px;
    line-height: 1.37;*/ }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
