@charset "UTF-8";
/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

/* Reset */
html, body, section, nav, article, aside, h1, h2, h3, h4, h5, h6, hgroup, header, footer, address,
p, hr, pre, blockquote, ol, ul, li, dl, dt, dd, figure, figcaption, div,
a, em, strong, small, s, cite, q, dfn, abbr, time, code, var, samp, kbd, i, b, mark, span, br,
ins, del,
img, iframe, embed, object, video, audio, canvas, map, area,
table, caption, colgroup, tbody, thead, tfoot, tr, td, th,
form, fieldset, legend, label, input, button, select, textarea,
details, summary, command, menu {
  vertical-align: baseline;
  margin: 0;
  padding: 0; }

table {
  border-collapse: collapse;
  border-spacing: 0;
  font-size: 100%; }

.nobr {
  white-space: nowrap;
  -ms-hyphens: manual;
  -mov-hyphens: manual;
  -webkit-hyphens: manual;
  hyphens: manual; }

.paren {
  font-style: normal; }

.highlight, mark {
  background-color: rgba(255, 255, 0, 0.5); }

/* end Reset */
/*
 * Remove text-shadow in selection highlight:
 * https://twitter.com/miketaylr/status/12228805301
 *
 * Vendor-prefixed and regular ::selection selectors cannot be combined:
 * https://stackoverflow.com/a/16982510/7133471
 *
 * Customize the background color to match your design.
 */
::-moz-selection {
  background: #b3d4fc;
  text-shadow: none; }

::selection {
  background: #b3d4fc;
  text-shadow: none; }

/*
 * A better looking default horizontal rule
 */
hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #ccc;
  margin: 1em 0;
  padding: 0; }

/*
 * Remove the gap between audio, canvas, iframes,
 * images, videos and the bottom of their containers:
 * https://github.com/h5bp/html5-boilerplate/issues/440
 */
audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle; }

/*
 * Remove default fieldset styles.
 */
fieldset {
  border: 0;
  margin: 0;
  padding: 0; }

/*
 * Allow only vertical resizing of textareas.
 */
textarea {
  resize: vertical; }

/* ==========================================================================
   Browser Upgrade Prompt
   ========================================================================== */
.browserupgrade {
  margin: 0.2em 0;
  background: #ccc;
  color: #000;
  padding: 0.2em 0; }

/* ==========================================================================
   Helper classes
   ========================================================================== */
/*
 * Hide visually and from screen readers
 */
.hidden {
  display: none !important; }

/*
 * Hide only visually, but have it available for screen readers:
 * https://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 *
 * 1. For long content, line feeds are not interpreted as spaces and small width
 *    causes content to wrap 1 word per line:
 *    https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
 */
.visuallyhidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
  white-space: nowrap;
  /* 1 */ }

/*
 * Extends the .visuallyhidden class to allow the element
 * to be focusable when navigated to via the keyboard:
 * https://www.drupal.org/node/897638
 */
.visuallyhidden.focusable:active,
.visuallyhidden.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  width: auto;
  white-space: inherit; }

/*
 * Hide visually and from screen readers, but maintain layout
 */
.invisible {
  visibility: hidden; }

/*
 * Clearfix: contain floats
 *
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that receive the `clearfix` class.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */
.clearfix:before,
.clearfix:after {
  content: " ";
  /* 1 */
  display: table;
  /* 2 */ }

.clearfix:after {
  clear: both; }

/* ==========================================================================
   Print styles.
   Inlined to avoid the additional HTTP request:
   https://www.phpied.com/delay-loading-your-print-css/
   ========================================================================== */
@media print {
  *,
  *:before,
  *:after {
    background: transparent !important;
    color: #000 !important;
    /* Black prints faster */
    box-shadow: none !important;
    text-shadow: none !important; }
  a,
  a:visited {
    text-decoration: underline; }
  a[href]:after {
    content: " (" attr(href) ")"; }
  abbr[title]:after {
    content: " (" attr(title) ")"; }
  /*
     * Don't show links that are fragment identifiers,
     * or use the `javascript:` pseudo protocol
     */
  a[href^="#"]:after,
  a[href^="javascript:"]:after {
    content: ""; }
  pre {
    white-space: pre-wrap !important; }
  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid; }
  /*
     * Printing Tables:
     * http://css-discuss.incutio.com/wiki/Printing_Tables
     */
  thead {
    display: table-header-group; }
  tr,
  img {
    page-break-inside: avoid; }
  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3; }
  h2,
  h3 {
    page-break-after: avoid; } }

.group:after {
  content: "";
  display: table;
  clear: both; }

html {
  box-sizing: border-box; }

*,
*:before,
*:after {
  box-sizing: inherit; }

/*
Thin (normally 100)
Extra Light  (normally 200)
Light (normally 300)
Book  (?)
Regular (normally 400)
Core (?)
Medium  (normally 500)
SemiBold (normally 600)
Bold (normally 700)
ExtraBold (normally 800)
Heavy (normally 900)
*/
@font-face {
  font-family: 'FSEmeric';
  src: url("/fonts/fsemericwebextralight/FSEmericWeb-ExtraLight.eot");
  /* IE9 */
  src: url("/fonts/fsemericwebextralight/FSEmericWeb-ExtraLight.eot?#iefix") format("embedded-opentype"), url("/fonts/fsemericwebextralight/FSEmericWeb-ExtraLight.woff") format("woff");
  /* Modern Browsers */
  font-weight: 200;
  font-style: normal; }

@font-face {
  font-family: 'FSEmeric';
  src: url("/fonts/fsemericwebextralightitalic/FSEmericWeb-ExtraLightItalic.eot");
  /* IE9 */
  src: url("/fonts/fsemericwebextralightitalic/FSEmericWeb-ExtraLightItalic.eot?#iefix") format("embedded-opentype"), url("/fonts/fsemericwebextralightitalic/FSEmericWeb-ExtraLightItalic.woff") format("woff");
  /* Modern Browsers */
  font-weight: 200;
  font-style: italic; }

/* Going for Emeric book instead of 'regular' as body font */
@font-face {
  font-family: 'FSEmeric';
  src: url("/fonts/fsemericwebbook/FSEmericWeb-Book.eot");
  /* IE9 */
  src: url("/fonts/fsemericwebbook/FSEmericWeb-Book.eot?#iefix") format("embedded-opentype"), url("/fonts/fsemericwebbook/FSEmericWeb-Book.woff") format("woff");
  /* Modern Browsers */
  font-weight: 400;
  font-style: normal; }

@font-face {
  font-family: 'FSEmeric';
  src: url("/fonts/fsemericwebbookitalic/FSEmericWeb-BookItalic.eot");
  /* IE9 */
  src: url("/fonts/fsemericwebbookitalic/FSEmericWeb-BookItalic.eot?#iefix") format("embedded-opentype"), url("/fonts/fsemericwebbookitalic/FSEmericWeb-BookItalic.woff") format("woff");
  /* Modern Browsers */
  font-weight: 400;
  font-style: italic; }

/*@font-face {
    font-family: 'FSEmeric';
    src: url('/fonts/fsemericwebregular/FSEmericWeb-Regular.eot');
    src: url('/fonts/fsemericwebregular/FSEmericWeb-Regular.eot?#iefix') format('embedded-opentype'),
    url('/fonts/fsemericwebregular/FSEmericWeb-Regular.woff') format('woff');
    font-weight: 400;
    font-style: normal;
}
@font-face {
    font-family: 'FSEmeric';
    src: url('/fonts/fsemericwebitalic/FSEmericWeb-Italic.eot');
    src: url('/fonts/fsemericwebitalic/FSEmericWeb-Italic.eot?#iefix') format('embedded-opentype'),
    url('/fonts/fsemericwebitalic/FSEmericWeb-Italic.woff') format('woff');
    font-weight: 400;
    font-style: italic;
}*/
@font-face {
  font-family: 'FSEmeric';
  src: url("/fonts/fsemericwebbold/FSEmericWeb-Bold.eot");
  /* IE9 */
  src: url("/fonts/fsemericwebbold/FSEmericWeb-Bold.eot?#iefix") format("embedded-opentype"), url("/fonts/fsemericwebbold/FSEmericWeb-Bold.woff") format("woff");
  /* Modern Browsers */
  font-weight: 700;
  font-style: normal; }

@font-face {
  font-family: 'FSEmeric';
  src: url("/fonts/fsemericwebbolditalic/FSEmericWeb-BoldItalic.eot");
  /* IE9 */
  src: url("/fonts/fsemericwebbolditalic/FSEmericWeb-BoldItalic.eot?#iefix") format("embedded-opentype"), url("/fonts/fsemericwebbolditalic/FSEmericWeb-BoldItalic.woff") format("woff");
  /* Modern Browsers */
  font-weight: 700;
  font-style: italic; }

html {
  color: #444444;
  font-family: "FSEmeric", sans-serif; }
  @media only screen and (min-width: 60em) {
    html {
      font-size: 112.5%; } }
  @media only screen and (min-width: 120em) {
    html {
      font-size: 131.25%; } }

body {
  -webkit-font-feature-settings: "liga" 1;
          font-feature-settings: "liga" 1;
  -webkit-font-feature-settings: "onum" 1;
          font-feature-settings: "onum" 1;
  line-height: 1.4;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility; }
  @media only screen and (min-width: 60em) {
    body {
      line-height: 1.4; } }

@supports ((-webkit-font-variant-ligatures: common-ligatures) or (font-variant-ligatures: common-ligatures)) {
  body {
    -webkit-font-feature-settings: normal;
            font-feature-settings: normal;
    -webkit-font-variant-ligatures: common-ligatures;
            font-variant-ligatures: common-ligatures; } }

@supports (font-variant-numeric: oldstyle-nums) {
  body {
    -webkit-font-feature-settings: normal;
            font-feature-settings: normal;
    font-variant-numeric: oldstyle-nums; } }

a {
  color: #35857d;
  text-decoration-skip-ink: none;
  text-decoration: none;
  /*border-bottom: 1px solid $color-accent;*/ }

small {
  font-size: 12px;
  font-size: 0.75rem; }

p {
  margin: 0.7em 0;
  font-weight: 400; }

blockquote,
ul,
ol {
  margin: 0.7em 0; }

ul ul,
ol ol {
  margin-top: 0; }

li {
  list-style-position: inside; }

ul li {
  padding-left: .75em; }
  ul li li {
    padding-left: 1.5em; }

@media only screen and (min-width: 60em) {
  ol {
    list-style: none;
    counter-reset: mylist; }
    ol li {
      list-style-position: outside; }
      ol li::before {
        counter-increment: mylist;
        content: counter(mylist);
        margin-left: -1.25em;
        margin-right: .75em; } }

dd {
  margin: 0.7em 0; }

abbr, code.markup.element, code.markup.attribute {
  text-decoration: none;
  font-family: inherit;
  font-variant: all-small-caps; }

/*h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
li,
dd {
    hyphens: auto;
}*/
h1, h2, h3, h4, h5, h6 {
  color: #444444;
  font-family: "FSEmeric", sans-serif;
  -webkit-font-feature-settings: "dlig" 1;
          font-feature-settings: "dlig" 1; }
  @supports ((-webkit-font-variant-ligatures: discretionary-ligatures) or (font-variant-ligatures: discretionary-ligatures)) {
    h1 .dlig, h2 .dlig, h3 .dlig, h4 .dlig, h5 .dlig, h6 .dlig {
      -webkit-font-feature-settings: normal;
              font-feature-settings: normal;
      -webkit-font-variant-ligatures: discretionary-ligatures;
              font-variant-ligatures: discretionary-ligatures; } }

/*h6,
h5, 
h4 {
    font-weight: 800;
    @include font-size-to-rem($base-font-size);
    line-height: 1.25; // set by eye. 1.5 is too much, 1 is too small.
    @include rhythmic-vertical-margins($base-font-size);
    letter-spacing: -0.01em;
}*/
/*h3 {
    font-weight: 800;
    @include font-size-to-rem(18); // was 21 - maybe go for that at iphone7
    @include rhythmic-line-height(18);
    @include rhythmic-vertical-margins(18);
    letter-spacing: -0.01em;
    /*max-width: 30em;* /
}*/
/*%h2,
h2 {
    font-weight: 800;
    @include font-size-to-rem(21); // was 25 - maybe go for that at iphone7
    @include rhythmic-line-height(21);
    @include rhythmic-vertical-margins(21);
    letter-spacing: -0.01em;
}*/
/*h1 {
    font-weight: 800;
    @include font-size-to-rem(33); 
    
    line-height: 1; 
    
    @include rhythmic-vertical-margins(33);
    letter-spacing: -0.02em; // Gently tighten big, bold and wide fonts
    /*max-width: 28em;* /
}
*/
h6,
h5,
h4 {
  /*font-weight: 800;*/
  /*letter-spacing: -0.01em;*/
  font-size: 16px;
  font-size: 1rem;
  line-height: 1.4;
  margin: 1.4em 0; }
  @media only screen and (min-width: 60em) {
    h6,
    h5,
    h4 {
      font-size: 18px;
      font-size: 1rem;
      line-height: 1.4;
      margin: 1.4em 0; } }


h3 {
  letter-spacing: -0.02em;
  font-size: 21px;
  font-size: 1.3125rem;
  margin: 1.0666666667em 0;
  line-height: 1.0666666667; }
  @media only screen and (min-width: 60em) {
    
    h3 {
      font-size: 25px;
      font-size: 1.3888888889rem;
      line-height: 1;
      margin: 1.008em 0; } }


h2 {
  letter-spacing: -0.02em;
  font-size: 25px;
  font-size: 1.5625rem;
  margin: 0.896em 0;
  line-height: 1; }
  @media only screen and (min-width: 60em) {
    
    h2 {
      font-size: 33px;
      font-size: 1.8333333333rem;
      margin: 0.7636363636em 0; } }


h1 {
  letter-spacing: -0.02em;
  font-size: 33px;
  font-size: 2.0625rem;
  margin: 0.6787878788em 0;
  line-height: 1; }
  @media only screen and (min-width: 60em) {
    
    h1 {
      font-size: 51px;
      font-size: 2.8333333333rem;
      margin: 0.4941176471em 0; } }

/*%nice-body-letter-spacing {
    letter-spacing: -.0125em;
}*/
article p,
article li,
article dt,
article dd {
  /*@extend %nice-body-letter-spacing;*/
  -webkit-hyphens: auto;
      -ms-hyphens: auto;
          hyphens: auto; }

/*// Mark the opening of each passage of text
.article-body > p:first-child::first-line {
    // for legacy browsers
    font-feature-settings: "smcp" 1;
}
@supports (font-variant-caps: small-caps) {
    .article-body > p:first-child::first-line {
        font-feature-settings: normal;
        font-variant-caps: small-caps;
    }
}*/
@supports (-webkit-initial-letter: 2) {
  .article-body::first-letter {
    -webkit-initial-letter: 2;
    initial-letter: 2;
    font-weight: bold;
    margin-right: .5em; } }

blockquote p {
  font-style: italic;
  hanging-punctuation: first last;
  quotes: '“' '”' '‘' '’'; }
  blockquote p:first-of-type::before {
    content: open-quote;
    margin-left: -0.83ch; }

@supports (hanging-punctuation: first last) {
  blockquote p:first-of-type::before {
    margin-left: 0; } }

blockquote p:last-of-type::after {
  content: close-quote; }

blockquote p:last-of-type {
  margin-bottom: 0; }

img {
  max-width: 100%; }

table {
  font-variant-numeric: lining-nums tabular-nums;
  margin: 0.7em 0; }

tfoot {
  display: none; }

.fig-table {
  max-width: 100%;
  overflow-x: scroll; }

[role=alert],
.message,
.alert-success,
.alert-error {
  color: #31708f;
  background-color: #d9edf7;
  border-color: #bce8f1; }

.alert-success {
  color: #3c763d;
  background-color: #dff0d8;
  border-color: #d6e9c6; }

.alert-error {
  color: #a94442;
  background-color: #f2dede;
  border-color: #ebccd1; }

[role=tab] {
  display: inline-block; }

[role=tab][aria-selected=true] {
  background: tomato; }

[role=tabpanel] {
  display: none; }

[role=tabpanel][aria-expanded=true] {
  display: block; }

article img {
  display: block; }

[role=banner] {
  background: #80C1B0;
  text-align: center; }

/*header h1 {
    margin-top: 0;
}*/
#logo {
  /* to do: add non retina here and wrap following line in a retina-testing media query */
  background-image: url(../img/fuzzylogic_roundel_d_72@2x.png);
  /* if we change basic unit of vertical rhythm from 24, could change logo height from 72 to sthg that retains rhythm */
  background-size: 72px 72px;
  display: block;
  text-indent: -9999999px;
  width: 72px;
  height: 72px;
  margin: 0 auto; }

main {
  margin: 0 auto;
  max-width: 32em;
  width: 90%; }

.hfeed,
.hfeed li {
  list-style: none;
  padding-left: 0;
  margin-left: 0; }

[role=contentinfo] {
  margin: 2.8em auto;
  max-width: 32em;
  width: 90%; }

.intro {
  margin: 1.4em 0 2.8em; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NyZWVuLmNzcyIsInNvdXJjZXMiOlsic2NyZWVuLnNjc3MiLCJfbm9ybWFsaXNlLnNjc3MiLCJfcmVzZXQuc2NzcyIsIl9zZWxlY3RlZF9oNWJwX21haW5kb3Rjc3NfZ29vZGllcy5zY3NzIiwiX3ZhcmlhYmxlcy5zY3NzIiwiX21peGlucy5zY3NzIiwiX2N1c3RvbV9nZW5lcmFsLnNjc3MiLCJfZ2VuZXJhbF90eXBvZ3JhcGh5LnNjc3MiLCJfZm9ybXMuc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwibm9ybWFsaXNlLnNjc3NcIjtcbkBpbXBvcnQgXCJyZXNldC5zY3NzXCI7XG5AaW1wb3J0IFwic2VsZWN0ZWRfaDVicF9tYWluZG90Y3NzX2dvb2RpZXMuc2Nzc1wiO1xuQGltcG9ydCBcInZhcmlhYmxlcy5zY3NzXCI7XG5AaW1wb3J0IFwibWl4aW5zLnNjc3NcIjtcbkBpbXBvcnQgXCJjdXN0b21fZ2VuZXJhbC5zY3NzXCI7XG5AaW1wb3J0IFwiZ2VuZXJhbF90eXBvZ3JhcGh5LnNjc3NcIjtcbkBpbXBvcnQgXCJmb3Jtcy5zY3NzXCI7XG5cbi8vIFJlc3BvbnNpdmUgaW1hZ2VzXG5cbmltZyB7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xufVxuXG5cbi8vIFRhYmxlc1xuLy8gRm9yIGNvbnNpc3RlbmN5IGFuZCBlYXNlIG9mIHVuZGVyc3RhbmRpbmcsIG1hdGNoIHRoZSBhbGlnbm1lbnQgb2YgaGVhZGluZ3MgdG8gdGhlIGFsaWdubWVudCBvZiB0aGUgZGF0YS5cbi8vIFJpZ2h0LWFsaWduIGhlYWRpbmdzIG9mIG51bWVyaWMgZGF0YSBhbmQgbGVmdC1hbGlnbiBoZWFkaW5ncyBvZiBjb2x1bW5zIHdpdGggdGV4dC5cblxudGFibGUge1xuICAgIGZvbnQtdmFyaWFudC1udW1lcmljOiBsaW5pbmctbnVtcyB0YWJ1bGFyLW51bXM7XG4gICAgQGluY2x1ZGUgcGFyYWdyYXBoLW1hcmdpbnMoKTtcbn1cbnRmb290IHtcbiAgICBkaXNwbGF5OiBub25lO1xufVxuLmZpZy10YWJsZSB7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIG92ZXJmbG93LXg6IHNjcm9sbDtcbn1cblxuLy8gQWxlcnRzXG5cbiVhbGVydCB7XG4gICAgY29sb3I6ICMzMTcwOGY7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Q5ZWRmNztcbiAgICBib3JkZXItY29sb3I6ICNiY2U4ZjE7XG59XG5bcm9sZT1hbGVydF0sXG4ubWVzc2FnZSxcbi5hbGVydC1zdWNjZXNzLFxuLmFsZXJ0LWVycm9yIHtcbiAgICBAZXh0ZW5kICVhbGVydDtcbn1cbi5hbGVydC1zdWNjZXNzIHtcbiAgICBjb2xvcjogIzNjNzYzZDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGZmMGQ4O1xuICAgIGJvcmRlci1jb2xvcjogI2Q2ZTljNjtcbn1cbi5hbGVydC1lcnJvciB7XG4gICAgY29sb3I6ICNhOTQ0NDI7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2YyZGVkZTtcbiAgICBib3JkZXItY29sb3I6ICNlYmNjZDE7XG59XG5cbi8vIFRhYnNcblxuW3JvbGU9dGFiXSB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuW3JvbGU9dGFiXVthcmlhLXNlbGVjdGVkPXRydWVdIHtcbiAgICBiYWNrZ3JvdW5kOiB0b21hdG87XG59XG5bcm9sZT10YWJwYW5lbF0ge1xuICAgIGRpc3BsYXk6IG5vbmU7XG59XG5bcm9sZT10YWJwYW5lbF1bYXJpYS1leHBhbmRlZD10cnVlXSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8vIFV0aWxpdGllcyAvIENvbW1vblxuXG4vLyBJbiBtb3N0IChidXQgbm90IG5lY2Vzc2FyaWx5IGFsbCkgc2l0dWF0aW9ucyB3ZSB3YW50IGltYWdlcyB0byBkaXNwbGF5IGJsb2NrXG5hcnRpY2xlIGltZyB7XG4gICAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8vIEhlYWRlclxuXG5bcm9sZT1iYW5uZXJdIHtcbiAgICBiYWNrZ3JvdW5kOiAjODBDMUIwO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbi8qaGVhZGVyIGgxIHtcbiAgICBtYXJnaW4tdG9wOiAwO1xufSovXG4jbG9nbyB7XG4gICAgLyogdG8gZG86IGFkZCBub24gcmV0aW5hIGhlcmUgYW5kIHdyYXAgZm9sbG93aW5nIGxpbmUgaW4gYSByZXRpbmEtdGVzdGluZyBtZWRpYSBxdWVyeSAqL1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWcvZnV6enlsb2dpY19yb3VuZGVsX2RfNzJAMngucG5nKTsgLyogaWYgd2UgY2hhbmdlIGJhc2ljIHVuaXQgb2YgdmVydGljYWwgcmh5dGhtIGZyb20gMjQsIGNvdWxkIGNoYW5nZSBsb2dvIGhlaWdodCBmcm9tIDcyIHRvIHN0aGcgdGhhdCByZXRhaW5zIHJoeXRobSAqL1xuICAgIGJhY2tncm91bmQtc2l6ZTogNzJweCA3MnB4O1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHRleHQtaW5kZW50OiAtOTk5OTk5OXB4O1xuICAgIHdpZHRoOiA3MnB4O1xuICAgIGhlaWdodDogNzJweDtcbiAgICBtYXJnaW46IDAgYXV0bztcbn1cblxuXG5cbi8vIE5hdmlnYXRpb25cblxuW3JvbGU9bmF2aWdhdGlvbl0ge31cblxuLy8gTWFpblxuXG5tYWluIHtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBtYXgtd2lkdGg6IDMyZW07XG4gICAgd2lkdGg6IDkwJTtcbn1cblxuXG4vLyBTaWRlYmFyXG5hc2lkZSB7XG59XG5cbi8vIEFydGljbGVzXG5cbmFydGljbGUge31cblxuXG4vLyBMaXN0c1xuLmhmZWVkLCBcbi5oZmVlZCBsaSB7XG4gICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICBwYWRkaW5nLWxlZnQ6IDA7XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG59XG5cbi8vIEZvb3RlciAoaS5lLiB0aGUgZ2xvYmFsIGZvb3RlciwgYXMgb3Bwb3NlZCB0byBhbnkgb3RoZXIgbG9jYWwgPGZvb3Rlcj4gZWxlbWVudHMpXG5cbltyb2xlPWNvbnRlbnRpbmZvXSB7XG4gICAgbWFyZ2luOiAoJGJhc2UtbGluZS1oZWlnaHQqMikrZW0gYXV0bztcbiAgICBtYXgtd2lkdGg6IDMyZW07XG4gICAgd2lkdGg6IDkwJTtcbn1cblxuXG4vLyBIb21lcGFnZSBcblxuLmludHJvIHtcbiAgICBtYXJnaW46ICRiYXNlLWxpbmUtaGVpZ2h0K2VtIDAgKCRiYXNlLWxpbmUtaGVpZ2h0KjIpK2VtO1xufVxuXG4vLyBQYWdlOiBYXG5cblxuXG5cbi8vIFBhZ2U6IFlcblxuXG4iLCIvKiEgbm9ybWFsaXplLmNzcyB2OC4wLjAgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG5cbi8qIERvY3VtZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gaU9TLlxuICovXG5cbmh0bWwge1xuICBsaW5lLWhlaWdodDogMS4xNTsgLyogMSAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbn1cblxuLyogU2VjdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmJvZHkge1xuICBtYXJnaW46IDA7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cbiAqL1xuXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwO1xufVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAqL1xuXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAxICovXG4gIGhlaWdodDogMDsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTsgLyogMiAqL1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxucHJlIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXG59XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIENocm9tZSA1Ny1cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXG4gKi9cblxuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lOyAvKiAxICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyAvKiAyICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDsgLyogMiAqL1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cblxuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5jb2RlLFxua2JkLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXG4gKiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtO1xufVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTtcbn1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLlxuICovXG5cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbn1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQ2hhbmdlIHRoZSBmb250IHN0eWxlcyBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQsXG5vcHRncm91cCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxMDAlOyAvKiAxICovXG4gIGxpbmUtaGVpZ2h0OiAxLjE1OyAvKiAxICovXG4gIG1hcmdpbjogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCB7IC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uLFxuc2VsZWN0IHsgLyogMSAqL1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICovXG5cbmJ1dHRvbixcblt0eXBlPVwiYnV0dG9uXCJdLFxuW3R5cGU9XCJyZXNldFwiXSxcblt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cImJ1dHRvblwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwicmVzZXRcIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInN1Ym1pdFwiXTo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbn1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cblxuYnV0dG9uOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJidXR0b25cIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInJlc2V0XCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJzdWJtaXRcIl06LW1vei1mb2N1c3Jpbmcge1xuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5cbmZpZWxkc2V0IHtcbiAgcGFkZGluZzogMC4zNWVtIDAuNzVlbSAwLjYyNWVtO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0OyAvKiAyICovXG4gIGRpc3BsYXk6IHRhYmxlOyAvKiAxICovXG4gIG1heC13aWR0aDogMTAwJTsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAzICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7IC8qIDEgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5cbnByb2dyZXNzIHtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgMTArLlxuICovXG5cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAuXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAuXG4gKi9cblxuW3R5cGU9XCJjaGVja2JveFwiXSxcblt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXG4gKi9cblxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cbiAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxuICovXG5cblt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7IC8qIDEgKi9cbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gbWFjT1MuXG4gKi9cblxuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cbiAqL1xuXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDsgLyogMiAqL1xufVxuXG4vKiBJbnRlcmFjdGl2ZVxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFIDEwKywgYW5kIEZpcmVmb3guXG4gKi9cblxuZGV0YWlscyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnN1bW1hcnkge1xuICBkaXNwbGF5OiBsaXN0LWl0ZW07XG59XG5cbi8qIE1pc2NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTArLlxuICovXG5cbnRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC5cbiAqL1xuXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4iLCIvLyBSaWNoYXJkIFJ1dHRlcidzIFJlc2V0XG4vKiBSZXNldCAqL1xuXG5odG1sLCBib2R5LCBzZWN0aW9uLCBuYXYsIGFydGljbGUsIGFzaWRlLCBoMSwgaDIsIGgzLCBoNCwgaDUsIGg2LCBoZ3JvdXAsIGhlYWRlciwgZm9vdGVyLCBhZGRyZXNzLFxucCwgaHIsIHByZSwgYmxvY2txdW90ZSwgb2wsIHVsLCBsaSwgZGwsIGR0LCBkZCwgZmlndXJlLCBmaWdjYXB0aW9uLCBkaXYsXG5hLCBlbSwgc3Ryb25nLCBzbWFsbCwgcywgY2l0ZSwgcSwgZGZuLCBhYmJyLCB0aW1lLCBjb2RlLCB2YXIsIHNhbXAsIGtiZCwgaSwgYiwgbWFyaywgc3BhbiwgYnIsXG5pbnMsIGRlbCxcbmltZywgaWZyYW1lLCBlbWJlZCwgb2JqZWN0LCB2aWRlbywgYXVkaW8sIGNhbnZhcywgbWFwLCBhcmVhLFxudGFibGUsIGNhcHRpb24sIGNvbGdyb3VwLCB0Ym9keSwgdGhlYWQsIHRmb290LCB0ciwgdGQsIHRoLFxuZm9ybSwgZmllbGRzZXQsIGxlZ2VuZCwgbGFiZWwsIGlucHV0LCBidXR0b24sIHNlbGVjdCwgdGV4dGFyZWEsXG5kZXRhaWxzLCBzdW1tYXJ5LCBjb21tYW5kLCBtZW51IHtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7XG59XG5cbnRhYmxlIHtcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICAgIGJvcmRlci1zcGFjaW5nOiAwO1xuICAgIGZvbnQtc2l6ZTogMTAwJTtcbn1cblxuLm5vYnIge1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgLW1zLWh5cGhlbnM6bWFudWFsO1xuICAgIC1tb3YtaHlwaGVuczptYW51YWw7XG4gICAgLXdlYmtpdC1oeXBoZW5zOm1hbnVhbDtcbiAgICBoeXBoZW5zOiBtYW51YWw7XG59XG5cbi5wYXJlbiB7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuXG4uaGlnaGxpZ2h0LCBtYXJrIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwyNTUsMCwwLjUpO1xufVxuXG4vKiBlbmQgUmVzZXQgKi9cbiIsIi8qXG4gKiBSZW1vdmUgdGV4dC1zaGFkb3cgaW4gc2VsZWN0aW9uIGhpZ2hsaWdodDpcbiAqIGh0dHBzOi8vdHdpdHRlci5jb20vbWlrZXRheWxyL3N0YXR1cy8xMjIyODgwNTMwMVxuICpcbiAqIFZlbmRvci1wcmVmaXhlZCBhbmQgcmVndWxhciA6OnNlbGVjdGlvbiBzZWxlY3RvcnMgY2Fubm90IGJlIGNvbWJpbmVkOlxuICogaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9hLzE2OTgyNTEwLzcxMzM0NzFcbiAqXG4gKiBDdXN0b21pemUgdGhlIGJhY2tncm91bmQgY29sb3IgdG8gbWF0Y2ggeW91ciBkZXNpZ24uXG4gKi9cblxuOjotbW96LXNlbGVjdGlvbiB7XG4gICAgYmFja2dyb3VuZDogI2IzZDRmYztcbiAgICB0ZXh0LXNoYWRvdzogbm9uZTtcbn1cblxuOjpzZWxlY3Rpb24ge1xuICAgIGJhY2tncm91bmQ6ICNiM2Q0ZmM7XG4gICAgdGV4dC1zaGFkb3c6IG5vbmU7XG59XG5cbi8qXG4gKiBBIGJldHRlciBsb29raW5nIGRlZmF1bHQgaG9yaXpvbnRhbCBydWxlXG4gKi9cblxuaHIge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGhlaWdodDogMXB4O1xuICAgIGJvcmRlcjogMDtcbiAgICBib3JkZXItdG9wOiAxcHggc29saWQgI2NjYztcbiAgICBtYXJnaW46IDFlbSAwO1xuICAgIHBhZGRpbmc6IDA7XG59XG5cbi8qXG4gKiBSZW1vdmUgdGhlIGdhcCBiZXR3ZWVuIGF1ZGlvLCBjYW52YXMsIGlmcmFtZXMsXG4gKiBpbWFnZXMsIHZpZGVvcyBhbmQgdGhlIGJvdHRvbSBvZiB0aGVpciBjb250YWluZXJzOlxuICogaHR0cHM6Ly9naXRodWIuY29tL2g1YnAvaHRtbDUtYm9pbGVycGxhdGUvaXNzdWVzLzQ0MFxuICovXG5cbmF1ZGlvLFxuY2FudmFzLFxuaWZyYW1lLFxuaW1nLFxuc3ZnLFxudmlkZW8ge1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG59XG5cbi8qXG4gKiBSZW1vdmUgZGVmYXVsdCBmaWVsZHNldCBzdHlsZXMuXG4gKi9cblxuZmllbGRzZXQge1xuICAgIGJvcmRlcjogMDtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDtcbn1cblxuLypcbiAqIEFsbG93IG9ubHkgdmVydGljYWwgcmVzaXppbmcgb2YgdGV4dGFyZWFzLlxuICovXG5cbnRleHRhcmVhIHtcbiAgICByZXNpemU6IHZlcnRpY2FsO1xufVxuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgQnJvd3NlciBVcGdyYWRlIFByb21wdFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLmJyb3dzZXJ1cGdyYWRlIHtcbiAgICBtYXJnaW46IDAuMmVtIDA7XG4gICAgYmFja2dyb3VuZDogI2NjYztcbiAgICBjb2xvcjogIzAwMDtcbiAgICBwYWRkaW5nOiAwLjJlbSAwO1xufVxuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgSGVscGVyIGNsYXNzZXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qXG4gKiBIaWRlIHZpc3VhbGx5IGFuZCBmcm9tIHNjcmVlbiByZWFkZXJzXG4gKi9cblxuLmhpZGRlbiB7XG4gICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xufVxuXG4vKlxuICogSGlkZSBvbmx5IHZpc3VhbGx5LCBidXQgaGF2ZSBpdCBhdmFpbGFibGUgZm9yIHNjcmVlbiByZWFkZXJzOlxuICogaHR0cHM6Ly9zbm9vay5jYS9hcmNoaXZlcy9odG1sX2FuZF9jc3MvaGlkaW5nLWNvbnRlbnQtZm9yLWFjY2Vzc2liaWxpdHlcbiAqXG4gKiAxLiBGb3IgbG9uZyBjb250ZW50LCBsaW5lIGZlZWRzIGFyZSBub3QgaW50ZXJwcmV0ZWQgYXMgc3BhY2VzIGFuZCBzbWFsbCB3aWR0aFxuICogICAgY2F1c2VzIGNvbnRlbnQgdG8gd3JhcCAxIHdvcmQgcGVyIGxpbmU6XG4gKiAgICBodHRwczovL21lZGl1bS5jb20vQGplc3NlYmVhY2gvYmV3YXJlLXNtdXNoZWQtb2ZmLXNjcmVlbi1hY2Nlc3NpYmxlLXRleHQtNTk1MmE0YzJjYmZlXG4gKi9cblxuLnZpc3VhbGx5aGlkZGVuIHtcbiAgICBib3JkZXI6IDA7XG4gICAgY2xpcDogcmVjdCgwIDAgMCAwKTtcbiAgICBoZWlnaHQ6IDFweDtcbiAgICBtYXJnaW46IC0xcHg7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBwYWRkaW5nOiAwO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB3aWR0aDogMXB4O1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7IC8qIDEgKi9cbn1cblxuLypcbiAqIEV4dGVuZHMgdGhlIC52aXN1YWxseWhpZGRlbiBjbGFzcyB0byBhbGxvdyB0aGUgZWxlbWVudFxuICogdG8gYmUgZm9jdXNhYmxlIHdoZW4gbmF2aWdhdGVkIHRvIHZpYSB0aGUga2V5Ym9hcmQ6XG4gKiBodHRwczovL3d3dy5kcnVwYWwub3JnL25vZGUvODk3NjM4XG4gKi9cblxuLnZpc3VhbGx5aGlkZGVuLmZvY3VzYWJsZTphY3RpdmUsXG4udmlzdWFsbHloaWRkZW4uZm9jdXNhYmxlOmZvY3VzIHtcbiAgICBjbGlwOiBhdXRvO1xuICAgIGhlaWdodDogYXV0bztcbiAgICBtYXJnaW46IDA7XG4gICAgb3ZlcmZsb3c6IHZpc2libGU7XG4gICAgcG9zaXRpb246IHN0YXRpYztcbiAgICB3aWR0aDogYXV0bztcbiAgICB3aGl0ZS1zcGFjZTogaW5oZXJpdDtcbn1cblxuLypcbiAqIEhpZGUgdmlzdWFsbHkgYW5kIGZyb20gc2NyZWVuIHJlYWRlcnMsIGJ1dCBtYWludGFpbiBsYXlvdXRcbiAqL1xuXG4uaW52aXNpYmxlIHtcbiAgICB2aXNpYmlsaXR5OiBoaWRkZW47XG59XG5cbi8qXG4gKiBDbGVhcmZpeDogY29udGFpbiBmbG9hdHNcbiAqXG4gKiBGb3IgbW9kZXJuIGJyb3dzZXJzXG4gKiAxLiBUaGUgc3BhY2UgY29udGVudCBpcyBvbmUgd2F5IHRvIGF2b2lkIGFuIE9wZXJhIGJ1ZyB3aGVuIHRoZVxuICogICAgYGNvbnRlbnRlZGl0YWJsZWAgYXR0cmlidXRlIGlzIGluY2x1ZGVkIGFueXdoZXJlIGVsc2UgaW4gdGhlIGRvY3VtZW50LlxuICogICAgT3RoZXJ3aXNlIGl0IGNhdXNlcyBzcGFjZSB0byBhcHBlYXIgYXQgdGhlIHRvcCBhbmQgYm90dG9tIG9mIGVsZW1lbnRzXG4gKiAgICB0aGF0IHJlY2VpdmUgdGhlIGBjbGVhcmZpeGAgY2xhc3MuXG4gKiAyLiBUaGUgdXNlIG9mIGB0YWJsZWAgcmF0aGVyIHRoYW4gYGJsb2NrYCBpcyBvbmx5IG5lY2Vzc2FyeSBpZiB1c2luZ1xuICogICAgYDpiZWZvcmVgIHRvIGNvbnRhaW4gdGhlIHRvcC1tYXJnaW5zIG9mIGNoaWxkIGVsZW1lbnRzLlxuICovXG5cbi5jbGVhcmZpeDpiZWZvcmUsXG4uY2xlYXJmaXg6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiIFwiOyAvKiAxICovXG4gICAgZGlzcGxheTogdGFibGU7IC8qIDIgKi9cbn1cblxuLmNsZWFyZml4OmFmdGVyIHtcbiAgICBjbGVhcjogYm90aDtcbn1cblxuXG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICBQcmludCBzdHlsZXMuXG4gICBJbmxpbmVkIHRvIGF2b2lkIHRoZSBhZGRpdGlvbmFsIEhUVFAgcmVxdWVzdDpcbiAgIGh0dHBzOi8vd3d3LnBocGllZC5jb20vZGVsYXktbG9hZGluZy15b3VyLXByaW50LWNzcy9cbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbkBtZWRpYSBwcmludCB7XG4gICAgKixcbiAgICAqOmJlZm9yZSxcbiAgICAqOmFmdGVyIHtcbiAgICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcbiAgICAgICAgY29sb3I6ICMwMDAgIWltcG9ydGFudDsgLyogQmxhY2sgcHJpbnRzIGZhc3RlciAqL1xuICAgICAgICAtd2Via2l0LWJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcbiAgICAgICAgYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xuICAgICAgICB0ZXh0LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xuICAgIH1cblxuICAgIGEsXG4gICAgYTp2aXNpdGVkIHtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gICAgfVxuXG4gICAgYVtocmVmXTphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6IFwiIChcIiBhdHRyKGhyZWYpIFwiKVwiO1xuICAgIH1cblxuICAgIGFiYnJbdGl0bGVdOmFmdGVyIHtcbiAgICAgICAgY29udGVudDogXCIgKFwiIGF0dHIodGl0bGUpIFwiKVwiO1xuICAgIH1cblxuICAgIC8qXG4gICAgICogRG9uJ3Qgc2hvdyBsaW5rcyB0aGF0IGFyZSBmcmFnbWVudCBpZGVudGlmaWVycyxcbiAgICAgKiBvciB1c2UgdGhlIGBqYXZhc2NyaXB0OmAgcHNldWRvIHByb3RvY29sXG4gICAgICovXG5cbiAgICBhW2hyZWZePVwiI1wiXTphZnRlcixcbiAgICBhW2hyZWZePVwiamF2YXNjcmlwdDpcIl06YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgIH1cblxuICAgIHByZSB7XG4gICAgICAgIHdoaXRlLXNwYWNlOiBwcmUtd3JhcCAhaW1wb3J0YW50O1xuICAgIH1cbiAgICBwcmUsXG4gICAgYmxvY2txdW90ZSB7XG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICM5OTk7XG4gICAgICAgIHBhZ2UtYnJlYWstaW5zaWRlOiBhdm9pZDtcbiAgICB9XG5cbiAgICAvKlxuICAgICAqIFByaW50aW5nIFRhYmxlczpcbiAgICAgKiBodHRwOi8vY3NzLWRpc2N1c3MuaW5jdXRpby5jb20vd2lraS9QcmludGluZ19UYWJsZXNcbiAgICAgKi9cblxuICAgIHRoZWFkIHtcbiAgICAgICAgZGlzcGxheTogdGFibGUtaGVhZGVyLWdyb3VwO1xuICAgIH1cblxuICAgIHRyLFxuICAgIGltZyB7XG4gICAgICAgIHBhZ2UtYnJlYWstaW5zaWRlOiBhdm9pZDtcbiAgICB9XG5cbiAgICBwLFxuICAgIGgyLFxuICAgIGgzIHtcbiAgICAgICAgb3JwaGFuczogMztcbiAgICAgICAgd2lkb3dzOiAzO1xuICAgIH1cblxuICAgIGgyLFxuICAgIGgzIHtcbiAgICAgICAgcGFnZS1icmVhay1hZnRlcjogYXZvaWQ7XG4gICAgfVxufVxuIiwiLy8gQ29sb3Vyc1xuJGNvbG9yLW1haW46IHJnYig2OCw2OCw2OCk7IC8vICM0NDQgKHZlcnN1cyBwcmV2aW91cyAjMzMzIG9yIHJnYig1MSw1MSw1MSkgd2hpY2ggaXMgZGFya2VyKVxuJGNvbG9yLWludGVyZmFjZS1hbmQtZGlzcGxheTogcmdiKDY4LDY4LDY4KTsgLy8gIzQ0NCAodmVyc3VzIHByZXZpb3VzICMzMzMgb3IgcmdiKDUxLDUxLDUxKSB3aGljaCBpcyBkYXJrZXIpXG4kY29sb3ItYWNjZW50OiAjMzU4NTdkO1xuXG5cblxuXG4vLyBSZXNwb25zaXZlIEJyZWFrcG9pbnRzXG4vLyBVc2UgZW1zIHJhdGhlciB0aGFuIHBpeGVscyB0byBkZXRlcm1pbmUgdGhlIHNjcmVlbsKgd2lkdGgsIHNvIHRoYXQ6XG4vLyBpKSBvdXIgbGF5b3V0IGFkYXB0YXRpb25zIGFyZSBiYXNlZCBvbiB0eXBvZ3JhcGhpYyByZWFzb25pbmcgcmF0aGVyIHRoYW4gYmVpbmcgdGllZCB0byBzcGVjaWZpYyBkZXZpY2Ugd2lkdGhzXG4vLyBpaSkgd2UndmUgdGFrZW4gaW50byBhY2NvdW50IHNpdHVhdGlvbnMgd2hlbiB0aGUgcmVhZGVyIGFkanVzdGVkIHRoZSBkZWZhdWx0IGZvbnQgc2l6ZSBvZiB0aGVpciBkZXZpY2UuIEJ5IHVzaW5nIGVtcywgb3VyIG1lYXN1cmVtZW50cyBzY2FsZSBwcm9wb3J0aW9uYXRlbHkgd2l0aCB0ZXh0IHNpemUuXG4kYnAteHhzbWFsbDogIDIzLjQzNzVlbTsgLy8gMzc1cHgsIHRoZSB3aWR0aCBpbiBwb3J0cmFpdCBvZiBpUGhvbmUgNi83LzhcbiRicC14c21hbGw6ICAzNy41ZW07IC8vIDYwMHB4LCBhIGJvdW5kYXJ5IGFib3ZlIHdoaWNoIHRhbGwgMzo0IGltYWdlcyBmZWVsIHdlaXJkIGFuZCB3ZSB3YW50IHRvIHN0YXJ0IHVzaW5nIGF2YWlsYWJsZSB3aWR0aC5cbiRicC1zbWFsbDogIDQ4ZW07IC8vIDc2OHB4LCB0YWJsZXQgaW4gcG9ydHJhaXRcbiRicC1tZWRpdW06ICA2MGVtOyAvLyA5NjBweFxuJGJwLWxhcmdlOiAgMTA1ZW07IC8vIDE2ODBweFxuJGJwLXhsYXJnZTogIDEyMGVtOyAvLyAxOTIwcHhcblxuLy8gTm90ZTogaWYgd2UncmUgYWRhcHRpbmcgbGF5b3V0IGJhc2VkIG9uIHR5cG9ncmFwaGljIHJlYXNvbmluZyByYXRoZXIgdGhhbiBzcGVjaWZpYyBkZXZpY2Ugd2lkdGhzLCAuLi4uXG4vLyBzaG91bGRuJ3Qgd2Ugc2V0IGJyZWFrcG9pbnRzIGF0IHRoZSBwb2ludHMgYXQgd2hpY2ggb3VyIGJvZHkgY29sdW1uIGJlY29tZXMgd2lkZXIgdGhhbiB0aGF0IHdoaWNoIGlzIG5lZWRlZCBmb3IgYSBjb21mb3J0YWJsZSBtZWFzdXJlP1xuLy8gV2Ugd2FudCBhIGxpbmUtbGVuZ3RoIG9mIDQ14oCTNzUgY2hhcmFjdGVycy4gT24gYXZlcmFnZSAxZW0gYWNjb3VudHMgZm9yIDIgY2hhcmFjdGVycyBzby4uLlxuLy8gQSBtYXgtd2lkdGggb2YgMzhlbSBvbiBwYXJhZ3JhcGhzIG9mIGZvbnQtc2l6ZSAxNnB4IHJlc3RyaWN0cyBsaW5lIHdpZHRoIHRvIHRoZSB0b3AgZW5kIG9mIHRoZSByZWFkYWJsZSByYW5nZS4gXG4vLyBBcmd1YWJseSA0MGVtIChvciBqdXN0IHVuZGVyKSBzaG91bGQgYmUgdGhlIGZpcnN0IGJyZWFrcG9pbnQuIFRoZW4sIHlvdSByZWR1Y2UgdGhlIG51bWJlciBvZiBjaGFyYWN0ZXJzIGluIGEgbGluZSBieSBlaXRoZXIgaW5jcmVhc2luZyBmb250LXNpemUgb3IgaW50cm9kdWNpbmcgYWRkaXRpb25hbCBjb2x1bW5zLiBcblxuXG5cblxuLy8gVHlwZWZhY2UgY2hvaWNlc1xuJGZvbnQtc2FuczogJ0ZTRW1lcmljJywgc2Fucy1zZXJpZjtcbiRmb250LXNlcmlmOiAnRlNFbWVyaWMnLCBzYW5zLXNlcmlmO1xuXG5cbi8vIFR5cG9ncmFwaGljIFNjYWxlXG4vLyBodHRwOi8vc2ltcGxlc2NhbGUub25saW5lLz9zY2FsZV9iYXNlPTE2JnNjYWxlX3JhdGlvPTEuMzMzJnNjYWxlX2ludGVydmFsPTJcblxuXG4vLyBLZXkgRm9udCBTaXplIFNldHRpbmdzXG4vLyBXZSdyZSB1c2luZyB0aGlzIHR5cG9ncmFwaGljIHNjYWxlOiBodHRwOi8vc2ltcGxlc2NhbGUub25saW5lLy4uLlxuLy8gd2l0aCBhIHJhdGlvIG9mIFggKGRlY2ltYWwgZXF1aXZhbGVudCBvZiBZKSB0byB3b3JrIHdlbGwgd2l0aCBaXG4vLyB3ZSBzdGFydCB3aXRoIGJvZHkgY29weSBmb250IHNpemUgYXQgWCwgd2l0aCBhIGxpbmUgaGVpZ2h0IG9mIFlcbi8vIGF0IHZpZXdwb3J0IHdpZHRoIFgrIHdlIGluY3JlYXNlIGJvZHkgZm9udCBzaXplIHRvIFlcbi8vIGF0IHZpZXdwb3J0IHdpZHRoIFgrIHdlIGluY3JlYXNlIGJvZHkgZm9udCBzaXplIHRvIFlcbiRzbWFsbGVzdC1mb250LXNpemU6IDEyO1xuJGJhc2UtZm9udC1zaXplOiAxNjtcbiRiYXNlLWxpbmUtaGVpZ2h0OiAxLjQ7XG4kYmFzZS1saW5lLWhlaWdodC1pbi1weDogKCRiYXNlLWZvbnQtc2l6ZSAqICRiYXNlLWxpbmUtaGVpZ2h0KTtcblxuJGJwLXhzLWJhc2UtZm9udC1zaXplOiAxNztcbiRicC14cy1iYXNlLWxpbmUtaGVpZ2h0OiAxLjQ7XG4kYnAteHMtcHgtYmFzZS1saW5lLWhlaWdodDogKCRicC14cy1iYXNlLWZvbnQtc2l6ZSAqICRicC14cy1iYXNlLWxpbmUtaGVpZ2h0KTtcblxuJGJwLXMtYmFzZS1mb250LXNpemU6IDE4O1xuJGJwLXMtYmFzZS1saW5lLWhlaWdodDogMS40O1xuJGJwLXMtcHgtYmFzZS1saW5lLWhlaWdodDogKCRicC1zLWJhc2UtZm9udC1zaXplICogJGJwLXMtYmFzZS1saW5lLWhlaWdodCk7XG5cbiRicC1tLWJhc2UtZm9udC1zaXplOiAxODtcbiRicC1tLWJhc2UtbGluZS1oZWlnaHQ6IDEuNDtcbiRicC1tLXB4LWJhc2UtbGluZS1oZWlnaHQ6ICgkYnAtbS1iYXNlLWZvbnQtc2l6ZSAqICRicC1tLWJhc2UtbGluZS1oZWlnaHQpO1xuXG4kYnAtbC1iYXNlLWZvbnQtc2l6ZTogMjA7XG4kYnAtbC1iYXNlLWxpbmUtaGVpZ2h0OiAxLjU7XG4kYnAtbC1weC1iYXNlLWxpbmUtaGVpZ2h0OiAoJGJwLWwtYmFzZS1mb250LXNpemUgKiAkYnAtbC1iYXNlLWxpbmUtaGVpZ2h0KTtcblxuJGJwLXhsLWJhc2UtZm9udC1zaXplOiAyMTtcbiRicC14bC1iYXNlLWxpbmUtaGVpZ2h0OiAxLjU7XG4kYnAteGwtcHgtYmFzZS1saW5lLWhlaWdodDogKCRicC14bC1iYXNlLWZvbnQtc2l6ZSAqICRicC14bC1iYXNlLWxpbmUtaGVpZ2h0KTtcbiIsIi8vIE1vZGVybiBjbGVhcmZpeFxuICAgIC8vIG9yIGp1c3QgdXNlIG92ZXJmbG93OiBhdXRvPyBodHRwczovL21laWVydC5jb20vZW4vYmxvZy9uby1jbGVhcmZpeC9cbiAgICAvLyBub3RlOiB3ZSBzaG91bGRuJ3QgaGF2ZSBhIG5lZWQgZm9yIHRoaXMgYXQgYWxsIGlmIHdlIGRvbid0IHVzZSBmbG9hdHMgZm9yIGxheW91dC5cbi5ncm91cDphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICBjbGVhcjogYm90aDtcbn1cblxuQG1peGluIGZvbnQtc2l6ZS10by1yZW0oJHRhcmdldEZvbnRTaXplOiAkYmFzZS1mb250LXNpemUsICRiYXNlRm9udFNpemU6ICRiYXNlLWZvbnQtc2l6ZSkge1xuICBmb250LXNpemU6ICR0YXJnZXRGb250U2l6ZSArIHB4OyAvLyBmYWxsYmFjayBmb3Igb2xkIGJyb3dzZXJzXG4gIGZvbnQtc2l6ZTogKCR0YXJnZXRGb250U2l6ZSAvICRiYXNlRm9udFNpemUpICsgcmVtO1xufVxuXG4vLyBzZXQgdGhlIGNvcnJlY3QgbGluZSBoZWlnaHQgb24gYW4gZWxlbWVudCB0byBtYWludGFpbiB2ZXJ0aWNhbCByaHl0aG0sIGZvciBhIGdpdmVuIGZvbnQgc2l6ZSBhbmQgdW5pdCBvZiB2ZXJ0aWNhbCByaHl0aG1cbkBtaXhpbiByaHl0aG1pYy1saW5lLWhlaWdodCgkZm9udFNpemU6ICRiYXNlLWZvbnQtc2l6ZSwgJGxpbmVIZWlnaHRJblB4OiAkYmFzZS1saW5lLWhlaWdodC1pbi1weCkge1xuICBsaW5lLWhlaWdodDogKCRsaW5lSGVpZ2h0SW5QeCAvICRmb250U2l6ZSk7XG59XG5cbi8vIFNlcGFyYXRlIHBhcmFncmFwaHMgYnkgbm8gbW9yZSB0aGFuIDFlbS4gSGFsZiB0aGUgbGluZS1oZWlnaHQgc2h1bGQgYmUgc3VmZmljaWVudC5cbkBtaXhpbiBwYXJhZ3JhcGgtbWFyZ2lucygpIHtcbiAgbWFyZ2luOiAoJGJhc2UtbGluZS1oZWlnaHQvMikrZW0gMDsgLy8gbWFyZ2luOiAkYmFzZS1saW5lLWhlaWdodCtlbSAwO1xufVxuXG4vLyBzZXQgdmVydGljYWwgbWFyZ2lucyBvbiBhbiBlbGVtZW50IHRvIG1haW50YWluIHZlcnRpY2FsIHJoeXRobSwgZm9yIGEgZ2l2ZW4gZm9udCBzaXplIGFuZCB1bml0IG9mIHZlcnRpY2FsIHJoeXRobVxuQG1peGluIHJoeXRobWljLXZlcnRpY2FsLW1hcmdpbnMoJGZvbnRTaXplOiAkYmFzZS1mb250LXNpemUsICRsaW5lSGVpZ2h0SW5QeDogJGJhc2UtbGluZS1oZWlnaHQtaW4tcHgpIHtcbiAgbWFyZ2luOiAoJGxpbmVIZWlnaHRJblB4IC8gJGZvbnRTaXplKStlbSAwO1xufVxuXG5cbi8vIEluY2x1ZGUgYSBtZWRpYSBxdWVyeVxuLy8gVXNhZ2U6IEBpbmNsdWRlIGJyZWFrcG9pbnQoc21hbGwpO1xuQG1peGluIGJyZWFrcG9pbnQoJHBvaW50KSB7XG4gIEBpZiAkcG9pbnQgPT0gYnAteGxhcmdlIHtcbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICRicC14bGFyZ2UpIHsgQGNvbnRlbnQ7IH1cbiAgfVxuICBAaWYgJHBvaW50ID09IGJwLWxhcmdlIHtcbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICRicC1sYXJnZSkgeyBAY29udGVudDsgfVxuICB9XG4gIEBlbHNlIGlmICRwb2ludCA9PSBicC1tZWRpdW0ge1xuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogJGJwLW1lZGl1bSkgeyBAY29udGVudDsgfVxuICB9XG4gIEBlbHNlIGlmICRwb2ludCA9PSBicC1zbWFsbCB7XG4gICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkYnAtc21hbGwpICB7IEBjb250ZW50OyB9XG4gIH1cbiAgQGVsc2UgaWYgJHBvaW50ID09IGJwLXhzbWFsbCB7XG4gICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkYnAteHNtYWxsKSAgeyBAY29udGVudDsgfVxuICB9XG4gIEBlbHNlIGlmICRwb2ludCA9PSBicC14eHNtYWxsIHtcbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICRicC14eHNtYWxsKSAgeyBAY29udGVudDsgfVxuICB9XG59XG5cbi8vIFNlcnZlIEhpRFBJIGJhY2tncm91bmQgaW1hZ2VzIGZyb20gYW55IHNlbGVjdG9yIHlvdeKAmWQgbGlrZSwganVzdCBieSBjcmVhdGluZyB0d28gaW1hZ2UgYXNzZXRzIGFuZCBvbmUgbGluZSBvZiBTQ1NTXG4vLyBVc2FnZTogQGluY2x1ZGUgcmV0aW5pemUoJ2ljb24tZHJpYmJibGUnLCAncG5nJywgMjRweCwgMjRweCk7XG5AbWl4aW4gcmV0aW5pemUoJGZpbGUsICR0eXBlLCAkd2lkdGgsICRoZWlnaHQpIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi9pbWcvJyArICRmaWxlICsgJy4nICsgJHR5cGUpO1xuXG4gICRpcy1oaWRwaTogXCIoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAxLjUpLCAobWluLS1tb3otZGV2aWNlLXBpeGVsLXJhdGlvOiAxLjUpLCAoLW8tbWluLWRldmljZS1waXhlbC1yYXRpbzogMy8yKSwgKG1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDEuNSksKG1pbi1yZXNvbHV0aW9uOiAxLjVkcHB4KVwiO1xuICBAbWVkaWEgI3skaXMtaGlkcGl9IHtcbiAgICAmIHtcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vaW1nLycgKyAkZmlsZSArICdAMnguJyArICR0eXBlKTtcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogJHdpZHRoICRoZWlnaHQ7XG4gICAgfVxuICB9XG59XG5cbi8vIEFkZCBhIGxpbmVhci1ncmFkaWVudCB3aXRob3V0IHdvcnJ5aW5nIGFib3V0IHByb3ByaWV0YXJ5IGFkZGl0aW9uc1xuLy8gVXNhZ2U6IEBpbmNsdWRlIGxpbmVhci1ncmFkaWVudCgjNDJiM2UyLCAjMWE2Nzk4KTtcbkBtaXhpbiBsaW5lYXItZ3JhZGllbnQoJGZyb20sICR0bykge1xuICAvKiBGYWxsYmFjayBmb3Igc2FkIGJyb3dzZXJzICovXG4gIGJhY2tncm91bmQtY29sb3I6ICR0bzsgXG4gIC8qIE5vbmUgb2YgdGhpcyBzaG91bGQgbmVlZCB0byBiZSBleHBsaWNpdCBiZWNhdXNlIHdlJ3JlIGluY2x1ZGluZyBhdXRvcHJlZml4ZXIgaW4gb3VyIGd1bHAtc2FzcyB3b3JrZmxvdy5cbiAgYmFja2dyb3VuZC1pbWFnZTotbW96LWxpbmVhci1ncmFkaWVudCgkZnJvbSwgJHRvKTtcbiAgYmFja2dyb3VuZC1pbWFnZTotby1saW5lYXItZ3JhZGllbnQoJGZyb20sICR0byk7XG4gIGJhY2tncm91bmQtaW1hZ2U6LXdlYmtpdC1ncmFkaWVudChsaW5lYXIsIGxlZnQgdG9wLCBsZWZ0IGJvdHRvbSwgY29sb3Itc3RvcCgwLCAkZnJvbSksIGNvbG9yLXN0b3AoMSwgJHRvKSk7XG4gIGJhY2tncm91bmQtaW1hZ2U6IC13ZWJraXQtbGluZWFyLWdyYWRpZW50KCRmcm9tLCAkdG8pO1xuICBiYWNrZ3JvdW5kLWltYWdlOiAtbXMtbGluZWFyLWdyYWRpZW50KCRmcm9tLCAkdG8pOyAqL1xuICAvKiBXM0MgKi9cbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KCRmcm9tLCAkdG8pO1xufVxuIiwiLy8gU2l0ZS1zcGVjaWZpYyBzdHlsZXNcblxuLy8gQ2hhbmdlIGJveCBtb2RlbCBmcm9tIHRoZSBkZWZhdWx0ICdjb250ZW50LWJveCcgc2V0dGluZy5cbi8vICdjb250ZW50LWJveCcgYXBwbGllcyBlbGVtZW50J3MgZGVjbGFyZWQgd2lkdGggdG8gaXRzIGNvbnRlbnQgb25seSwgcGxhY2luZyBwYWRkaW5nIGFuZCBib3JkZXIgb3V0c2lkZSB0aGUgZWxlbWVudCdzIGJveC5cbi8vIFRoaXMgZWZmZWN0aXZlbHkgaW5jcmVhc2VzIGhvdyBtdWNoIHNwYWNlIHRoZSBlbGVtZW50IHRha2VzIHVwLlxuLy8gYm9yZGVyLWJveCBwdXRzIHRoZSBwYWRkaW5nIGFuZCBib3JkZXIgaW5zaWRlIHRoZSBib3ggc28gYm94IGlzIGFzIHdpZGUgYXMgdGhlIHdpZHRoIHdlIGRlY2xhcmVkLlxuLy8gQWxzbywgdXNlIHRoZSAnaW5oZXJpdGFuY2UnIGJhc2VkIGFwcHJvYWNoIGh0dHBzOi8vY3NzLXRyaWNrcy5jb20vaW5oZXJpdGluZy1ib3gtc2l6aW5nLXByb2JhYmx5LXNsaWdodGx5LWJldHRlci1iZXN0LXByYWN0aWNlL1xuLy8gVGhpcyBhcHByb2FjaCBtZWFucyB0aGF0IGlmIHdlIG5lZWQgdG8gaW5jbHVkZSBhIHRoaXJkLXBhcnR5IGNvbXBvbmVudCBhbmQgZG9uJ3Qgd2FudCB0byBtZXNzIHdpdGggaXRzIGJveC1tb2RlbC4uLlxuLy8gdGhlbiB3ZSBjYW4gcmVzZXQgaXQgdG8gbm9ybWFsIHVzaW5nIC5jb21wb25lbnQgeyBib3gtc2l6aW5nOiBjb250ZW50LWJveDsgfSBhbmQgd29uJ3QgaGF2ZSBhbnkgaW5oZXJpdGFuY2UgaXNzdWVzIHdpdGggY2hpbGQgZWxlbWVudHNcbmh0bWwge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuKiwgKjpiZWZvcmUsICo6YWZ0ZXIge1xuICBib3gtc2l6aW5nOiBpbmhlcml0O1xufVxuXG5cbiIsIi8qXG5UaGluIChub3JtYWxseSAxMDApXG5FeHRyYSBMaWdodCAgKG5vcm1hbGx5IDIwMClcbkxpZ2h0IChub3JtYWxseSAzMDApXG5Cb29rICAoPylcblJlZ3VsYXIgKG5vcm1hbGx5IDQwMClcbkNvcmUgKD8pXG5NZWRpdW0gIChub3JtYWxseSA1MDApXG5TZW1pQm9sZCAobm9ybWFsbHkgNjAwKVxuQm9sZCAobm9ybWFsbHkgNzAwKVxuRXh0cmFCb2xkIChub3JtYWxseSA4MDApXG5IZWF2eSAobm9ybWFsbHkgOTAwKVxuKi9cblxuQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6ICdGU0VtZXJpYyc7XG4gICAgc3JjOiB1cmwoJy9mb250cy9mc2VtZXJpY3dlYmV4dHJhbGlnaHQvRlNFbWVyaWNXZWItRXh0cmFMaWdodC5lb3QnKTsgLyogSUU5ICovXG4gICAgc3JjOiB1cmwoJy9mb250cy9mc2VtZXJpY3dlYmV4dHJhbGlnaHQvRlNFbWVyaWNXZWItRXh0cmFMaWdodC5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLCAvKiBJRTYtSUU4ICovIFxuICAgIHVybCgnL2ZvbnRzL2ZzZW1lcmljd2ViZXh0cmFsaWdodC9GU0VtZXJpY1dlYi1FeHRyYUxpZ2h0LndvZmYnKSBmb3JtYXQoJ3dvZmYnKTsgLyogTW9kZXJuIEJyb3dzZXJzICovXG4gICAgZm9udC13ZWlnaHQ6IDIwMDtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG59XG5AZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogJ0ZTRW1lcmljJztcbiAgICBzcmM6IHVybCgnL2ZvbnRzL2ZzZW1lcmljd2ViZXh0cmFsaWdodGl0YWxpYy9GU0VtZXJpY1dlYi1FeHRyYUxpZ2h0SXRhbGljLmVvdCcpOyAvKiBJRTkgKi9cbiAgICBzcmM6IHVybCgnL2ZvbnRzL2ZzZW1lcmljd2ViZXh0cmFsaWdodGl0YWxpYy9GU0VtZXJpY1dlYi1FeHRyYUxpZ2h0SXRhbGljLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksIC8qIElFNi1JRTggKi8gXG4gICAgdXJsKCcvZm9udHMvZnNlbWVyaWN3ZWJleHRyYWxpZ2h0aXRhbGljL0ZTRW1lcmljV2ViLUV4dHJhTGlnaHRJdGFsaWMud29mZicpIGZvcm1hdCgnd29mZicpOyAvKiBNb2Rlcm4gQnJvd3NlcnMgKi9cbiAgICBmb250LXdlaWdodDogMjAwO1xuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuLyogR29pbmcgZm9yIEVtZXJpYyBib29rIGluc3RlYWQgb2YgJ3JlZ3VsYXInIGFzIGJvZHkgZm9udCAqL1xuQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6ICdGU0VtZXJpYyc7XG4gICAgc3JjOiB1cmwoJy9mb250cy9mc2VtZXJpY3dlYmJvb2svRlNFbWVyaWNXZWItQm9vay5lb3QnKTsgLyogSUU5ICovXG4gICAgc3JjOiB1cmwoJy9mb250cy9mc2VtZXJpY3dlYmJvb2svRlNFbWVyaWNXZWItQm9vay5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLCAvKiBJRTYtSUU4ICovIFxuICAgIHVybCgnL2ZvbnRzL2ZzZW1lcmljd2ViYm9vay9GU0VtZXJpY1dlYi1Cb29rLndvZmYnKSBmb3JtYXQoJ3dvZmYnKTsgLyogTW9kZXJuIEJyb3dzZXJzICovXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG59XG5AZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogJ0ZTRW1lcmljJztcbiAgICBzcmM6IHVybCgnL2ZvbnRzL2ZzZW1lcmljd2ViYm9va2l0YWxpYy9GU0VtZXJpY1dlYi1Cb29rSXRhbGljLmVvdCcpOyAvKiBJRTkgKi9cbiAgICBzcmM6IHVybCgnL2ZvbnRzL2ZzZW1lcmljd2ViYm9va2l0YWxpYy9GU0VtZXJpY1dlYi1Cb29rSXRhbGljLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksIC8qIElFNi1JRTggKi8gXG4gICAgdXJsKCcvZm9udHMvZnNlbWVyaWN3ZWJib29raXRhbGljL0ZTRW1lcmljV2ViLUJvb2tJdGFsaWMud29mZicpIGZvcm1hdCgnd29mZicpOyAvKiBNb2Rlcm4gQnJvd3NlcnMgKi9cbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuLypAZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogJ0ZTRW1lcmljJztcbiAgICBzcmM6IHVybCgnL2ZvbnRzL2ZzZW1lcmljd2VicmVndWxhci9GU0VtZXJpY1dlYi1SZWd1bGFyLmVvdCcpO1xuICAgIHNyYzogdXJsKCcvZm9udHMvZnNlbWVyaWN3ZWJyZWd1bGFyL0ZTRW1lcmljV2ViLVJlZ3VsYXIuZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcbiAgICB1cmwoJy9mb250cy9mc2VtZXJpY3dlYnJlZ3VsYXIvRlNFbWVyaWNXZWItUmVndWxhci53b2ZmJykgZm9ybWF0KCd3b2ZmJyk7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG59XG5AZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogJ0ZTRW1lcmljJztcbiAgICBzcmM6IHVybCgnL2ZvbnRzL2ZzZW1lcmljd2ViaXRhbGljL0ZTRW1lcmljV2ViLUl0YWxpYy5lb3QnKTtcbiAgICBzcmM6IHVybCgnL2ZvbnRzL2ZzZW1lcmljd2ViaXRhbGljL0ZTRW1lcmljV2ViLUl0YWxpYy5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxuICAgIHVybCgnL2ZvbnRzL2ZzZW1lcmljd2ViaXRhbGljL0ZTRW1lcmljV2ViLUl0YWxpYy53b2ZmJykgZm9ybWF0KCd3b2ZmJyk7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XG59Ki9cblxuQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6ICdGU0VtZXJpYyc7XG4gICAgc3JjOiB1cmwoJy9mb250cy9mc2VtZXJpY3dlYmJvbGQvRlNFbWVyaWNXZWItQm9sZC5lb3QnKTsgLyogSUU5ICovXG4gICAgc3JjOiB1cmwoJy9mb250cy9mc2VtZXJpY3dlYmJvbGQvRlNFbWVyaWNXZWItQm9sZC5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLCAvKiBJRTYtSUU4ICovIFxuICAgIHVybCgnL2ZvbnRzL2ZzZW1lcmljd2ViYm9sZC9GU0VtZXJpY1dlYi1Cb2xkLndvZmYnKSBmb3JtYXQoJ3dvZmYnKTsgLyogTW9kZXJuIEJyb3dzZXJzICovXG4gICAgZm9udC13ZWlnaHQ6IDcwMDsgXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6ICdGU0VtZXJpYyc7XG4gICAgc3JjOiB1cmwoJy9mb250cy9mc2VtZXJpY3dlYmJvbGRpdGFsaWMvRlNFbWVyaWNXZWItQm9sZEl0YWxpYy5lb3QnKTsgLyogSUU5ICovXG4gICAgc3JjOiB1cmwoJy9mb250cy9mc2VtZXJpY3dlYmJvbGRpdGFsaWMvRlNFbWVyaWNXZWItQm9sZEl0YWxpYy5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLCAvKiBJRTYtSUU4ICovIFxuICAgIHVybCgnL2ZvbnRzL2ZzZW1lcmljd2ViYm9sZGl0YWxpYy9GU0VtZXJpY1dlYi1Cb2xkSXRhbGljLndvZmYnKSBmb3JtYXQoJ3dvZmYnKTsgLyogTW9kZXJuIEJyb3dzZXJzICovXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbmh0bWwge1xuICAgIGNvbG9yOiAkY29sb3ItbWFpbjtcbiAgICBmb250LWZhbWlseTogJGZvbnQtc2FucztcbiAgICBAaW5jbHVkZSBicmVha3BvaW50KGJwLW1lZGl1bSkge1xuICAgICAgICBmb250LXNpemU6IDExMi41JTsgLy8gPTEuMTI1ZW0gKHNvIDFyZW0gKGFuZCAxZW0gb24gYW55IGVsZW1lbnQgd2l0aG91dCBhIGRlZGljYXRlZCBmb250LXNpemUpID0gMThweClcbiAgICB9XG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludChicC14bGFyZ2UpIHtcbiAgICAgICAgZm9udC1zaXplOiAxMzEuMjUlOyAvLyA9MS4xMjVlbSAoc28gMXJlbSAoYW5kIDFlbSBvbiBhbnkgZWxlbWVudCB3aXRob3V0IGEgZGVkaWNhdGVkIGZvbnQtc2l6ZSkgPSAxOHB4KVxuICAgIH1cbiAgICBcblxuXG5cblxuICAgIC8vIGZvbnQtc2l6ZTogMWVtOyAvLyBmcm9tIEhUTUw1IEJvaWxlcnBsYXRlLiBIb3dldmVyIEknbSBub3Qgc3VyZSBpdCdzIG5lY2Vzc2FyeSB0byBleHBsaWNpdGx5IHNldCBmb250LXNpemUgdG8gMWVtLlxuICAgIC8vIEBpbmNsdWRlIGJyZWFrcG9pbnQoYnAtc21hbGwpIHtcbiAgICAvLyAgICBmb250LXNpemU6IDExMi41JTsgLy8gPTEuMTI1ZW0gKHNvIDFyZW0gKGFuZCAxZW0gb24gYW55IGVsZW1lbnQgd2l0aG91dCBhIGRlZGljYXRlZCBmb250LXNpemUpID0gMThweClcbiAgICAvLyB9XG4gICAgLy8gQGluY2x1ZGUgYnJlYWtwb2ludChicC1sYXJnZSkge1xuICAgIC8vICAgIGZvbnQtc2l6ZTogMTI1JTsgLy8gPTEuMjVlbSAoc28gMXJlbSAoYW5kIDFlbSBvbiBhbnkgZWxlbWVudCB3aXRob3V0IGEgZGVkaWNhdGVkIGZvbnQtc2l6ZSkgPSAyMHB4KVxuICAgIC8vIH1cbn1cblxuYm9keSB7XG4gICAgZm9udC1mZWF0dXJlLXNldHRpbmdzOiBcImxpZ2FcIiAxO1xuICAgIGZvbnQtZmVhdHVyZS1zZXR0aW5nczogXCJvbnVtXCIgMTtcbiAgICBsaW5lLWhlaWdodDogJGJhc2UtbGluZS1oZWlnaHQ7XG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludChicC1tZWRpdW0pIHtcbiAgICAgICAgbGluZS1oZWlnaHQ6ICRicC1tLWJhc2UtbGluZS1oZWlnaHQ7XG4gICAgfVxuICAgIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuICAgIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHk7XG59XG5cbkBzdXBwb3J0cyAoZm9udC12YXJpYW50LWxpZ2F0dXJlczogY29tbW9uLWxpZ2F0dXJlcykge1xuICAgIGJvZHkge1xuICAgICAgICBmb250LWZlYXR1cmUtc2V0dGluZ3M6IG5vcm1hbDtcbiAgICAgICAgZm9udC12YXJpYW50LWxpZ2F0dXJlczogY29tbW9uLWxpZ2F0dXJlcztcbiAgICB9XG59XG5cbkBzdXBwb3J0cyAoZm9udC12YXJpYW50LW51bWVyaWM6IG9sZHN0eWxlLW51bXMpIHtcbiAgICBib2R5IHtcbiAgICAgICAgZm9udC1mZWF0dXJlLXNldHRpbmdzOiBub3JtYWw7XG4gICAgICAgIGZvbnQtdmFyaWFudC1udW1lcmljOiBvbGRzdHlsZS1udW1zO1xuICAgIH1cbn1cblxuYSB7XG4gICAgY29sb3I6ICRjb2xvci1hY2NlbnQ7XG4gICAgdGV4dC1kZWNvcmF0aW9uLXNraXAtaW5rOiBub25lO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAvKmJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkY29sb3ItYWNjZW50OyovXG4gICAgLy8mOmhvdmVyIHtcbiAgICAvLyAgICBjb2xvcjogZGFya2VuKCRjb2xvci1hY2NlbnQsIDIwJSk7XG4gICAgLy99XG59XG5cbnNtYWxsIHtcbiAgICBAaW5jbHVkZSBmb250LXNpemUtdG8tcmVtKCRzbWFsbGVzdC1mb250LXNpemUpO1xufVxuXG5wIHtcbiAgICBAaW5jbHVkZSBwYXJhZ3JhcGgtbWFyZ2lucygpO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG59XG5cbmJsb2NrcXVvdGUsIFxudWwsXG5vbCB7XG4gICAgQGluY2x1ZGUgcGFyYWdyYXBoLW1hcmdpbnMoKTtcbn1cblxudWwgdWwsIFxub2wgb2wge1xuICAgIG1hcmdpbi10b3A6IDA7XG59XG5cbmxpIHtcbiAgICBsaXN0LXN0eWxlLXBvc2l0aW9uOiBpbnNpZGU7XG59XG5cbnVsIGxpIHtcbiAgICBwYWRkaW5nLWxlZnQ6IC43NWVtO1xuICAgIGxpIHtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAxLjVlbTtcbiAgICB9XG59XG5cbkBpbmNsdWRlIGJyZWFrcG9pbnQoYnAtbWVkaXVtKSB7XG4gICAgb2wge1xuICAgICAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgICAgICBjb3VudGVyLXJlc2V0OiBteWxpc3Q7XG4gICAgICAgIGxpIHtcbiAgICAgICAgICAgIGxpc3Qtc3R5bGUtcG9zaXRpb246IG91dHNpZGU7XG4gICAgICAgICAgICAmOjpiZWZvcmUge1xuICAgICAgICAgICAgICAgIGNvdW50ZXItaW5jcmVtZW50OiBteWxpc3Q7XG4gICAgICAgICAgICAgICAgY29udGVudDogY291bnRlcihteWxpc3QpO1xuICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAtMS4yNStlbTtcbiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IC43NWVtO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG5kdCB7XG4gICAgLy8gZm9udC13ZWlnaHQ6IDYwMDtcbn1cblxuZGQge1xuICAgIEBpbmNsdWRlIHBhcmFncmFwaC1tYXJnaW5zKCk7XG59XG5cbmFiYnIsIGNvZGUubWFya3VwLmVsZW1lbnQsIGNvZGUubWFya3VwLmF0dHJpYnV0ZSB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAgIGZvbnQtdmFyaWFudDogYWxsLXNtYWxsLWNhcHM7XG59XG5cbi8vIEFzc3VtaW5nIHdlJ3ZlIHNldCBvdXIgbGFuZ3VhZ2UgaW4gdGhlIDxodG1sPiBlbGVtZW50LCB0dXJuIG9uIGF1dG9tYXRpYyBoeXBoZW5hdGlvbiBpbiBDU1MuXG4vKmgxLFxuaDIsXG5oMyxcbmg0LFxuaDUsXG5oNixcbnAsXG5ibG9ja3F1b3RlLFxubGksXG5kZCB7XG4gICAgaHlwaGVuczogYXV0bztcbn0qL1xuXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2IHtcbiAgICBjb2xvcjogJGNvbG9yLWludGVyZmFjZS1hbmQtZGlzcGxheTsgICAgICAgIC8vJGNvbG9yLW1haW47XG4gICAgZm9udC1mYW1pbHk6ICRmb250LXNhbnM7XG4gICAgZm9udC1mZWF0dXJlLXNldHRpbmdzOiBcImRsaWdcIiAxO1xuICAgIEBzdXBwb3J0cyAoZm9udC12YXJpYW50LWxpZ2F0dXJlczogZGlzY3JldGlvbmFyeS1saWdhdHVyZXMpIHtcbiAgICAgICAgLmRsaWcge1xuICAgICAgICAgICAgZm9udC1mZWF0dXJlLXNldHRpbmdzOiBub3JtYWw7XG4gICAgICAgICAgICBmb250LXZhcmlhbnQtbGlnYXR1cmVzOiBkaXNjcmV0aW9uYXJ5LWxpZ2F0dXJlcztcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLy8gSGVhZGluZ3MsIHN0YXJ0aW5nIHdpdGggc21hbGxlc3QgZmlyc3QuXG4vKmg2LFxuaDUsIFxuaDQge1xuICAgIGZvbnQtd2VpZ2h0OiA4MDA7XG4gICAgQGluY2x1ZGUgZm9udC1zaXplLXRvLXJlbSgkYmFzZS1mb250LXNpemUpO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjI1OyAvLyBzZXQgYnkgZXllLiAxLjUgaXMgdG9vIG11Y2gsIDEgaXMgdG9vIHNtYWxsLlxuICAgIEBpbmNsdWRlIHJoeXRobWljLXZlcnRpY2FsLW1hcmdpbnMoJGJhc2UtZm9udC1zaXplKTtcbiAgICBsZXR0ZXItc3BhY2luZzogLTAuMDFlbTtcbn0qL1xuLypoMyB7XG4gICAgZm9udC13ZWlnaHQ6IDgwMDtcbiAgICBAaW5jbHVkZSBmb250LXNpemUtdG8tcmVtKDE4KTsgLy8gd2FzIDIxIC0gbWF5YmUgZ28gZm9yIHRoYXQgYXQgaXBob25lN1xuICAgIEBpbmNsdWRlIHJoeXRobWljLWxpbmUtaGVpZ2h0KDE4KTtcbiAgICBAaW5jbHVkZSByaHl0aG1pYy12ZXJ0aWNhbC1tYXJnaW5zKDE4KTtcbiAgICBsZXR0ZXItc3BhY2luZzogLTAuMDFlbTtcbiAgICAvKm1heC13aWR0aDogMzBlbTsqIC9cbn0qL1xuLyolaDIsXG5oMiB7XG4gICAgZm9udC13ZWlnaHQ6IDgwMDtcbiAgICBAaW5jbHVkZSBmb250LXNpemUtdG8tcmVtKDIxKTsgLy8gd2FzIDI1IC0gbWF5YmUgZ28gZm9yIHRoYXQgYXQgaXBob25lN1xuICAgIEBpbmNsdWRlIHJoeXRobWljLWxpbmUtaGVpZ2h0KDIxKTtcbiAgICBAaW5jbHVkZSByaHl0aG1pYy12ZXJ0aWNhbC1tYXJnaW5zKDIxKTtcbiAgICBsZXR0ZXItc3BhY2luZzogLTAuMDFlbTtcbn0qL1xuLypoMSB7XG4gICAgZm9udC13ZWlnaHQ6IDgwMDtcbiAgICBAaW5jbHVkZSBmb250LXNpemUtdG8tcmVtKDMzKTsgXG4gICAgXG4gICAgbGluZS1oZWlnaHQ6IDE7IFxuICAgIFxuICAgIEBpbmNsdWRlIHJoeXRobWljLXZlcnRpY2FsLW1hcmdpbnMoMzMpO1xuICAgIGxldHRlci1zcGFjaW5nOiAtMC4wMmVtOyAvLyBHZW50bHkgdGlnaHRlbiBiaWcsIGJvbGQgYW5kIHdpZGXCoGZvbnRzXG4gICAgLyptYXgtd2lkdGg6IDI4ZW07KiAvXG59XG4qL1xuaDYsXG5oNSwgXG5oNCB7XG4gICAgLypmb250LXdlaWdodDogODAwOyovXG4gICAgLypsZXR0ZXItc3BhY2luZzogLTAuMDFlbTsqL1xuICAgIEBpbmNsdWRlIGZvbnQtc2l6ZS10by1yZW0oJGJhc2UtZm9udC1zaXplKTtcbiAgICBAaW5jbHVkZSByaHl0aG1pYy1saW5lLWhlaWdodCgkYmFzZS1mb250LXNpemUpO1xuICAgIEBpbmNsdWRlIHJoeXRobWljLXZlcnRpY2FsLW1hcmdpbnMoJGJhc2UtZm9udC1zaXplKTtcbiAgICBAaW5jbHVkZSBicmVha3BvaW50KGJwLW1lZGl1bSkge1xuICAgICAgICBAaW5jbHVkZSBmb250LXNpemUtdG8tcmVtKCRicC1tLWJhc2UtZm9udC1zaXplLCAkYnAtbS1iYXNlLWZvbnQtc2l6ZSk7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAkYnAtbS1iYXNlLWxpbmUtaGVpZ2h0O1xuICAgICAgICBAaW5jbHVkZSByaHl0aG1pYy12ZXJ0aWNhbC1tYXJnaW5zKCRicC1tLWJhc2UtZm9udC1zaXplLCAkYnAtbS1weC1iYXNlLWxpbmUtaGVpZ2h0KTtcbiAgICB9XG59XG4laDMsIFxuaDMge1xuICAgIGxldHRlci1zcGFjaW5nOiAtMC4wMmVtO1xuICAgIEBpbmNsdWRlIGZvbnQtc2l6ZS10by1yZW0oMjEpO1xuICAgIEBpbmNsdWRlIHJoeXRobWljLXZlcnRpY2FsLW1hcmdpbnMoMjEpO1xuICAgIEBpbmNsdWRlIHJoeXRobWljLWxpbmUtaGVpZ2h0KDIxKTsgLy8gdGhpcyBpcyBmaW5lXG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludChicC1tZWRpdW0pIHtcbiAgICAgICAgQGluY2x1ZGUgZm9udC1zaXplLXRvLXJlbSgyNSwgJGJwLW0tYmFzZS1mb250LXNpemUpO1xuICAgICAgICBsaW5lLWhlaWdodDogMTtcbiAgICAgICAgQGluY2x1ZGUgcmh5dGhtaWMtdmVydGljYWwtbWFyZ2lucygyNSwgJGJwLW0tcHgtYmFzZS1saW5lLWhlaWdodCk7XG4gICAgfVxufVxuJWgyLCBcbmgyIHtcbiAgICBsZXR0ZXItc3BhY2luZzogLTAuMDJlbTtcbiAgICBAaW5jbHVkZSBmb250LXNpemUtdG8tcmVtKDI1KTtcbiAgICBAaW5jbHVkZSByaHl0aG1pYy12ZXJ0aWNhbC1tYXJnaW5zKDI1KTtcbiAgICBsaW5lLWhlaWdodDogMTsgLy8gdG8gZG86IG1heSB3YW50IHRvIG1ha2UgYWRqdXN0bWVudHMgdG8gcGFkZGluZy9tYXJnaW5zIHRvIGF0dGVtcHQgdG8gcHJlc2VydmUgdmVydGljYWwgcmh5dGhtIC8vIEBpbmNsdWRlIHJoeXRobWljLWxpbmUtaGVpZ2h0KDI1KTsgLy8gdGhpcyBpcyB0b28gdGlnaHRcbiAgICBAaW5jbHVkZSBicmVha3BvaW50KGJwLW1lZGl1bSkge1xuICAgICAgICBAaW5jbHVkZSBmb250LXNpemUtdG8tcmVtKDMzLCAkYnAtbS1iYXNlLWZvbnQtc2l6ZSk7XG4gICAgICAgIEBpbmNsdWRlIHJoeXRobWljLXZlcnRpY2FsLW1hcmdpbnMoMzMsICRicC1tLXB4LWJhc2UtbGluZS1oZWlnaHQpO1xuICAgIH1cbn1cbiVoMSwgXG5oMSB7XG4gICAgbGV0dGVyLXNwYWNpbmc6IC0wLjAyZW07XG4gICAgQGluY2x1ZGUgZm9udC1zaXplLXRvLXJlbSgzMyk7XG4gICAgQGluY2x1ZGUgcmh5dGhtaWMtdmVydGljYWwtbWFyZ2lucygzMyk7XG4gICAgbGluZS1oZWlnaHQ6IDE7IC8vIHRvIGRvOiBtYXkgd2FudCB0byBtYWtlIGFkanVzdG1lbnRzIHRvIHBhZGRpbmcvbWFyZ2lucyB0byBhdHRlbXB0IHRvIHByZXNlcnZlIHZlcnRpY2FsIHJoeXRobSAvLyBAaW5jbHVkZSByaHl0aG1pYy1saW5lLWhlaWdodCgzMyk7IC8vIGRvZXNuJ3Qgd29ya1xuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoYnAtbWVkaXVtKSB7XG4gICAgICAgIEBpbmNsdWRlIGZvbnQtc2l6ZS10by1yZW0oNTEsICRicC1tLWJhc2UtZm9udC1zaXplKTtcbiAgICAgICAgQGluY2x1ZGUgcmh5dGhtaWMtdmVydGljYWwtbWFyZ2lucyg1MSwgJGJwLW0tcHgtYmFzZS1saW5lLWhlaWdodCk7XG4gICAgfVxufVxuXG5cblxuLyolbmljZS1ib2R5LWxldHRlci1zcGFjaW5nIHtcbiAgICBsZXR0ZXItc3BhY2luZzogLS4wMTI1ZW07XG59Ki9cbmFydGljbGUge1xuICAgIHAsXG4gICAgbGksXG4gICAgZHQsXG4gICAgZGQge1xuICAgICAgICAvKkBleHRlbmQgJW5pY2UtYm9keS1sZXR0ZXItc3BhY2luZzsqL1xuICAgICAgICBoeXBoZW5zOiBhdXRvO1xuICAgIH1cbn1cbi8qLy8gTWFyayB0aGUgb3BlbmluZyBvZiBlYWNoIHBhc3NhZ2Ugb2YgdGV4dFxuLmFydGljbGUtYm9keSA+IHA6Zmlyc3QtY2hpbGQ6OmZpcnN0LWxpbmUge1xuICAgIC8vIGZvciBsZWdhY3kgYnJvd3NlcnNcbiAgICBmb250LWZlYXR1cmUtc2V0dGluZ3M6IFwic21jcFwiIDE7XG59XG5Ac3VwcG9ydHMgKGZvbnQtdmFyaWFudC1jYXBzOiBzbWFsbC1jYXBzKSB7XG4gICAgLmFydGljbGUtYm9keSA+IHA6Zmlyc3QtY2hpbGQ6OmZpcnN0LWxpbmUge1xuICAgICAgICBmb250LWZlYXR1cmUtc2V0dGluZ3M6IG5vcm1hbDtcbiAgICAgICAgZm9udC12YXJpYW50LWNhcHM6IHNtYWxsLWNhcHM7XG4gICAgfVxufSovXG5Ac3VwcG9ydHMoLXdlYmtpdC1pbml0aWFsLWxldHRlcjogMikge1xuICAgIC5hcnRpY2xlLWJvZHk6OmZpcnN0LWxldHRlciB7XG4gICAgICAgIC13ZWJraXQtaW5pdGlhbC1sZXR0ZXI6IDI7XG4gICAgICAgIGluaXRpYWwtbGV0dGVyOiAyO1xuICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAuNWVtO1xuICAgIH1cbn1cblxuYmxvY2txdW90ZSB7IC8vLnF1b3RlZFxuXG4gICAgcCB7XG4gICAgICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgICAgICAgaGFuZ2luZy1wdW5jdHVhdGlvbjogZmlyc3QgbGFzdDtcbiAgICAgICAgcXVvdGVzOiAn4oCcJyAn4oCdJyAn4oCYJyAn4oCZJztcbiAgICAgICAgJjpmaXJzdC1vZi10eXBlOjpiZWZvcmUge1xuICAgICAgICAgICAgY29udGVudDogb3Blbi1xdW90ZTtcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAtMC44M2NoO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZvb3RlciB7XG4gICAgfSAgIFxufVxuQHN1cHBvcnRzKGhhbmdpbmctcHVuY3R1YXRpb246IGZpcnN0IGxhc3QpIHtcbiAgICBibG9ja3F1b3RlIHA6Zmlyc3Qtb2YtdHlwZTo6YmVmb3JlIHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgfVxufVxuYmxvY2txdW90ZSBwOmxhc3Qtb2YtdHlwZTo6YWZ0ZXIgIHtcbiAgICBjb250ZW50OiBjbG9zZS1xdW90ZTtcbn1cbmJsb2NrcXVvdGUgcDpsYXN0LW9mLXR5cGUge1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG59XG4ucHVsbHF1b3RlIHtcbn1cblxuXG5maWd1cmUge1xufVxuIiwiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUNBQSw0RUFBNEU7QUFFNUU7Z0ZBQ2dGO0FBRWhGOzs7R0FHRztBQUVILEFBQUEsSUFBSSxDQUFDO0VBQ0gsV0FBVyxFQUFFLElBQUk7RUFBRSxPQUFPO0VBQzFCLHdCQUF3QixFQUFFLElBQUk7RUFBRSxPQUFPLEVBQ3hDOztBQUVEO2dGQUNnRjtBQUVoRjs7R0FFRztBQUVILEFBQUEsSUFBSSxDQUFDO0VBQ0gsTUFBTSxFQUFFLENBQUMsR0FDVjs7QUFFRDs7O0dBR0c7QUFFSCxBQUFBLEVBQUUsQ0FBQztFQUNELFNBQVMsRUFBRSxHQUFHO0VBQ2QsTUFBTSxFQUFFLFFBQVEsR0FDakI7O0FBRUQ7Z0ZBQ2dGO0FBRWhGOzs7R0FHRztBQUVILEFBQUEsRUFBRSxDQUFDO0VBQ0QsVUFBVSxFQUFFLFdBQVc7RUFBRSxPQUFPO0VBQ2hDLE1BQU0sRUFBRSxDQUFDO0VBQUUsT0FBTztFQUNsQixRQUFRLEVBQUUsT0FBTztFQUFFLE9BQU8sRUFDM0I7O0FBRUQ7OztHQUdHO0FBRUgsQUFBQSxHQUFHLENBQUM7RUFDRixXQUFXLEVBQUUsb0JBQW9CO0VBQUUsT0FBTztFQUMxQyxTQUFTLEVBQUUsR0FBRztFQUFFLE9BQU8sRUFDeEI7O0FBRUQ7Z0ZBQ2dGO0FBRWhGOztHQUVHO0FBRUgsQUFBQSxDQUFDLENBQUM7RUFDQSxnQkFBZ0IsRUFBRSxXQUFXLEdBQzlCOztBQUVEOzs7R0FHRztBQUVILEFBQUEsSUFBSSxDQUFBLEFBQUEsS0FBQyxBQUFBLEVBQU87RUFDVixhQUFhLEVBQUUsSUFBSTtFQUFFLE9BQU87RUFDNUIsZUFBZSxFQUFFLFNBQVM7RUFBRSxPQUFPO0VBQ25DLGVBQWUsRUFBRSxnQkFBZ0I7RUFBRSxPQUFPLEVBQzND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 */
