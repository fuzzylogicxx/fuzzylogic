/* ==========================================================================
   # TOKENS
   ========================================================================== */

:root {
  --color-dark: #141414;
  --color-white: #fff;
  --color-link: rgb(14, 131, 123);
  --color-link-hover: rgb(8,78,73); /* 40% darker. Less than 30% wasn’t noticeable on hover */
}



/* ==========================================================================
   # SIMPLEST RESET (JUST A 1ST DRAFT)
   ========================================================================== */

/**
 * 1. Figure is for images, illustrations, diagrams, code snippets etc. No need
 * for any of those use cases to require the browser default inline margin.
 */

html {
  box-sizing: border-box;
}

*,
*:before,
*:after {
  box-sizing: inherit;
}

body {
	color: var(--color-dark);
  font-family: system-ui, sans-serif;
  font-size: 115%;
  line-height: 1.4;
  margin: 0;
  padding: 0;
}

img {
  max-width: 100%;
}

svg {
  display: block;
}

/* 1 */
figure {
  margin-inline: 0;
}


// https://css-tricks.com/styling-code-in-and-out-of-blocks/

// For all <code>

// https://github.com/h5bp/html5-boilerplate/blob/main/dist/css/normalize.css
// …because browsers have weird sizing quirks for the code element.
/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
 code,
 kbd,
 samp,
 pre {
   font-family: monospace, monospace; /* 1 */
   font-size: 1em; /* 2 */
 }

// Code in text
p > code,
li > code,
dd > code,
td > code {
  background: #ffeff0;
  word-wrap: break-word;

  // https://caniuse.com/css-boxdecorationbreak
  -webkit-box-decoration-break: clone;
  box-decoration-break: clone;

  padding: .1rem .3rem .2rem;
  border-radius: .2rem;
}

// Code blocks
pre > code {
  display: block;
  background: none;
  white-space: pre;
  -webkit-overflow-scrolling: touch;
  overflow-x: scroll;
  max-width: 100%;
  min-width: 100px;
  padding: 0;
}

/* ==========================================================================
   # LINKS
   ========================================================================== */

a {
  color: var(--color-link);

  &:hover {
    color: var(--color-link-hover);
  }
}


/* ==========================================================================
   # LISTS
   ========================================================================== */

ul[role='list'],
ol[role='list'] {
  list-style: none;
  margin-inline: 0;
  padding-inline: 0;
}


/* ==========================================================================
   # HIDING
   ========================================================================== */

/*
 * 1. Hide from all contexts
 * 2. Hide visually but not from keyboard navigation nor from screen readers.
 * Ref: Scott O’Hara’s best practice method https://www.scottohara.me/blog/2017/04/14/inclusively-hidden.html
 * 3. Alternative visually hidden technique for special cases when we want to animate content into view on focus…
 * …the most common example being the “Skip to content” pattern.
*/

/* [1] */

.u-hidden-from-all,
[hidden] {
  display: none !important;
}

/* [2] */

.u-visually-hidden:not(:focus):not(:active) {
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px; /* stylelint-disable-line unit-disallowed-list */
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px; /* stylelint-disable-line unit-disallowed-list */
}

/* [3] */

.u-hidden-until-focused {
  left: -100vw;
  position: absolute;

  &__item {
    z-index: 1;
    background: var(--color-link-hover);
    color: var(--color-white);
    left: 0;
    padding: 0.75em;
    position: fixed;
    top: 0;
    transform: translateY(-10em);
    transition: transform .2s ease-in-out;

    &:focus {
      transform: translateY(0em); /* stylelint-disable-line length-zero-no-unit */
    }
  }

  .u-hidden-until-focused__link {

    &:hover {
      color: var(--color-white);
    }
  }
}

/* ==========================================================================
   # IMAGES
   ========================================================================== */

/*
 * 1. Remove the border on images in older browsers.
 * 2. Set images to display block because we will never want to display them inline.
 * 3. Prevent wide images from overflowing their parent, and cap their width sensibly.
 * 4. Ensure an image’s aspect ratio is maintained when it has the HTML height attribute set AND also CSS max-width has been triggered.
 * 5. Explictly set an image to 100% container-width so that we know it will achieve that width even if
      it has a width attribute (present for performance reasons) set to something narrower. Note: I have not included height: auto.
      It’s only required when the image has the HTML height attribute set and I already have a previous rule handling that.
*/

img {
  /* [1] */
  border-style: none;

  /* [2] */
  display: block;

  /* [3] */
  max-width: 100%;
  max-width: min(60rem, 100%); /* stylelint-disable-line declaration-block-no-duplicate-properties */

  /* [4] */
  &[height] {
    height: auto;
  }
}

/* [5] */
.u-full-parent-width {
  width: 100% !important;
}


/* ==========================================================================
   # ICONS
   ========================================================================== */

.text-icon-pair { // todo: rename to .icon__with-text or similar
  display: inline-flex;
  align-items: center;
  gap: 0.125em;
}


/* ==========================================================================
   # BUTTONS
   ========================================================================== */

// todo: the HTML should reuse .icon__with-text rather than reinventing.

.btn-icon {
  display: flex;
  align-items: center;
  gap: 0.125em;
}


/* ==========================================================================
   # ARTICLES
   ========================================================================== */

// this is horrible. To do: sort the HTML out.

article header div {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.traverse {
  display: flex;
  justify-content: space-between;
}

/* ==========================================================================
   # PAGE LAYOUT
   ========================================================================== */

// Temporary way of setting measure just so that banner can be full-width but everything else not.
#global-header, main, #global-footer {
  max-width: 65ch;
  margin: 1rem;
}


/* ==========================================================================
   # BANNER
   ========================================================================== */

.banner {
  max-width: 100%;
  background: #333;
  color: #fff;
  padding: 1rem;

  > * {
    margin: 0;
  }
}

/* ==========================================================================
   # LOGO
   ========================================================================== */

.logo {
  color: var(--color-dark);
  font-size: 1.75em;
  text-decoration: none;
  display: flex;
  gap: 0.75rem;
  align-items: center;

  &:hover {
    color: var(--color-link-hover);
  }

  &__text {
    font-size: 0.8em;
    margin-block-start: 12px;
    letter-spacing: -0.0125em;
  }
}
