/****************
* Theme
*****************/

:root {
  --measure: 60ch;
  --ratio: 1.5;

  // colours

  // contrasting bg and text colours.
  --c-bg: #fff;
  --c-text: #000;

  @media (prefers-color-scheme: dark) {
    --c-bg: #000;
    --c-text: #fff;
  }

  // For browsers that support automatic dark/light mode
  // plus system colors, adopt system colours.
  @supports (color-scheme: light dark)
    and (background-color: Canvas)
    and (color: CanvasText) {
    :root {
      --c-bg: Canvas;
      --c-text: CanvasText;
    }
  }


  // Fix iOS Safari. Hacky, but works.
  @supports (background-color: -apple-system-control-background)
    and (color: text) {
    :root {
      --c-bg: -apple-system-control-background;
      --c-text: text;
    }
  }
}

/*****************
* Document Styles
*****************/

:root {
  // Let the browser dictate the default text and background colour.
  // https://blog.jim-nielsen.com/2021/css-system-colors/
  color-scheme: light dark;

  // Firefox doesn’t handle dark mode for you automatically
  @supports not (color-scheme: light dark) {
    background: var(--c-bg);
    color: var(--c-text);
  }

  @media (min-width: 960px) {
    // ↓ Upscale by 25% at 960px
    // works because we use relative rather than px values for element font sizing.
    // no need to update those elements individually.
    font-size: 125%;
  }
}

body {
  font-family: system-ui, -apple-system, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji";
  line-height: var(--ratio);
}

// Ensuring a readable measure
// Achieved via exception-based styling
// Ref: https://every-layout.dev/rudiments/axioms/

* {
  max-width: var(--measure);
}

html,
body,
div,
header,
nav,
main,
footer {
  max-width: none;
}

// Box-sizing
// Inheriting box-sizing is best practice
// https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/

html {
  box-sizing: border-box;
}

*,
*:before,
*:after {
  box-sizing: inherit;
}

/****************
* Element styles
*****************/

// Links

a {
  color: #d66351;
}

// Fixing the accessibility of custom-styled lists
// https://www.scottohara.me/blog/2019/01/12/lists-and-safari.html

[role=list] {
  list-style: none;
  margin-left: 0;
  margin-right: 0;
  padding-left: 0;
  padding-right: 0;
}

/****************
* Utilities
*****************/

// Text which should not be hyphenated

.u-no-hyphens {
  hyphens: none;
}

// Hiding elements
// (https://fuzzylogic.me/posts/how-to-hide-elements-for-different-browsing-contexts/)

// Hide from all contexts

.u-hidden-from-all,
[hidden] {
  display: none !important;
}

// Hide visually but not from keyboard navigation nor from screen readers.
// For now I’m sticking with the Scott O’Hara method
// https://www.scottohara.me/blog/2017/04/14/inclusively-hidden.html
// …rather than the .text-assistive method here https://css-tricks.com/a-deep-dive-on-skipping-to-content/

.u-visually-hidden:not(:focus):not(:active) {
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

// An alternative visually hidden technique.
// …for special cases when we want to animate visually hidden content into view on focus.
// The best example being a “Skip to content” pattern.
// Apply this to the container (which might be a ul, or a div, depending on number of inner items)

.u-hidden-off-screen {
  left: -100vw;
  position: absolute;

  // Fix the container’s inner focusable elements (e.g. skip links) to top of the page,
  // but with an initial negative Y-axis value so they’re off-screen until animated.

  &__item {
    background: #000;
    color: #fff;
    left: 0;
    padding: .75em;
    position: fixed;
    top: 0;
    transform: translateY(-10em);
    transition: transform .2s ease-in-out;
  }

  // Upon focus of inner item, transition
  // it into view by setting it's Y-axis to
  // the default 0 value.

  &__item:focus {
    transform: translateY(0em);
  }
}



/*****
* Icon
*****/

.icon {
  height: 0.75em;
  height: 1cap;
  width: 0.75em;
  width: 1cap;
  vertical-align: -0.1em;
}

/****************
* Overrides
*****************/

.o-font-size\:base {
  font-size: var(--font-size-base) !important;
}
