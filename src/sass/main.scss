/* ==========================================================================
   # CASCADE LAYERS DEFINTION
   ========================================================================== */

/**
 * Establish a layer order up-front, from lowest to highest priority.
 */

@layer reset, base, layouts, components, utilities;


/* ==========================================================================
   # TOKENS
   ========================================================================== */

@layer base {
  :root {
    // Colours
    --color-dark: #141414;
    --color-light: #fff;
    --color-link: rgb(14, 131, 123);
    --color-link-hover: rgb(8,78,73); /* 40% darker. Less than 30% wasn’t noticeable on hover */

    // Fluid type, moving between two modular scales (i) tighter; and ii) more expansive)
    // @link https://utopia.fyi/type/calculator?c=320,17,1.067,1140,19,1.125,5,2,&s=0.75|0.5|0.25,1.5|2|3|4|6,s-l
    --step--2: clamp(0.93rem, calc(0.93rem + 0.01vw), 0.94rem);
    --step--1: clamp(1.00rem, calc(0.97rem + 0.12vw), 1.06rem);
    --step-0: clamp(1.06rem, calc(1.01rem + 0.24vw), 1.19rem);
    --step-1: clamp(1.13rem, calc(1.05rem + 0.40vw), 1.34rem);
    --step-2: clamp(1.21rem, calc(1.09rem + 0.57vw), 1.50rem);
    --step-3: clamp(1.29rem, calc(1.13rem + 0.78vw), 1.69rem);
    --step-4: clamp(1.38rem, calc(1.17rem + 1.02vw), 1.90rem);
    --step-5: clamp(1.47rem, calc(1.21rem + 1.31vw), 2.14rem);

    // Fluid space, moving between two modular scales (i) tighter; and ii) more expansive)
    // @link https://utopia.fyi/space/calculator?c=320,17,1.067,1140,19,1.125,5,2,&s=0.75|0.5|0.25,1.5|2|3|4|6,s-l
    --space-3xs: clamp(0.25rem, calc(0.23rem + 0.12vw), 0.31rem);
    --space-2xs: clamp(0.56rem, calc(0.54rem + 0.12vw), 0.63rem);
    --space-xs: clamp(0.81rem, calc(0.79rem + 0.12vw), 0.88rem);
    --space-s: clamp(1.06rem, calc(1.01rem + 0.24vw), 1.19rem);
    --space-m: clamp(1.63rem, calc(1.55rem + 0.37vw), 1.81rem);
    --space-l: clamp(2.13rem, calc(2.03rem + 0.49vw), 2.38rem);
    --space-xl: clamp(3.19rem, calc(3.04rem + 0.73vw), 3.56rem);
    --space-2xl: clamp(4.25rem, calc(4.05rem + 0.98vw), 4.75rem);
    --space-3xl: clamp(6.38rem, calc(6.08rem + 1.46vw), 7.13rem);

    /* One-up pairs */
    --space-3xs-2xs: clamp(0.25rem, calc(0.10rem + 0.73vw), 0.63rem);
    --space-2xs-xs: clamp(0.56rem, calc(0.44rem + 0.61vw), 0.88rem);
    --space-xs-s: clamp(0.81rem, calc(0.67rem + 0.73vw), 1.19rem);
    --space-s-m: clamp(1.06rem, calc(0.77rem + 1.46vw), 1.81rem);
    --space-m-l: clamp(1.63rem, calc(1.33rem + 1.46vw), 2.38rem);
    --space-l-xl: clamp(2.13rem, calc(1.56rem + 2.80vw), 3.56rem);
    --space-xl-2xl: clamp(3.19rem, calc(2.58rem + 3.05vw), 4.75rem);
    --space-2xl-3xl: clamp(4.25rem, calc(3.13rem + 5.61vw), 7.13rem);

    /* Custom pairs */
    --space-s-l: clamp(1.06rem, calc(0.55rem + 2.56vw), 2.38rem);
  }
}


/* ==========================================================================
   # FONTS
   ========================================================================== */

@layer base {

  @font-face {
    font-family: Source Sans Pro;
    src: url(/fonts/sans/SourceSans3-Regular-subset.woff2) format("woff2"),
        url(/fonts/sans/SourceSans3-Regular-subset.zopfli.woff) format("woff");
    font-weight: 400;
    font-display: swap;
  }

  @font-face {
    font-family: Source Sans Pro;
    src: url(/fonts/sans/SourceSans3-It-subset.woff2) format("woff2"),
        url(/fonts/sans/SourceSans3-It-subset.zopfli.woff) format("woff");
    font-weight: 400;
    font-style: italic;
    font-display: swap;
  }

  @font-face {
    font-family: Source Sans Pro;
    src: url(/fonts/sans/SourceSans3-Semibold-subset.woff2) format("woff2"),
        url(/fonts/sans/SourceSans3-Semibold-subset.zopfli.woff) format("woff");
    font-weight: 600;
    font-display: swap;
  }

}


/* ==========================================================================
   # SIMPLEST RESET (JUST A 1ST DRAFT)
   ========================================================================== */

/**
 * 1. Figure is for images, illustrations, diagrams, code snippets etc. No need
 * for any of those use cases to require the browser default inline margin.
 */

@layer base {

  html {
    box-sizing: border-box;

    // Disable now-unnecessary iPhone behaviour
    // https://css-tricks.com/your-css-reset-needs-text-size-adjust-probably/
    text-size-adjust: none;
    -webkit-text-size-adjust: none;
  }

  *,
  *:before,
  *:after {
    box-sizing: inherit;
  }

  body, h1, h2, h3, h4, p, figure, blockquote, dl, dd {
    margin: 0;
  }

  body {
    color: var(--color-dark);
    font-family: 'Source Sans Pro', system-ui, sans-serif;
    font-size: var(--step-0);
    line-height: 1.4;
    min-height: 100vh;
  }

  p, li, blockquote {
    max-width: 65ch;
  }

  h1, h2, h3 {
    max-width: 50ch;
  }

  ul, ol {
    margin: 0;
    padding: 0;
  }

  ul[role='list'],
  ol[role='list'] {
    list-style: none;
  }

  img, picture {
    max-width: 100%;
  }

  input, button, textarea, select {
    font: inherit;
  }

  svg {
    display: block;
  }


  // Code snippets and blocks

  // https://css-tricks.com/styling-code-in-and-out-of-blocks/

  // For all <code>

  // https://github.com/h5bp/html5-boilerplate/blob/main/dist/css/normalize.css
  // …because browsers have weird sizing quirks for the code element.
  /**
  * 1. Correct the inheritance and scaling of font size in all browsers.
  * 2. Correct the odd `em` font sizing in all browsers.
  * 3. For the specific combo of monospace within Source Sans Pro, less than 1em works better.
  */
  code,
  kbd,
  samp,
  pre {
    font-family: monospace, monospace; /* 1 */
    font-size: 1em; /* 2 */
  }

  // Code in text
  p > code,
  li > code,
  dd > code,
  td > code {
    font-size: 0.95em; /* 3 */
    background: #ffeff0;
    word-wrap: break-word;

    // https://caniuse.com/css-boxdecorationbreak
    -webkit-box-decoration-break: clone;
    box-decoration-break: clone;

    padding: .1rem .3rem .2rem;
    border-radius: .2rem;
  }

  // Code blocks
  pre > code {
    display: block;
    background: none;
    white-space: pre;
    -webkit-overflow-scrolling: touch;
    overflow-x: scroll;
    max-width: 100%;
    min-width: 100px;
    padding: 0;
  }

}

/* ==========================================================================
   # LINKS
   ========================================================================== */

@layer base {

  a {
    color: var(--color-link);

    &:hover {
      color: var(--color-link-hover);
    }
  }

}


/* ==========================================================================
   # TYPOGRAPHY
   ========================================================================== */

@layer base {

  h1, h2, h3, h4, h5, h6 {
    font-weight: 600;
  }

  h1 {
    font-size: var(--step-3);
    line-height: 1;
  }

  h2 {
    font-size: var(--step-2);
    line-height: 1.1;
  }

  h3 {
    font-size: var(--step-1);
    line-height: 1.2;
  }

}


/* ==========================================================================
   # HIDING
   ========================================================================== */

/*
 * 1. Hide from all contexts
 * 2. Hide visually but not from keyboard navigation nor from screen readers.
 * Ref: Scott O’Hara’s best practice method https://www.scottohara.me/blog/2017/04/14/inclusively-hidden.html
 * 3. Alternative visually hidden technique for special cases when we want to animate content into view on focus…
 * …the most common example being the “Skip to content” pattern.
*/

@layer utilities {

  /* [1] */
  .u-hidden-from-all,
  [hidden] {
    display: none !important;
  }

  /* [2] */

  .u-visually-hidden:not(:focus):not(:active) {
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
    height: 1px; /* stylelint-disable-line unit-disallowed-list */
    overflow: hidden;
    position: absolute;
    white-space: nowrap;
    width: 1px; /* stylelint-disable-line unit-disallowed-list */
  }

  /* [3] */

  .u-hidden-until-focused {
    left: -100vw;
    position: absolute;

    &__item {
      z-index: 1;
      background: var(--color-link-hover);
      color: var(--color-light);
      left: 0;
      padding: 0.75em;
      position: fixed;
      top: 0;
      transform: translateY(-10em);
      transition: transform .2s ease-in-out;

      &:focus {
        transform: translateY(0em); /* stylelint-disable-line length-zero-no-unit */
      }
    }

    .u-hidden-until-focused__link {

      &:hover {
        color: var(--color-light);
      }
    }
  }

}

/* ==========================================================================
   # IMAGES
   ========================================================================== */

/*
 * 1. Remove the border on images in older browsers.
 * 2. Set images to display block because we will never want to display them inline.
 * 3. Prevent wide images from overflowing their parent, and cap their width sensibly.
 * 4. Ensure an image’s aspect ratio is maintained when it has the HTML height attribute set AND also CSS max-width has been triggered.
 * 5. Explictly set an image to 100% container-width so that we know it will achieve that width even if
      it has a width attribute (present for performance reasons) set to something narrower. Note: I have not included height: auto.
      It’s only required when the image has the HTML height attribute set and I already have a previous rule handling that.
*/

@layer base {

  img {
    /* [1] */
    border-style: none;

    /* [2] */
    display: block;

    /* [3] */
    max-width: 100%;
    max-width: min(60rem, 100%); /* stylelint-disable-line declaration-block-no-duplicate-properties */

    /* [4] */
    &[height] {
      height: auto;
    }
  }

}

@layer utilities {

  /* [5] */
  .u-full-parent-width {
    width: 100% !important;
  }

}

/* ==========================================================================
   # LAYOUTS
   ========================================================================== */


@layer layouts {

  .l-flow > * + * {
    margin-top: var(--flow-space,1em);
  }

}


/* ==========================================================================
   # ICONS
   ========================================================================== */

@layer components {

  .text-icon-pair { // todo: rename to .icon__with-text or similar
    display: inline-flex;
    align-items: center;
    gap: 0.125em;

    & > svg {
      width: 0.75em;
      height: 0.75em;
    }
  }

}





/* ==========================================================================
   # BUTTONS
   ========================================================================== */

// todo: the HTML should reuse .icon__with-text rather than reinventing.

@layer components {

  .btn-icon {
    display: flex;
    align-items: center;
    gap: 0.125em;
  }

}


/* ==========================================================================
   # ARTICLES
   ========================================================================== */

// this is horrible. To do: sort the HTML out.

@layer components {

  // Lists of articles
  .h-feed {
    // --flow-space: 3em;
  }

  // Individual articles
  .h-entry {
    // --flow-space: 1em;
  }

  article header div {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .dt-published {
    font-size: var(--step--1);
  }

  .traverse {
    display: flex;
    justify-content: space-between;
  }

}

/* ==========================================================================
   # PAGE LAYOUT
   ========================================================================== */

@layer components {

  // Temporary way of setting measure just so that banner can be full-width but everything else not.
  #global-header, main, #global-footer {
    // max-width: 65ch;
    // margin: 1rem;

    padding-inline: 1.5em; // temp
  }

}


/* ==========================================================================
   # BANNER
   ========================================================================== */

@layer components {

  .banner {
    background: #333;
    color: #fff;
    margin: 0; // ensure there’s no margin-top arising from the parent using our “flow” layout.
    padding: 1em 1.5em;

    & > * {
      max-width: unset;
    }
  }

}

/* ==========================================================================
   # LOGO
   ========================================================================== */

@layer components {

  .logo {
    color: var(--color-dark);
    font-size: 1.5em;
    text-decoration: none;
    display: flex;
    gap: 0.75rem;
    align-items: center;

    &:hover {
      color: var(--color-link-hover);
    }

    &__text {
      font-size: 0.8em;
      margin-block-start: 14px;
      letter-spacing: -0.0125em;
    }
  }

}
