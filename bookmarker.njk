---
excludeFromSitemap: true
permalink: bookmarker/index.html
layout:
---
<!doctype html>
<html dir="ltr" lang="en-GB">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bookmarker | Fuzzy Logic</title>

    {# <link rel="preload" href="/fonts/sans/SourceSansPro-Regular-subset-v4.woff2" as="font" type="font/woff2" crossorigin>
    <link rel="preload" href="/fonts/sans/source-sans-pro-v12-latin-600.woff2" as="font" type="font/woff2" crossorigin>
    <link rel="preload" href="/fonts/sans/SourceSansPro-It-subset-v4.woff2" as="font" type="font/woff2" crossorigin> #}

    {# <link href="/css/theme.css" rel="stylesheet"> #}
    {# <style>{% include "css/main.css" %}</style> #}

    <style>
      label:not(.radio-label) {
        display: block;
      }
      .form-group {
        margin-top: 1rem;
      }
    </style>

    <meta name="robots" content="noindex, nofollow">

    <!-- Advice for devices which can 'install' this website on their home screen -->
    <link rel="manifest" href="/manifest.webmanifest">

    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
    <link rel="mask-icon" href="/safari-pinned-tab.svg" color="#5bbad5">
    <meta name="apple-mobile-web-app-title" content="{{ metadata.name }}">
    <meta name="application-name" content="{{ metadata.name }}">
    <meta name="msapplication-TileColor" content="#da532c">
  </head>
  <body{% if bodyclass %} class="{{ bodyclass }}"{% endif %}>

    <main id="primary-content" class="primary-content">

      <h1>Create Bookmark 1</h1>

      <div data-controller="hello">

        <form class="form-custom" accept-charset="UTF-8">

          <div class="form-group">
            <span>Type</span>
            <div>
                <input type="radio" id="bookmark" name="posttype" value="bookmark" checked>
                <label class="radio-label" for="huey">Bookmark</label>
              </div>

              <div>
                <input
                  type="radio"
                  id="newbook"
                  name="posttype"
                  value="newbook"
                  data-action="hello#revealBookFields">
                <label class="radio-label" for="newbook">Started reading</label>
              </div>

              <div>
                <input type="radio" id="somethingelse" name="posttype" value="somethingelse">
                <label class="radio-label" for="somethingelse">Something else</label>
              </div>
          </div>

          <div data-hello-target="newbookfields" hidden>
            <div class="form-group">
              <label for="booktitle">Book Title</label>
              <input id="booktitle" name="booktitle" data-hello-target="booktitle" type="text">
            </div>

            <div class="form-group">
              <label for="bookauthor">Book Author</label>
              <input id="bookauthor" name="bookauthor" data-hello-target="bookauthor" type="text">
            </div>

            <div class="form-group">
              <label for="bookafilliateurl">Bookshop Affiliate URL</label>
              <input
                type="text"
                id="bookafilliateurl"
                name="bookafilliateurl"
                data-hello-target="bookaffiliateurl"
                data-action="blur->hello#populateFieldsForBookPost">
            </div>
          </div>

          <div data-hello-target="bookmarkfields">
            <div class="form-group">
              <label for="title">Post Title</label>
              <input id="title" name="title" data-hello-target="title" type="text">
            </div>

            <div class="form-group">
              <label for="description">Post Meta Description</label>
              <textarea data-hello-target="description"></textarea>
            </div>

            <div class="form-group">
              <label for="excerpt">Post Excerpt</label>
              <textarea data-hello-target="excerpt"></textarea>
            </div>

            <div class="form-group">
              <label for="body">Post Body</label>
              <textarea name="body" data-hello-target="body"></textarea>
            </div>

            <div class="form-group">
              <label for="url">3rd Party URL</label>
              <input name="url" data-hello-target="url" type="text">
            </div>

            <div class="form-group">
              <label for="location">Location</label>
              <input data-hello-target="location" type="text">
            </div>

            <div class="form-group">
              <label for="via">Via (optional)</label>
              <input data-target="hello.via" type="text">
            </div>

          </div>

          <div class="form-group">
            <label for="tags">Tags</label>
            <input data-hello-target="tags" type="text">
          </div>

          <div class="form-group">
            <label for="token">Token</label>
            <input id="token" data-target="hello.token" type="text" name="token" autocomplete="current-password">
          </div>

          <div class="form-group a11y-only" aria-hidden="true" style="visibility: hidden;">
            <label for="h0neep0ot">Strictly for non-people</label>
            <input id="h0neep0ot" name="h0neep0ot" data-target="hello.h0neep0ot" type="text">
          </div>

          <div class="form-group">
            <button data-action="click->hello#save">Save</button>
          </div>

        </form>

      </div>

    </main>

    {# <p>Bookmarklet: <a class="bookmarklet" href="javascript:(function(){var title = document.getElementsByTagName('title')[0].innerHTML;title = encodeURIComponent(title);var selection = '';if (window.getSelection) {selection = window.getSelection().toString();} else if (document.selection &amp;&amp; document.selection.type != 'Control') {selection = document.selection.createRange().text;}selection = encodeURIComponent(selection);new_window=window.open('https://fuzzylogic.me/bookmarker/?title='+title+'&amp;body='+selection+'&amp;url='+encodeURIComponent(document.location.href),'Bookmarker','resizable,scrollbars,status=0,toolbar=0,menubar=0,titlebar=0,width=680,height=700,location=0');})();">Boob</a></p> #}


    <!-- Polyfills before any other scripts so that subsequent JS (which might use matches() and so on) is polyfilled -->
    <script crossorigin="anonymous" src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>

    <script type="module">
      import { Application, Controller } from "https://unpkg.com/@hotwired/stimulus/dist/stimulus.js"
      window.Stimulus = Application.start()

      Stimulus.register("hello", class extends Controller {
        static targets = [
          "newbookfields", "bookmarkfields", "token",
          "booktitle", "bookauthor", "bookaffiliateurl",
          "title", "description", "excerpt", "body", "url", "location", "via", "tags", "h0neep0ot"
        ]

        connect() {
          const queryParams = new URLSearchParams(window.location.search);

          this.tagsTarget.value = "link,";
          if (queryParams.get("title")) {
            this.titleTarget.value = queryParams.get("title");
          }
          this.excerptTarget.value = (!queryParams.get("body") ? "" : `> ${queryParams.get("body")}`);
          if (queryParams.get("url")) {
            this.urlTarget.value = queryParams.get("url");
          }
        }

        revealBookFields(e) {
          this.newbookfieldsTarget.hidden = false;
          //this.bookmarkfieldsTarget.hidden = true;
        }

        populateFieldsForBookPost() {
          this.titleTarget.value = `Reading ${this.booktitleTarget.value} by ${this.bookauthorTarget.value}`;
          this.descriptionTarget.value = `I’ve started reading ${this.booktitleTarget.value}, by ${this.bookauthorTarget.value}.`;
          this.bodyTarget.value = `I’ve started reading [${this.booktitleTarget.value}](${this.bookaffiliateurlTarget.value}), by ${this.bookauthorTarget.value}.`;
          this.locationTarget.value = "Glasgow";
          this.tagsTarget.value = "note, book,";
        }

        // Save Bookmark
        save(e) {
          e.preventDefault();

          const url = '/.netlify/functions/share'; // http://localhost:8888/.netlify/functions/share

          if (this.h0neep0otTarget.value.length) {
            console.log("Bad robot");
            return;
          }

          fetch(url, {
              method: 'POST',
              body: JSON.stringify({
                token: this.tokenTarget.value,
                title: this.titleTarget.value,
                description: this.descriptionTarget.value,
                excerpt: this.excerptTarget.value,
                body: this.bodyTarget.value,
                url: this.urlTarget.value,
                via: this.viaTarget.value,
                tags: this.tagsTarget.value
              }),
              headers: {
                  'Content-Type': 'application/json'
              }
          }).then((response) => {
            console.log(response);
          }).catch((err) => {
            console.log(err);
          });
        }
      })
    </script>
  </body>
</html>
